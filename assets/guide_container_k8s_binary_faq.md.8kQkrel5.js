import{_ as e,o,c as t,R as r}from"./chunks/framework.zUbWieqp.js";const _=JSON.parse('{"title":"1.29.x","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/binary/faq.md","filePath":"guide/container/k8s/binary/faq.md","lastUpdated":1726994086000}'),a={name:"guide/container/k8s/binary/faq.md"},l=r('<h1 id="_1-29-x" tabindex="-1">1.29.x <a class="header-anchor" href="#_1-29-x" aria-label="Permalink to &quot;1.29.x&quot;">​</a></h1><h2 id="_1-1-logtostderr废弃" tabindex="-1">1.1 logtostderr废弃 <a class="header-anchor" href="#_1-1-logtostderr废弃" aria-label="Permalink to &quot;1.1 logtostderr废弃&quot;">​</a></h2><p>Kubernetes 1.29 已经移除了 <code>--logtostderr</code> 这个参数。</p><p>从 Kubernetes 1.23 开始，Kubernetes 开始逐步移除基于 <code>klog</code> 的日志标志，例如 <code>--logtostderr</code>，并转而支持结构化日志。现在，日志输出默认会被重定向到标准错误输出 (<code>stderr</code>)。</p><p>你可以通过以下方式管理日志输出：</p><ul><li>使用 <code>--logging-format=json</code> 输出 JSON 格式的结构化日志。</li><li>使用 <code>--log-file</code> 指定将日志输出到某个文件，而不是 <code>stderr</code></li></ul><h2 id="_1-2-log-dir废弃" tabindex="-1">1.2 --log-dir废弃 <a class="header-anchor" href="#_1-2-log-dir废弃" aria-label="Permalink to &quot;1.2 --log-dir废弃&quot;">​</a></h2><p>从 Kubernetes 1.23 开始，Kubernetes 已经开始移除与 <code>klog</code> 相关的日志标志，如 <code>--log-dir</code>。Kubernetes 正在转向更现代化的日志管理方式，包括使用结构化日志和通过标准化的手段进行日志输出。</p><p>在新版 Kubernetes 中，日志管理可以通过以下方式处理：</p><ul><li>如果你需要将日志写入文件，可以使用 <code>--log-file</code> 参数，这样日志将会被直接输出到指定的文件，而不再需要 <code>--log-dir</code> 来指定目录。</li><li>你还可以选择使用 <code>--logging-format=json</code> 来生成 JSON 格式的结构化日志，方便进一步处理和分析。</li></ul><p>因此，在 Kubernetes 1.29 中，<code>--log-dir</code> 参数已经不再支持，推荐使用 <code>--log-file</code> 或其他现代化的日志管理方式。</p><h2 id="_1-3-insecure-port废弃" tabindex="-1">1.3 --insecure-port废弃 <a class="header-anchor" href="#_1-3-insecure-port废弃" aria-label="Permalink to &quot;1.3 --insecure-port废弃&quot;">​</a></h2><h2 id="_1-4-token-auth-file-废弃" tabindex="-1">1.4 --token-auth-file 废弃 <a class="header-anchor" href="#_1-4-token-auth-file-废弃" aria-label="Permalink to &quot;1.4 --token-auth-file 废弃&quot;">​</a></h2><h4 id="token-auth-file" tabindex="-1"><strong><code>--token-auth-file</code></strong> <a class="header-anchor" href="#token-auth-file" aria-label="Permalink to &quot;**`--token-auth-file`**&quot;">​</a></h4><ul><li><p><strong>问题</strong>: <code>--token-auth-file</code> 参数在 Kubernetes 1.24 版本中已被移除，并在 Kubernetes 1.29 中完全不再支持。该参数用于静态令牌文件进行身份验证，但由于安全原因，静态令牌已被弃用。</p></li><li><p><strong>建议</strong>:</p><ul><li><p><strong>移除</strong>: 从您的配置中移除 <code>--token-auth-file=/etc/kubernetes/manifests/token.csv</code>。</p></li><li><p>替代方案</p><p>:</p><ul><li><strong>Bootstrap Tokens</strong>: 使用 Bootstrap Token 进行节点引导和身份验证。这需要确保 <code>--enable-bootstrap-token-auth=true</code> 已启用（您的配置中已启用）。</li><li><strong>Webhook Token Authentication</strong>: 通过外部身份验证系统（如 LDAP、OAuth2）实现动态身份验证。</li><li><strong>OpenID Connect (OIDC)</strong>: 集成 OIDC 提供者以实现更安全和灵活的身份验证。</li></ul></li></ul></li></ul>',15),n=[l];function i(d,s,c,u,h,g){return o(),t("div",null,n)}const f=e(a,[["render",i]]);export{_ as __pageData,f as default};
