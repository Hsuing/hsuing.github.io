import{_ as s,o as a,c as n,R as o}from"./chunks/framework.zUbWieqp.js";const F=JSON.parse('{"title":"1. BSC节点维护","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Blockchain/BSC/6.maintain_node.md","filePath":"guide/Blockchain/BSC/6.maintain_node.md","lastUpdated":1736763438000}'),l={name:"guide/Blockchain/BSC/6.maintain_node.md"},e=o('<h1 id="_1-bsc节点维护" tabindex="-1">1. BSC节点维护 <a class="header-anchor" href="#_1-bsc节点维护" aria-label="Permalink to &quot;1. BSC节点维护&quot;">​</a></h1><p><a href="https://docs.bnbchain.org/bnb-smart-chain/developers/node_operators/node_maintenance/" target="_blank" rel="noreferrer">官当</a></p><h2 id="_1-1-离线维护" tabindex="-1">1.1 离线维护 <a class="header-anchor" href="#_1-1-离线维护" aria-label="Permalink to &quot;1.1 离线维护&quot;">​</a></h2><p>这个的前提下必须有<code>备机</code>,保证服务不中断</p><p>根据官方测试，当存储量达到高容量时（之前是 1.5TB，这是一个实验值，最新数字需要更新），全节点的性能会下降。我们建议全节点通过修剪存储来始终保持 light storage。</p><ul><li>停止BSC节点</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bsc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stop</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bsc</span></span></code></pre></div><ul><li>清理数据</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">screen</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-S</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clean_bsc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/data/apps/geth_bsc_v1.4.16</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">geth</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">snapshot</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">prune-state</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--datadir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/data/bsc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">screen</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-S</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clean_bsc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/data/apps/geth_bsc_v1.4.16</span><span style="color:#24292E;"> </span><span style="color:#032F62;">geth</span><span style="color:#24292E;"> </span><span style="color:#032F62;">snapshot</span><span style="color:#24292E;"> </span><span style="color:#032F62;">prune-state</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--datadir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/data/bsc</span></span></code></pre></div><blockquote><p>完成需要 3-5 小时,根据本地数据量</p></blockquote><div class="warning custom-block"><p class="custom-block-title">💡 说明</p><p>1：使用screen窗口期间可以退出或者关闭命令行对话框。</p><p>2：退出当前窗口时用ctrl+ad（顺序按a和d字母即可），绝对不要用exit或ctrl+d退出会话。</p><p>3：退出会话后，可以用screen -x clean_bsc重新连接到会话。这样可以保持在shell下运行，网络中断不会影响</p><p>如果想退出，进入3步骤，然后按 ctrl+c 即可</p></div><ul><li>启动服务</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bsc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bsc</span></span></code></pre></div><h2 id="_1-2-实时维护" tabindex="-1">1.2 实时维护 <a class="header-anchor" href="#_1-2-实时维护" aria-label="Permalink to &quot;1.2 实时维护&quot;">​</a></h2><p>Ancient data is block data that is already considered immutable. This is determined by a threshold which is currently set at 90000. This means that blocks older than 90000 are considered ancient data. We recommend the <code>--prunceancient</code> flag to users who don’t care about the ancient data. This is also advised for users who want to save disk space since this will only keep data for the latest 90000 blocks. Note that once this flag is turned on, the ancient data will not be recovered again and you cannot go back running your node without this flag in the start-up command.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">./geth</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--tries-verify-mode</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">none</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/server/config.toml</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--datadir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/server/node</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--cache</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8000</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--rpc.allow-unprotected-txs</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--history.transactions</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--pruneancient=true</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--syncmode=full</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">./geth</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--tries-verify-mode</span><span style="color:#24292E;"> </span><span style="color:#032F62;">none</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/server/config.toml</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--datadir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/server/node</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--cache</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8000</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--rpc.allow-unprotected-txs</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--history.transactions</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--pruneancient=true</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--syncmode=full</span></span></code></pre></div><h2 id="_1-3-prune-block" tabindex="-1">1.3 prune-block <a class="header-anchor" href="#_1-3-prune-block" aria-label="Permalink to &quot;1.3 prune-block&quot;">​</a></h2><p><a href="https://github.com/bnb-chain/bsc/releases/tag/v1.1.8" target="_blank" rel="noreferrer">v1.1.8</a> 中引入了一个新的离线功能，用于删除不需要的 ancient block 数据。它将丢弃 ancient 数据库中的 block、receipt 和 header 以节省空间。</p><ul><li>停止bsc服务</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bsc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stop</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bsc</span></span></code></pre></div><ul><li>启动</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">./geth</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">snapshot</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">prune-block</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--datadir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/server/node</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--datadir.ancient</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./chaindata/ancient</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--block-amount-reserved</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1024</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">./geth</span><span style="color:#24292E;"> </span><span style="color:#032F62;">snapshot</span><span style="color:#24292E;"> </span><span style="color:#032F62;">prune-block</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--datadir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/server/node</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--datadir.ancient</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./chaindata/ancient</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--block-amount-reserved</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1024</span></span></code></pre></div><blockquote><p>block-amount-reserved 1024 : 保留1024个最新的数据，default: 90000</p></blockquote>',23),p=[e];function t(c,r,i,y,d,E){return a(),n("div",null,p)}const b=s(l,[["render",t]]);export{F as __pageData,b as default};
