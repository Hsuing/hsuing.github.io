import{_ as s,o as e,c as a,R as n}from"./chunks/framework.zUbWieqp.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/Jenkins/faq.md","filePath":"guide/Linux/Jenkins/faq.md","lastUpdated":1720533756000}'),o={name:"guide/Linux/Jenkins/faq.md"},l=n(`<h2 id="_1-jenkins-中调用远程shell-脚本" tabindex="-1">1.jenkins 中调用远程shell 脚本 <a class="header-anchor" href="#_1-jenkins-中调用远程shell-脚本" aria-label="Permalink to &quot;1.jenkins 中调用远程shell 脚本&quot;">​</a></h2><p>现象：</p><p>Error tput No value for $TERM and no -T specified</p><p>解决方式：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ssh</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">ip</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;TERM=xterm&quot;</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;sh /root/test.sh&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ssh</span><span style="color:#24292E;">  </span><span style="color:#032F62;">ip</span><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;TERM=xterm&quot;</span><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;sh /root/test.sh&quot;</span></span></code></pre></div><h2 id="permissive-script-security" tabindex="-1">Permissive Script Security <a class="header-anchor" href="#permissive-script-security" aria-label="Permalink to &quot;Permissive Script Security&quot;">​</a></h2><p>插件部署</p><p>修改容器内jenkins启动脚本/usr/local/bin/jenkins.sh</p><p>注意: <code>-Dpermissive-script-security.enabled=true</code> 这个参数必须在 -jar前面, 在-jar后面也不会生效</p><h2 id="job无法停止" tabindex="-1">Job无法停止 <a class="header-anchor" href="#job无法停止" aria-label="Permalink to &quot;Job无法停止&quot;">​</a></h2><p>转到 “管理Jenkins” —&gt; “脚本控制台” 并运行如下脚本，只需指定JobName和JobNumber即可</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Jenkins .instance.getItemByFullName(&quot;JobName&quot;)</span></span>
<span class="line"><span style="color:#e1e4e8;">       .getBuildByNumber(JobNumber)</span></span>
<span class="line"><span style="color:#e1e4e8;">       .finish(hudson.model.Result.ABORTED, new java.io.IOException(&quot;Aborting build&quot;));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Jenkins .instance.getItemByFullName(&quot;JobName&quot;)</span></span>
<span class="line"><span style="color:#24292e;">       .getBuildByNumber(JobNumber)</span></span>
<span class="line"><span style="color:#24292e;">       .finish(hudson.model.Result.ABORTED, new java.io.IOException(&quot;Aborting build&quot;));</span></span></code></pre></div><h2 id="删除build-history构建历史" tabindex="-1">删除BUILD HISTORY构建历史 <a class="header-anchor" href="#删除build-history构建历史" aria-label="Permalink to &quot;删除BUILD HISTORY构建历史&quot;">​</a></h2><p>jenkins-系统管理----脚本命令行</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">import jenkins.model.*;</span></span>
<span class="line"><span style="color:#e1e4e8;">import hudson.model.Fingerprint.RangeSet;</span></span>
<span class="line"><span style="color:#e1e4e8;">def j = jenkins.model.Jenkins.instance.getItem(jobName);</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">def r = RangeSet.fromString(buildRange, true);</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">j.getBuilds(r).each { it.delete() }</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">注意了，修改jobName 和buildRange 这两个参数</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">import jenkins.model.*;</span></span>
<span class="line"><span style="color:#24292e;">import hudson.model.Fingerprint.RangeSet;</span></span>
<span class="line"><span style="color:#24292e;">def j = jenkins.model.Jenkins.instance.getItem(jobName);</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">def r = RangeSet.fromString(buildRange, true);</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">j.getBuilds(r).each { it.delete() }</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">注意了，修改jobName 和buildRange 这两个参数</span></span></code></pre></div><h2 id="启动报错解决" tabindex="-1">启动报错解决 <a class="header-anchor" href="#启动报错解决" aria-label="Permalink to &quot;启动报错解决&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">com.thoughtworks.xstream.mapper.CannotResolveClassException: com.michelin.cio.hudson.plugins.rolestrategy.RoleBasedAuthorizationStrategy</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">com.thoughtworks.xstream.mapper.CannotResolveClassException: com.michelin.cio.hudson.plugins.rolestrategy.RoleBasedAuthorizationStrategy</span></span></code></pre></div><p>这部分定义内容还在，所以启动也就出大问题。 只需要删除<code>&lt;authorizationStrategy&gt;...&lt;/authorizationStrategy&gt;</code>这部分内容，jenkins就可以重新启动起来</p>`,18),t=[l];function p(i,c,r,d,u,h){return e(),a("div",null,t)}const y=s(o,[["render",p]]);export{m as __pageData,y as default};
