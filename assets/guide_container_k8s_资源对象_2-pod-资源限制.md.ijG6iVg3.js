import{_ as s,o as a,c as n,R as l}from"./chunks/framework.zUbWieqp.js";const F=JSON.parse('{"title":"1.Pod 资源限制","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/资源对象/2-pod-资源限制.md","filePath":"guide/container/k8s/资源对象/2-pod-资源限制.md","lastUpdated":1729073852000}'),p={name:"guide/container/k8s/资源对象/2-pod-资源限制.md"},o=l(`<p>文档，<a href="https://kubernetes.io/zh-cn/docs/concepts/configuration/manage-resources-containers/" target="_blank" rel="noreferrer">https://kubernetes.io/zh-cn/docs/concepts/configuration/manage-resources-containers/</a></p><h1 id="_1-pod-资源限制" tabindex="-1">1.Pod 资源限制 <a class="header-anchor" href="#_1-pod-资源限制" aria-label="Permalink to &quot;1.Pod 资源限制&quot;">​</a></h1><h2 id="_1-1-什么是资源限制" tabindex="-1">1.1 什么是资源限制 <a class="header-anchor" href="#_1-1-什么是资源限制" aria-label="Permalink to &quot;1.1 什么是资源限制&quot;">​</a></h2><p>在 Kubernetes 集群中，为了使系统能够稳定的运⾏，通常会对 Pod 的资源使⽤量进⾏限制</p><p>在 Kubernetes 集群中，如果有⼀个程序出现异常，并占⽤⼤量的系统资源。如果未对该 Pod 进⾏资源限制的话，可能会影响其他的 Pod 正常运⾏，从⽽造成业务的不稳定性</p><h2 id="_1-2-如何实现资源限制" tabindex="-1">1.2 如何实现资源限制 <a class="header-anchor" href="#_1-2-如何实现资源限制" aria-label="Permalink to &quot;1.2 如何实现资源限制&quot;">​</a></h2><p>Kubernetes 通过 <code>Requests</code> 和 <code>Limits</code> 字段来实现对 Pod 的资源进⾏限制</p><ul><li>Requests：启动 Pod 时申请分配的资源⼤⼩；<code>（Pod在调度的时候requests⽐较重要）</code></li><li>Limits：限制 Pod 运⾏时最⼤可⽤的资源⼤⼩；<code>（Pod在运⾏时limits⽐较重要）</code></li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">spec.containers[].resources.requests.cpu		//定义创建容器时预分配的CPU资源</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">spec.containers[].resources.requests.memory		//定义创建容器时预分配的内存资源</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">spec.containers[].resources.limits.cpu			//定义 cpu 的资源上限</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">spec.containers[].resources.limits.memory		//定义内存的资源上限</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">spec.containers[].resources.requests.cpu		//定义创建容器时预分配的CPU资源</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">spec.containers[].resources.requests.memory		//定义创建容器时预分配的内存资源</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">spec.containers[].resources.limits.cpu			//定义 cpu 的资源上限</span><span style="color:#24292E;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">spec.containers[].resources.limits.memory		//定义内存的资源上限</span></span></code></pre></div><h2 id="_1-3-资源限制的目的与意义" tabindex="-1">1.3 资源限制的⽬的与意义 <a class="header-anchor" href="#_1-3-资源限制的目的与意义" aria-label="Permalink to &quot;1.3 资源限制的⽬的与意义&quot;">​</a></h2><p>CPU：<code>为集群中运⾏的容器配置CPU请求和限制</code>，可以有效利⽤集群上可⽤的 CPU 资源</p><ul><li>设置 Pod CPU 请求 设定在较低的数值，可以使 Pod 更有机会被调度</li><li>设置 CPU 限制⼤于 CPU 请求，可以完成如下两件事 <ul><li>1、当 Pod 碰到⼀些突发负载时，它可以合理利⽤可⽤的 CPU 资源</li><li>2、当 Pod 在突发流量期间 可使⽤的 CPU 被限制为合理的数值，从⽽可以避免影响其他 Pod 的正常运⾏；</li></ul></li></ul><p>内存：<code>为集群中运⾏的容器配置内存请求和限制</code>，可以有效利⽤集群节点上可⽤的内存资源</p><ul><li>通过将 Pod 的内存请求设定在较低的数值，可以使 Pod 更有机会被调度</li><li>通过让 <code>内存限制⼤于内存请求</code>，可以完成如下两件事： <ul><li>当 Pod 碰到⼀些突发负载时，可以更好的利⽤其主机上的可⽤内存</li><li>当 Pod 在突发负载期间 <code>可使⽤的内存被限制为合理的数值</code>，从⽽可以避免影响其他 Pod 的运⾏</li></ul></li></ul><h1 id="_2-资源限制单位换算" tabindex="-1">2.资源限制单位换算 <a class="header-anchor" href="#_2-资源限制单位换算" aria-label="Permalink to &quot;2.资源限制单位换算&quot;">​</a></h1><h2 id="_2-1-cpu-限制单位" tabindex="-1">2.1 CPU 限制单位 <a class="header-anchor" href="#_2-1-cpu-限制单位" aria-label="Permalink to &quot;2.1 CPU 限制单位&quot;">​</a></h2><p>1 核 CPU 等于 1000 毫核，当定义容器为 0.5 时，所能⽤到的 CPU 资源时 1 核⼼ CPU 的⼀半，对于 CPU 资源单位，表达式 <code>0.1</code> 等价于表达式 <code>100m</code>，可以看作 <code>100 millicpu</code></p><blockquote><p>在 Kubernetes 系统上，1 个单位的 CPU 相当于虚拟机上的 1 颗虚拟 CPU(vCPU）或物理机上的一个超线程（Hyperthread，或称为一个逻辑 CPU），它支持分数计量方式，一个核心（1core）相当于 1000 个微核心（millicores），因此 500m 相当于是 0.5 个核心，即二分之一个核心</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">核⼼</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">millicpu</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">（1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#9ECBFF;">m）</span></span>
<span class="line"><span style="color:#B392F0;">0.5</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">核</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">millicpu</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">（0.5</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Core</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">500</span><span style="color:#9ECBFF;">m）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">核⼼</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;"> </span><span style="color:#032F62;">millicpu</span><span style="color:#24292E;"> </span><span style="color:#032F62;">（1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#032F62;">m）</span></span>
<span class="line"><span style="color:#6F42C1;">0.5</span><span style="color:#24292E;"> </span><span style="color:#032F62;">核</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">500</span><span style="color:#24292E;"> </span><span style="color:#032F62;">millicpu</span><span style="color:#24292E;"> </span><span style="color:#032F62;">（0.5</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Core</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">500</span><span style="color:#032F62;">m）</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">💡 说明</p><p>m 毫核，cpu 单位；Kubernetes 集群中的每一个节点可以通过操作系统的命令来确认本节点的 CPU 内核数量，然后将这个数量乘以 1000，得到的就是节点总 CPU 总毫数。比如一个节点有四核，那么该节点的 CPU 总毫量为 4000m，如果你要使用 0.5 core，则你要求的是 4000*0.5 = 2000m :::</p><p>举例：当我们有 1 个物理 CPU，16 核⼼，如果某个 Pod 最多使⽤⼀半的核⼼数，则表达式可以写⼊如下两种：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">limits.cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">limits.cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">8000m 计算公式：(16000*0.5=8000m)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">limits.cpu</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">limits.cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">8000m 计算公式：(16000*0.5=8000m)</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">❌ 注意</p><p>Kubernetes 不允许设置精度⼩于 1m 的 CPU 资源。因此当 CPU 单位⼩于 1 时，只能使⽤毫核来表示。例如：期望使⽤ 1 个 CPU 的 0.5%，应该写 5m ⽽不是 0.005</p></div></div><h2 id="_2-2-内存分配单位" tabindex="-1">2.2 内存分配单位 <a class="header-anchor" href="#_2-2-内存分配单位" aria-label="Permalink to &quot;2.2 内存分配单位&quot;">​</a></h2><p>内存的基本单位是字节数(Bytes)，也可以加上国际单位，⼗进制的 E、P、T、G、M，K、m，或⼆进制的 Ei、Pi、Ti、Gi、Mi、Ki，<code>内存的计量方式与日常使用方式相同</code></p><blockquote><p>MiB ≠ MB，MB 是十进制单位，MiB 是二进制，平时我们以为 MB 等于 1024KB，其实 1MB=1000KB，1MiB 才等于 1024KiB。中间带字母 i 的是国际电工协会（IEC）定的，走 1024 乘积；KB、MB、GB 是国际单位制，走 1000 乘积</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">1MB</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">KB</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000000</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Bytes</span></span>
<span class="line"><span style="color:#B392F0;">1Mi</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">KB</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1048576</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bytes</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">1MB</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;"> </span><span style="color:#032F62;">KB</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000000</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Bytes</span></span>
<span class="line"><span style="color:#6F42C1;">1Mi</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;"> </span><span style="color:#032F62;">KB</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1048576</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bytes</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">❌ 注意</p><p>如果你为某个资源指定了限制，但不指定请求， 并且没有应用准入时机制为该资源设置默认请求， 然后 Kubernetes 复制你所指定的限制值，将其用作资源的请求值</p><p>内存的计量方式与日常使用方式相同</p></div><h2 id="_2-3-计算" tabindex="-1">2.3 计算 <a class="header-anchor" href="#_2-3-计算" aria-label="Permalink to &quot;2.3 计算&quot;">​</a></h2><h3 id="cpu" tabindex="-1">cpu <a class="header-anchor" href="#cpu" aria-label="Permalink to &quot;cpu&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">##查看CPU的限制##</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@k8s-node1 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]# docker exec -it 6933185dbe4b /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">root@pod-limits:/#</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/sys/fs/cgroup/cpu/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">root@pod-limits:/sys/fs/cgroup/cpu#</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cpu.cfs_period_us</span></span>
<span class="line"><span style="color:#B392F0;">100000</span></span>
<span class="line"><span style="color:#B392F0;">root@pod-limits:/sys/fs/cgroup/cpu#</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cpu.cfs_quota_us</span></span>
<span class="line"><span style="color:#B392F0;">200000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#反向计算出--cpus参数</span></span>
<span class="line"><span style="color:#6A737D;">#cpu.cfs_quota_us / cpu.cfs_period_us = cpu的限制</span></span>
<span class="line"><span style="color:#B392F0;">root@pod-limits:/sys/fs/cgroup/cpu#</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">expr</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`</span><span style="color:#B392F0;">cat</span><span style="color:#9ECBFF;"> cpu.cfs_quota_us\`</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`</span><span style="color:#B392F0;">cat</span><span style="color:#9ECBFF;"> cpu.cfs_period_us\`</span></span>
<span class="line"><span style="color:#B392F0;">2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">##查看CPU的限制##</span></span>
<span class="line"><span style="color:#24292E;">[root@k8s-node1 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]# docker exec -it 6933185dbe4b /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">root@pod-limits:/#</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/sys/fs/cgroup/cpu/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">root@pod-limits:/sys/fs/cgroup/cpu#</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cat</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cpu.cfs_period_us</span></span>
<span class="line"><span style="color:#6F42C1;">100000</span></span>
<span class="line"><span style="color:#6F42C1;">root@pod-limits:/sys/fs/cgroup/cpu#</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cat</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cpu.cfs_quota_us</span></span>
<span class="line"><span style="color:#6F42C1;">200000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#反向计算出--cpus参数</span></span>
<span class="line"><span style="color:#6A737D;">#cpu.cfs_quota_us / cpu.cfs_period_us = cpu的限制</span></span>
<span class="line"><span style="color:#6F42C1;">root@pod-limits:/sys/fs/cgroup/cpu#</span><span style="color:#24292E;"> </span><span style="color:#032F62;">expr</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`</span><span style="color:#6F42C1;">cat</span><span style="color:#032F62;"> cpu.cfs_quota_us\`</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`</span><span style="color:#6F42C1;">cat</span><span style="color:#032F62;"> cpu.cfs_period_us\`</span></span>
<span class="line"><span style="color:#6F42C1;">2</span></span></code></pre></div><blockquote><p>cpu.cfs_period_us 和 cpu.cfs_quota_us 来限制该组中的所有进程在单位时间里可以使用的 cpu 时间。 cpu.cfs_period_us：时间周期（微秒）； cpu.cfs_quota_us：指的是在 cpu.cfs_period_us 周期内可使用的 cpu 的时间（微秒）；多核场景下，如配置 cpu.cfs_period_us=10000，而 cfs_quota_us=20000，表示该 cgroup 可以完全使用 2 个 cpu。所以 cpu 的计算方法为：cfs_quota_us / cpu.cfs_period_us</p></blockquote><h3 id="mem" tabindex="-1">mem <a class="header-anchor" href="#mem" aria-label="Permalink to &quot;mem&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">##查看内存的限制##</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@k8s-node1 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]# docker exec -it 6933185dbe4b /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">root@pod-limits:~#</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/sys/fs/cgroup/memory/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">root@pod-limits:/sys/fs/cgroup/memory#</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">memory.limit_in_bytes</span></span>
<span class="line"><span style="color:#B392F0;">2147483648</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">（Byte字节）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">内存的计算方法为：2147483648÷1024÷1024÷1024</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">（G）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">##查看内存的限制##</span></span>
<span class="line"><span style="color:#24292E;">[root@k8s-node1 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]# docker exec -it 6933185dbe4b /bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">root@pod-limits:~#</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/sys/fs/cgroup/memory/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">root@pod-limits:/sys/fs/cgroup/memory#</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cat</span><span style="color:#24292E;"> </span><span style="color:#032F62;">memory.limit_in_bytes</span></span>
<span class="line"><span style="color:#6F42C1;">2147483648</span><span style="color:#24292E;"> </span><span style="color:#032F62;">（Byte字节）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">内存的计算方法为：2147483648÷1024÷1024÷1024</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#032F62;">（G）</span></span></code></pre></div><h1 id="_3-实践" tabindex="-1">3.实践 <a class="header-anchor" href="#_3-实践" aria-label="Permalink to &quot;3.实践&quot;">​</a></h1><p>安装 metrics-server</p><p>官方文档，<a href="https://github.com/kubernetes-sigs/metrics-server" target="_blank" rel="noreferrer">https://github.com/kubernetes-sigs/metrics-server</a></p><h3 id="requests" tabindex="-1">requests <a class="header-anchor" href="#requests" aria-label="Permalink to &quot;requests&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">explain</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pod.spec.containers.resources</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">explain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pod.spec.containers.resources</span></span></code></pre></div><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">root@kube-master yaml</span><span style="color:#E1E4E8;">]# </span><span style="color:#9ECBFF;">cat requests-pod.yaml</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">requests-pod</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">busybox</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">busybox</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">args</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#9ECBFF;">&quot;/bin/sh&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#9ECBFF;">&quot;-c&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#9ECBFF;">&quot;sleep 60000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">requests</span><span style="color:#E1E4E8;">:			</span><span style="color:#6A737D;">#资源申请</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">500m</span><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">#容器申请500毫核(一个CPU核心时间的1/2)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">500Mi</span><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">#容器申请500M内存</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#032F62;">root@kube-master yaml</span><span style="color:#24292E;">]# </span><span style="color:#032F62;">cat requests-pod.yaml</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">requests-pod</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">busybox</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">busybox</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">args</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#032F62;">&quot;/bin/sh&quot;</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#032F62;">&quot;-c&quot;</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#032F62;">&quot;sleep 60000&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">resources</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">requests</span><span style="color:#24292E;">:			</span><span style="color:#6A737D;">#资源申请</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">500m</span><span style="color:#24292E;">		</span><span style="color:#6A737D;">#容器申请500毫核(一个CPU核心时间的1/2)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">500Mi</span><span style="color:#24292E;">	</span><span style="color:#6A737D;">#容器申请500M内存</span></span></code></pre></div><ul><li>超出内存</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@kube-master yaml]# cat requests-pod.yaml</span></span>
<span class="line"><span style="color:#B392F0;">apiVersion:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#B392F0;">kind:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#B392F0;">metadata:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">name:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">requests-pod</span></span>
<span class="line"><span style="color:#B392F0;">spec:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">containers:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">image:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">busybox</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">name:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">busybox</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">args:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/bin/sh&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;-c&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sleep 60000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">resources:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">requests:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">cpu:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">500</span><span style="color:#9ECBFF;">m</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">memory:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2048</span><span style="color:#9ECBFF;">Mi</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">nodeName:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kube-node01</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@kube-master yaml]# cat requests-pod.yaml</span></span>
<span class="line"><span style="color:#6F42C1;">apiVersion:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#6F42C1;">kind:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#6F42C1;">metadata:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">name:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">requests-pod</span></span>
<span class="line"><span style="color:#6F42C1;">spec:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">containers:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">image:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">busybox</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">name:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">busybox</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">args:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/bin/sh&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;-c&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sleep 60000&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">resources:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">requests:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">cpu:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">500</span><span style="color:#032F62;">m</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">memory:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2048</span><span style="color:#032F62;">Mi</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">nodeName:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kube-node01</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@kube-master yaml]# kubectl get pod</span></span>
<span class="line"><span style="color:#B392F0;">NAME</span><span style="color:#E1E4E8;">                              </span><span style="color:#9ECBFF;">READY</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">STATUS</span><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">RESTARTS</span><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">AGE</span></span>
<span class="line"><span style="color:#B392F0;">requests-pod</span><span style="color:#E1E4E8;">                      </span><span style="color:#79B8FF;">0</span><span style="color:#9ECBFF;">/1</span><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">OutOfmemory</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">               </span><span style="color:#79B8FF;">4</span><span style="color:#9ECBFF;">s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@kube-master yaml]# kubectl get pod</span></span>
<span class="line"><span style="color:#6F42C1;">NAME</span><span style="color:#24292E;">                              </span><span style="color:#032F62;">READY</span><span style="color:#24292E;">   </span><span style="color:#032F62;">STATUS</span><span style="color:#24292E;">        </span><span style="color:#032F62;">RESTARTS</span><span style="color:#24292E;">        </span><span style="color:#032F62;">AGE</span></span>
<span class="line"><span style="color:#6F42C1;">requests-pod</span><span style="color:#24292E;">                      </span><span style="color:#005CC5;">0</span><span style="color:#032F62;">/1</span><span style="color:#24292E;">     </span><span style="color:#032F62;">OutOfmemory</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">               </span><span style="color:#005CC5;">4</span><span style="color:#032F62;">s</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@kube-master yaml]# kubectl describe pod requests-pod</span></span>
<span class="line"><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#B392F0;">Status:</span><span style="color:#E1E4E8;">       </span><span style="color:#9ECBFF;">Failed</span></span>
<span class="line"><span style="color:#B392F0;">Reason:</span><span style="color:#E1E4E8;">       </span><span style="color:#9ECBFF;">OutOfmemory</span></span>
<span class="line"><span style="color:#B392F0;">Message:</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">Pod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">didn&#39;t have enough resource: memory, requested: 2147483648, used: 0, capacity: 1934282752</span></span>
<span class="line"><span style="color:#9ECBFF;">...</span></span>
<span class="line"><span style="color:#9ECBFF;">Events:</span></span>
<span class="line"><span style="color:#9ECBFF;">  Type     Reason       Age   From     Message</span></span>
<span class="line"><span style="color:#9ECBFF;">  ----     ------       ----  ----     -------</span></span>
<span class="line"><span style="color:#9ECBFF;">  Warning  OutOfmemory  10s   kubelet  Node didn&#39;t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">have</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">enough</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">resource:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">memory,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">requested:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2147483648</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">used:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">capacity:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1934282752</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@kube-master yaml]# kubectl describe pod requests-pod</span></span>
<span class="line"><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#6F42C1;">Status:</span><span style="color:#24292E;">       </span><span style="color:#032F62;">Failed</span></span>
<span class="line"><span style="color:#6F42C1;">Reason:</span><span style="color:#24292E;">       </span><span style="color:#032F62;">OutOfmemory</span></span>
<span class="line"><span style="color:#6F42C1;">Message:</span><span style="color:#24292E;">      </span><span style="color:#032F62;">Pod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">didn&#39;t have enough resource: memory, requested: 2147483648, used: 0, capacity: 1934282752</span></span>
<span class="line"><span style="color:#032F62;">...</span></span>
<span class="line"><span style="color:#032F62;">Events:</span></span>
<span class="line"><span style="color:#032F62;">  Type     Reason       Age   From     Message</span></span>
<span class="line"><span style="color:#032F62;">  ----     ------       ----  ----     -------</span></span>
<span class="line"><span style="color:#032F62;">  Warning  OutOfmemory  10s   kubelet  Node didn&#39;t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">have</span><span style="color:#24292E;"> </span><span style="color:#032F62;">enough</span><span style="color:#24292E;"> </span><span style="color:#032F62;">resource:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">memory,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">requested:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2147483648</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">used:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">capacity:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1934282752</span></span></code></pre></div><h3 id="limits" tabindex="-1">limits <a class="header-anchor" href="#limits" aria-label="Permalink to &quot;limits&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">root@kube-master yaml</span><span style="color:#E1E4E8;">]# </span><span style="color:#9ECBFF;">cat limit-pod.yaml</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">limited-pod</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">busybox</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">command</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;sleep&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;600000&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">busybox</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">requests</span><span style="color:#E1E4E8;">:         </span><span style="color:#6A737D;">#资源申请</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">200m</span><span style="color:#E1E4E8;">       </span><span style="color:#6A737D;">#容器申请200毫核(一个CPU核心时间的1/5)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">80Mi</span><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">#容器申请80M内存</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">limits</span><span style="color:#E1E4E8;">:           </span><span style="color:#6A737D;">#资源限制</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">#容器最大允许使用2核CPU</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">2Gi</span><span style="color:#E1E4E8;">     </span><span style="color:#6A737D;">#容器最大允许使用2GB内存</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">nodeName</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">kube-node01</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#032F62;">root@kube-master yaml</span><span style="color:#24292E;">]# </span><span style="color:#032F62;">cat limit-pod.yaml</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">limited-pod</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">busybox</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">command</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;sleep&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;600000&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">busybox</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">resources</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">requests</span><span style="color:#24292E;">:         </span><span style="color:#6A737D;">#资源申请</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">200m</span><span style="color:#24292E;">       </span><span style="color:#6A737D;">#容器申请200毫核(一个CPU核心时间的1/5)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">80Mi</span><span style="color:#24292E;">    </span><span style="color:#6A737D;">#容器申请80M内存</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">limits</span><span style="color:#24292E;">:           </span><span style="color:#6A737D;">#资源限制</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">          </span><span style="color:#6A737D;">#容器最大允许使用2核CPU</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">2Gi</span><span style="color:#24292E;">     </span><span style="color:#6A737D;">#容器最大允许使用2GB内存</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">nodeName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">kube-node01</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">describe</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nodes</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kube-node01</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">describe</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nodes</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kube-node01</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202404261415196.png" alt="image-20240426141514746"></p><div class="danger custom-block"><p class="custom-block-title">❌ 注意</p><p>节点上所有 pod 的资源 limits 之和可以超过节点资源总量的 100%</p><p>requests 不同的是，limits 并不会影响 pod 的调度结果</p><p>如果只设置了 limit，则 request 默认会根据 limit 自动设定</p></div><h3 id="运行超过容器内存限制的应用" tabindex="-1">运⾏超过容器内存限制的应⽤ <a class="header-anchor" href="#运行超过容器内存限制的应用" aria-label="Permalink to &quot;运⾏超过容器内存限制的应⽤&quot;">​</a></h3><p>当节点拥有足够的可用内存时，容器可以使用其请求的内存。但是，<code>容器不允许使用超过其限制的内存</code>。如果容器分配的内存超过其限制，该容器会成为被终止的候选容器。如果容器继续消耗超出其限制的内存，则终止容器。如果终止的容器可以被重启，则 kubelet 会重新启动它。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">root@kube-master yaml</span><span style="color:#E1E4E8;">]# </span><span style="color:#9ECBFF;">cat memory-request-limit-2.yaml</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">memory-request-limit-2</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">memory-request</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">polinux/stress</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">command</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;stress&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;--vm&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;--vm-bytes&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;250M&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;--vm-hang&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">## 容器会尝试分配 250 MiB 内</span></span>
<span class="line"><span style="color:#9ECBFF;">存，这远⾼于 100 MiB 的限制,模拟1个进程产⽣250M内存</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">requests</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;100Mi&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">limits</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;200Mi&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#032F62;">root@kube-master yaml</span><span style="color:#24292E;">]# </span><span style="color:#032F62;">cat memory-request-limit-2.yaml</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">memory-request-limit-2</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">memory-request</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">polinux/stress</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">command</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;stress&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;--vm&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;--vm-bytes&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;250M&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;--vm-hang&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">## 容器会尝试分配 250 MiB 内</span></span>
<span class="line"><span style="color:#032F62;">存，这远⾼于 100 MiB 的限制,模拟1个进程产⽣250M内存</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">resources</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">requests</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;100Mi&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">limits</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;200Mi&quot;</span></span></code></pre></div><h1 id="_4-资源配置范围管理-limitrange" tabindex="-1">4.资源配置范围管理 LimitRange <a class="header-anchor" href="#_4-资源配置范围管理-limitrange" aria-label="Permalink to &quot;4.资源配置范围管理 LimitRange&quot;">​</a></h1><h2 id="_4-1-概念" tabindex="-1">4.1 概念 <a class="header-anchor" href="#_4-1-概念" aria-label="Permalink to &quot;4.1 概念&quot;">​</a></h2><p>默认情况下，Kubernetes 中所有容器都没有任何 CPU 和内存限制。LimitRange 用来给 Namespace 增加一个资源限制，包括最小、最大和默认资源。</p><h2 id="_4-2-为什么需要-limitrange" tabindex="-1">4.2 为什么需要 LimitRange <a class="header-anchor" href="#_4-2-为什么需要-limitrange" aria-label="Permalink to &quot;4.2 为什么需要 LimitRange&quot;">​</a></h2><p>为单个容器设置资源 requests 和 limits 很有必要性：</p><p>1.提升 QoS 等级，防止在 OOM 时被首先 kill；</p><p>2.默认情况下 Pod 会以无限制的 CPU 和内存运行，很有可能因故吞掉所在工作节点上的所有可用计算资源。</p><p>通过配置 Pod 的计算资源 Requests 和 Limits，我们可以限制 Pod 的资源使用，但对于 Kubemetes 集群管理员而言，配置每一个 Pod 的 Requests 和 Limits 是烦琐且限制性过强的。更多时，我们需要的是对集群内 Requests 和 Limits 的配置做一个全局的统一的限制。</p><div class="warning custom-block"><p class="custom-block-title">💡 说明</p><p>LimitRange 资源支持限制 Container、Pod 和 PersistentVolumeClaim 三种资源对象的系统资源用量</p></div><h3 id="创建" tabindex="-1">创建 <a class="header-anchor" href="#创建" aria-label="Permalink to &quot;创建&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># more limits.yaml</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">LimitRange</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">limitrange</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">limits</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Pod</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#指定整个pod的资源limits</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">min</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#pod中所有容器的Requests值的总和的下限</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">50m</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">5Mi</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">max</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#pod中所有容器的Limits值的总和的上限</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">1Gi</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Container</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#指定容器的资源限制</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">defaultRequest</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#容器Requests默认值</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">100m</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10Mi</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">default</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#容器Limits默认值</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">200m</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">100Mi</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">min</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#pod中所有容器的Requests值的下限</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">50m</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">5Mi</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">max</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#pod中所有容器的Limits值的上限</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">1Gi</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">maxLimitRequestRatio</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#每种资源Requests与Limits的最大比值</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">4</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">PersistentVolumeClaim</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#指定请求PVC存储容量的最小值和最大值</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">min</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">storage</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">1Gi</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">max</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">storage</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10Gi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># more limits.yaml</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">LimitRange</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">limitrange</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">limits</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Pod</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#指定整个pod的资源limits</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">min</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#pod中所有容器的Requests值的总和的下限</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">50m</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">5Mi</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">max</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#pod中所有容器的Limits值的总和的上限</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">1Gi</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Container</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#指定容器的资源限制</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">defaultRequest</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#容器Requests默认值</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">100m</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10Mi</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">default</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#容器Limits默认值</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">200m</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">100Mi</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">min</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#pod中所有容器的Requests值的下限</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">50m</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">5Mi</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">max</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#pod中所有容器的Limits值的上限</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">1Gi</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">maxLimitRequestRatio</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#每种资源Requests与Limits的最大比值</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">4</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">PersistentVolumeClaim</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#指定请求PVC存储容量的最小值和最大值</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">min</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">storage</span><span style="color:#24292E;">: </span><span style="color:#032F62;">1Gi</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">max</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">storage</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10Gi</span></span></code></pre></div><h3 id="查看" tabindex="-1">查看 <a class="header-anchor" href="#查看" aria-label="Permalink to &quot;查看&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#kubectl describe limitranges limitrange</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">Name:</span><span style="color:#E1E4E8;">                  </span><span style="color:#9ECBFF;">limitrange</span></span>
<span class="line"><span style="color:#B392F0;">Namespace:</span><span style="color:#E1E4E8;">             </span><span style="color:#9ECBFF;">default</span></span>
<span class="line"><span style="color:#B392F0;">Type</span><span style="color:#E1E4E8;">                   </span><span style="color:#9ECBFF;">Resource</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">Min</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">Max</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">Default</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Request</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">Default</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Limit</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">Max</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Limit/Request</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Ratio</span></span>
<span class="line"><span style="color:#B392F0;">----</span><span style="color:#E1E4E8;">                   </span><span style="color:#79B8FF;">--------</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">---</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">---</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">---------------</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-------------</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-----------------------</span></span>
<span class="line"><span style="color:#B392F0;">Pod</span><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">cpu</span><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">50</span><span style="color:#9ECBFF;">m</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">-</span><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">-</span><span style="color:#E1E4E8;">              </span><span style="color:#9ECBFF;">-</span></span>
<span class="line"><span style="color:#B392F0;">Pod</span><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">memory</span><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">5</span><span style="color:#9ECBFF;">Mi</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">Gi</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">-</span><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">-</span><span style="color:#E1E4E8;">              </span><span style="color:#9ECBFF;">-</span></span>
<span class="line"><span style="color:#B392F0;">Container</span><span style="color:#E1E4E8;">              </span><span style="color:#9ECBFF;">memory</span><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">5</span><span style="color:#9ECBFF;">Mi</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">Gi</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">10</span><span style="color:#9ECBFF;">Mi</span><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">100</span><span style="color:#9ECBFF;">Mi</span><span style="color:#E1E4E8;">          </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#B392F0;">Container</span><span style="color:#E1E4E8;">              </span><span style="color:#9ECBFF;">cpu</span><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">50</span><span style="color:#9ECBFF;">m</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">100</span><span style="color:#9ECBFF;">m</span><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">200</span><span style="color:#9ECBFF;">m</span><span style="color:#E1E4E8;">           </span><span style="color:#79B8FF;">4</span></span>
<span class="line"><span style="color:#B392F0;">PersistentVolumeClaim</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">storage</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">Gi</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">10</span><span style="color:#9ECBFF;">Gi</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">-</span><span style="color:#E1E4E8;">                </span><span style="color:#9ECBFF;">-</span><span style="color:#E1E4E8;">              </span><span style="color:#9ECBFF;">-</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#kubectl describe limitranges limitrange</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Name:</span><span style="color:#24292E;">                  </span><span style="color:#032F62;">limitrange</span></span>
<span class="line"><span style="color:#6F42C1;">Namespace:</span><span style="color:#24292E;">             </span><span style="color:#032F62;">default</span></span>
<span class="line"><span style="color:#6F42C1;">Type</span><span style="color:#24292E;">                   </span><span style="color:#032F62;">Resource</span><span style="color:#24292E;">  </span><span style="color:#032F62;">Min</span><span style="color:#24292E;">  </span><span style="color:#032F62;">Max</span><span style="color:#24292E;">   </span><span style="color:#032F62;">Default</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Request</span><span style="color:#24292E;">  </span><span style="color:#032F62;">Default</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Limit</span><span style="color:#24292E;">  </span><span style="color:#032F62;">Max</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Limit/Request</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Ratio</span></span>
<span class="line"><span style="color:#6F42C1;">----</span><span style="color:#24292E;">                   </span><span style="color:#005CC5;">--------</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">---</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">---</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">---------------</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">-------------</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">-----------------------</span></span>
<span class="line"><span style="color:#6F42C1;">Pod</span><span style="color:#24292E;">                    </span><span style="color:#032F62;">cpu</span><span style="color:#24292E;">       </span><span style="color:#005CC5;">50</span><span style="color:#032F62;">m</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">     </span><span style="color:#032F62;">-</span><span style="color:#24292E;">                </span><span style="color:#032F62;">-</span><span style="color:#24292E;">              </span><span style="color:#032F62;">-</span></span>
<span class="line"><span style="color:#6F42C1;">Pod</span><span style="color:#24292E;">                    </span><span style="color:#032F62;">memory</span><span style="color:#24292E;">    </span><span style="color:#005CC5;">5</span><span style="color:#032F62;">Mi</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">Gi</span><span style="color:#24292E;">   </span><span style="color:#032F62;">-</span><span style="color:#24292E;">                </span><span style="color:#032F62;">-</span><span style="color:#24292E;">              </span><span style="color:#032F62;">-</span></span>
<span class="line"><span style="color:#6F42C1;">Container</span><span style="color:#24292E;">              </span><span style="color:#032F62;">memory</span><span style="color:#24292E;">    </span><span style="color:#005CC5;">5</span><span style="color:#032F62;">Mi</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">Gi</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">10</span><span style="color:#032F62;">Mi</span><span style="color:#24292E;">             </span><span style="color:#005CC5;">100</span><span style="color:#032F62;">Mi</span><span style="color:#24292E;">          </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#6F42C1;">Container</span><span style="color:#24292E;">              </span><span style="color:#032F62;">cpu</span><span style="color:#24292E;">       </span><span style="color:#005CC5;">50</span><span style="color:#032F62;">m</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">100</span><span style="color:#032F62;">m</span><span style="color:#24292E;">             </span><span style="color:#005CC5;">200</span><span style="color:#032F62;">m</span><span style="color:#24292E;">           </span><span style="color:#005CC5;">4</span></span>
<span class="line"><span style="color:#6F42C1;">PersistentVolumeClaim</span><span style="color:#24292E;">  </span><span style="color:#032F62;">storage</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">Gi</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">10</span><span style="color:#032F62;">Gi</span><span style="color:#24292E;">  </span><span style="color:#032F62;">-</span><span style="color:#24292E;">                </span><span style="color:#032F62;">-</span><span style="color:#24292E;">              </span><span style="color:#032F62;">-</span></span></code></pre></div><p>LimitRange 中各项配置的意义和特点如下：</p><ol><li>不论是 CPU 还是内存，在 LimitRange 中，Pod 和 Container 都可以设置 Min、Max 和 Max Limit / Requests Ratio 参数。Container 还可以设置 Default Request 和 Default Limit 参数，而 Pod 不能设置 Default Request 和Default Limit 参数。</li><li>对 Pod 和 Container 的参数解释如下。 <ul><li>Container： <ul><li>Container 的 Min（上面的 100m 和 3Mi）是 Pod 中所有容器的 Requests 值下限；</li><li>Container 的 Max（上面的 2 和 1Gi）是 Pod 中所有容器的 Limits 值上限；</li><li>Container 的 Default Request（上面的 200m 和 100Mi）是 Pod 中所有未指定 Requests 值的容器的默认 Requests 值；</li><li>Container 的 Default Limit（上面的300m和200Mi）是 Pod 中所有未指定 Limits 值的容器的默认 Limits 值。</li><li>对于同一资源类型，这 4 个参数必须满足以下关系：Min ≤ Default Request ≤ Default Limit ≤ Max。</li></ul></li><li>Pod： <ul><li>Pod 的 Min（上面的 200m 和 6Mi）是 Pod 中所有容器的 Requests 值的总和下限；</li><li>Pod 的 Max（上面的 4 和 2Gi）是 Pod 中所有容器的 Limits 值的总和上限。</li><li>容器未指定 Requests 值或者 Limits 值时，将使用 Container 的 Default Request 值或者 Default Limit 值。</li></ul></li><li>Container 的 Max Limit/Requests Ratio（上面的 5 和 4）限制了 Pod 中所有容器的 Limits 值与 Requests 值的比例上限；而 Pod 的 Max Limit / Requests Ratio（上面的 3 和 2）限制了 Pod 中所有容器的 Limits 值总和与 Requests 值总和的比例上限。</li></ul></li><li>如果设置了 Container 的 Max，那么对于该类资源而言，整个集群中的所有容器都必须设置 Limits，否则无法成功创建。Pod 内的容器未配置 Limits 时，将使用 Default Limit 的值（本例中的 300m CPU 和 200MiB 内存），如果也未配置 Default，则无法成功创建。</li><li>如果设置了 Container 的 Min，那么对于该类资源而言，整个集群中的所有容器都必须设置 Requests。如果创建 Pod 的容器时未配置该类资源的 Requests，那么在创建过程中会报验证错误。Pod 里容器的 Requests 在未配置时，可以使用默认值 defaultRequest（本例中的 200m CPU 和 100MiB 内存）；如果未配置而且没有使用默认值 defaultRequest，那么默认等于该容器的 Limits；如果容器的 Limits 也未定义，就会报错。</li><li>对于任意一个 Pod 而言，该 Pod 中所有容器的 Requests 总和都必须大于或等于 6MiB，而且所有容器的 Limits 总和都必须小于或等于 1GiB；同样，所有容器的 CPU Requests 总和都必须大于或等于 200m，而且所有容器的 CPU Limits 总和都必须小于或等于 2。</li><li>Pod里任何容器的 Limits 与 Requests 的比例都不能超过 Container 的Max Limit / Requests Ratio；Pod 里所有容器的 Limits 总和与 Requests 总和的比例都不能超过 Pod 的 Max Limit / Requests Ratio。</li></ol><div class="danger custom-block"><p class="custom-block-title">❌ 注意</p><p>需要注意的是，CPU Limits 强制配置这个选项，在 Kubernetes 集群中默认是开启的；除非在部署kubelet服务时通过设置<code>--cpu-cfs-quota=false</code>来关闭该限制。</p></div><h3 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#cat default.yaml</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">default-pod</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">busybox</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">busybox</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">args</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#9ECBFF;">/bin/sh</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#9ECBFF;">-c</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#9ECBFF;">sleep 60000</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#cat default.yaml</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">default-pod</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">busybox</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">busybox</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">args</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#032F62;">/bin/sh</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#032F62;">-c</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#032F62;">sleep 60000</span></span></code></pre></div><ul><li>查看</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[root@kube-master yaml]# kubectl describe pod default-pod</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[root@kube-master yaml]# kubectl describe pod default-pod</span></span></code></pre></div><blockquote><p>容器的 requests 和 limits 与我们在 LimitRange 对象中设置的一致</p></blockquote><h4 id="cpu-超限制" tabindex="-1">cpu 超限制 <a class="header-anchor" href="#cpu-超限制" aria-label="Permalink to &quot;cpu 超限制&quot;">​</a></h4><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># kubectl run  cpu-over --image=busybox --restart=Never --requests=&#39;cpu=1200m,memory=30Mi&#39; sleep 6000</span></span>
<span class="line"><span style="color:#B392F0;">The</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Pod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;cpu-over&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">invalid:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">spec.containers[</span><span style="color:#79B8FF;">0</span><span style="color:#9ECBFF;">].resources.requests:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Invalid</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">value:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;1200m&quot;:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">must</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">be</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">less</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">than</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">or</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">equal</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cpu</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">limit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># kubectl run  cpu-over --image=busybox --restart=Never --requests=&#39;cpu=1200m,memory=30Mi&#39; sleep 6000</span></span>
<span class="line"><span style="color:#6F42C1;">The</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Pod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;cpu-over&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">invalid:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">spec.containers[</span><span style="color:#005CC5;">0</span><span style="color:#032F62;">].resources.requests:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Invalid</span><span style="color:#24292E;"> </span><span style="color:#032F62;">value:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;1200m&quot;:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">must</span><span style="color:#24292E;"> </span><span style="color:#032F62;">be</span><span style="color:#24292E;"> </span><span style="color:#032F62;">less</span><span style="color:#24292E;"> </span><span style="color:#032F62;">than</span><span style="color:#24292E;"> </span><span style="color:#032F62;">or</span><span style="color:#24292E;"> </span><span style="color:#032F62;">equal</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cpu</span><span style="color:#24292E;"> </span><span style="color:#032F62;">limit</span></span></code></pre></div><h4 id="内存超限制" tabindex="-1">内存超限制 <a class="header-anchor" href="#内存超限制" aria-label="Permalink to &quot;内存超限制&quot;">​</a></h4><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># kubectl run  cpu-over --image=busybox --restart=Never --requests=&#39;cpu=200m,memory=300Mi&#39; sleep 6000</span></span>
<span class="line"><span style="color:#B392F0;">The</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Pod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;cpu-over&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">invalid:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">spec.containers[</span><span style="color:#79B8FF;">0</span><span style="color:#9ECBFF;">].resources.requests:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Invalid</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">value:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;300Mi&quot;:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">must</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">be</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">less</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">than</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">or</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">equal</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">memory</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">limit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># kubectl run  cpu-over --image=busybox --restart=Never --requests=&#39;cpu=200m,memory=300Mi&#39; sleep 6000</span></span>
<span class="line"><span style="color:#6F42C1;">The</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Pod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;cpu-over&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">invalid:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">spec.containers[</span><span style="color:#005CC5;">0</span><span style="color:#032F62;">].resources.requests:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Invalid</span><span style="color:#24292E;"> </span><span style="color:#032F62;">value:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;300Mi&quot;:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">must</span><span style="color:#24292E;"> </span><span style="color:#032F62;">be</span><span style="color:#24292E;"> </span><span style="color:#032F62;">less</span><span style="color:#24292E;"> </span><span style="color:#032F62;">than</span><span style="color:#24292E;"> </span><span style="color:#032F62;">or</span><span style="color:#24292E;"> </span><span style="color:#032F62;">equal</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">memory</span><span style="color:#24292E;"> </span><span style="color:#032F62;">limit</span></span></code></pre></div><h3 id="不指定-cpu-和-mem-limits" tabindex="-1">不指定 CPU 和 mem Limits <a class="header-anchor" href="#不指定-cpu-和-mem-limits" aria-label="Permalink to &quot;不指定 CPU 和 mem Limits&quot;">​</a></h3><p>如果没有为容器指定 CPU 限制，那么容器在可以使用的 CPU 资源是没有上限。因而可以使用所在节点上所有的可用 CPU 资源，这样可能会造成某一个 Pod 占用了大量的 CPU 时间，可能会影响其他的 Pod 正常运行，从而造成业务的不稳定性。</p><p>这个也不用担心，在 Kubernetes 中，可以通过<a href="https://kubernetes.io/zh-cn/docs/concepts/policy/limit-range/" target="_blank" rel="noreferrer">LimitRange</a>自动为容器设定，所使用的 CPU 资源和内存资源最大最小值</p><h1 id="_5-资源配额管理-resourcequota" tabindex="-1">5.资源配额管理（ResourceQuota） <a class="header-anchor" href="#_5-资源配额管理-resourcequota" aria-label="Permalink to &quot;5.资源配额管理（ResourceQuota）&quot;">​</a></h1><p>资源配额管理（<code>Resource Quotas</code>）通过 <code>ResourceQuota</code> 对象，可以定义资源配额，这个资源配额可以为每个命名空间都提供一个总体的资源限制：它可以限制命名空间中某种类型的对象的总数量上限，也可以设置命名空间中 Pod 可以使用的计算资源的总上限。</p><p>在使用资源配额时，需要注意以下两点：</p><ol><li>如果集群中总的可用资源小于各命名空间中资源配额的总和，那么可能会导致资源竞争。在发生资源竞争时，Kubernetes 系统会遵循先到先得的原则。</li><li>不管是资源竞争还是配额修改，都不会影响已创建的资源使用对象。</li></ol><h2 id="_5-1-概念" tabindex="-1">5.1 概念 <a class="header-anchor" href="#_5-1-概念" aria-label="Permalink to &quot;5.1 概念&quot;">​</a></h2><p>Kubemetes 可以通过存活探针(liveness probe)检查容器是否还在运行。可以为 pod 中的每个容器单独指定存活探针。如果探测失败，Kubemetes 将定期执行探针并重新启动容器。</p><p>资源配额（Resource Quotas）是用来限制用户资源用量的一种机制，限制 Pod 的请求不会超过配额，需要在 namespace 中创建一个 ResourceQuota 对象</p><p><strong>资源配额类型：</strong></p><ul><li>计算资源。包括 cpu 和 memory</li><li>存储资源。包括存储资源的总量以及指定 storage class 的总量</li><li>对象数。即可创建的对象的个数</li></ul><h2 id="_5-2-resourcequota-作用" tabindex="-1">5.2 ResourceQuota 作用 <a class="header-anchor" href="#_5-2-resourcequota-作用" aria-label="Permalink to &quot;5.2 ResourceQuota 作用&quot;">​</a></h2><p>尽管 LimitRange 资源能限制单个容器、Pod 及 PVC 等相关计算资源或存储资源的用量，但用户依然可以创建数量众多的此类资源对象进而侵占所有的系统资源。于是，Kubernetes 提供了 ResourceQuota 资源用于定义名称空间的对象数量或系统资源配额</p><div class="danger custom-block"><p class="custom-block-title">❌ 注意</p><p>LimitRange 应用于单独的 pod，ResourceQuota 应用于命名空间中所有的 pod</p></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202404261601532.png" alt="image-20240426160154222"></p><h2 id="_5-3-在-master-中开启资源配额选型" tabindex="-1">5.3 在 Master 中开启资源配额选型 <a class="header-anchor" href="#_5-3-在-master-中开启资源配额选型" aria-label="Permalink to &quot;5.3 在 Master 中开启资源配额选型&quot;">​</a></h2><p>资源配额可以通过在 kube-apiserver 的 <code>--admission-control</code>参数值中添加 <code>ResourceQuota</code>参数进行开启。如果在某个命名空间的定义中存在 ResourceQuota，那么对于该命名空间而言，资源配额就是默认开启的。一个命名空间可以有多个 ResourceQuota 配置项。（重启服务的时候会提示：–admission-control has been deprecated, Use --enable-admission-plugins or --disable-admission-plugins instead. Will be removed in a future version.）更换使用 <code>--enable-admission-plugins</code>即可。</p><h3 id="_5-3-1-计算资源配额-compute-resource-quota" tabindex="-1">5.3.1 计算资源配额（Compute Resource Quota） <a class="header-anchor" href="#_5-3-1-计算资源配额-compute-resource-quota" aria-label="Permalink to &quot;5.3.1 计算资源配额（Compute Resource Quota）&quot;">​</a></h3><p>资源配额可以限制一个命名空间中所有 Pod 的计算资源的总和。ResourceQuota 目前支持闲置的计算资源类型如表：</p><table><thead><tr><th>资源名称</th><th>描述</th></tr></thead><tbody><tr><td>cpu</td><td>所有非终止状态的 Pod，CPU Requests 的总和不能超过该值</td></tr><tr><td>requests.cpu</td><td>所有非终止状态的 Pod，CPU Requests 的总和不能超过该值</td></tr><tr><td>limits.cpu</td><td>所有非终止状态的 Pod，CPU Limits 的总和不能超过该值</td></tr><tr><td>memory</td><td>所有非终止状态的 Pod，内存 Requests 的总和不能超过该值</td></tr><tr><td>requests.memory</td><td>所有非终止状态的 Pod，内存 Requests 的总和不能超过该值</td></tr><tr><td>limits.memory</td><td>所有非终止状态的 Pod，内存 Limits 的总和不能超过该值</td></tr></tbody></table><h3 id="_5-3-2-存储资源配额-volume-count-quota" tabindex="-1">5.3.2 存储资源配额（Volume Count Quota） <a class="header-anchor" href="#_5-3-2-存储资源配额-volume-count-quota" aria-label="Permalink to &quot;5.3.2 存储资源配额（Volume Count Quota）&quot;">​</a></h3><p>可以在给定的命名空间中限制所使用的存储资源（Storage Resources）的总量，目前支持的存储资源名称如表：</p><table><thead><tr><th>资源名称</th><th>描述</th></tr></thead><tbody><tr><td>requests.storage</td><td>所有 PVC，存储资源的需求总量不能超过该值</td></tr><tr><td>persistentvolumeclaims</td><td>在该命名空间中所允许的 PVC 总量</td></tr><tr><td>storage-class-name.storageclass.storage.k8s.io/requests.storage</td><td>在所有与<code>&lt;storage-class-name&gt;</code> 相关的 PVC 请求的存储总量都不能超过该值，例如 <code>gold.storageclass.storage.k8s.io/requests.storage: 500Gi</code>表示类型为 gold 的 storageClass 对应的 PVC 的申请存储总量最多可达 500Gi</td></tr><tr><td>storage-class-name.storageclass.storage.k8s.io/persistentvolumeclaims</td><td>所有与<code>&lt;storage-class-name&gt;</code> 相关的 PVC 总数都不超过该值。</td></tr><tr><td>ephemeral-storage、requests.ephemeral-storage、limits.ephemeral-storage</td><td>本地临时存储（ephemeral-storage）的总量限制</td></tr></tbody></table><h2 id="_5-3-3-对象数量配额-object-count-quota" tabindex="-1">5.3.3 对象数量配额（Object Count Quota） <a class="header-anchor" href="#_5-3-3-对象数量配额-object-count-quota" aria-label="Permalink to &quot;5.3.3 对象数量配额（Object Count Quota）&quot;">​</a></h2><p>指定类型的对象数量可以被限制，例如，可以通过资源配额来限制在命名空间中创建的 Pod 的最大数量。这种配置可以防止某些用户大量创建 Pod 而迅速耗尽整个集群的 Pod IP 和计算资源。下表列出 ResourceQuota 支持限制的对象类型。</p><table><thead><tr><th>资源名称</th><th>描述</th></tr></thead><tbody><tr><td>configmaps</td><td>在该命名空间中允许存在的 ConfigMap 总数上限。</td></tr><tr><td>pods</td><td>在该命名空间中能存在的非终止状态 Pod 的总数上限。Pod 的终止状态等价于 Pod 的 <code>status.phase in (Failed, Successded) = true</code></td></tr><tr><td>replicationcontrollers</td><td>在该命名空间中能存在的 RC 的总数上限。</td></tr><tr><td>resourcequotas</td><td>在该命名空间中能存在的资源配额的总数上限。</td></tr><tr><td>services</td><td>在该命名空间中能存在的 Service 的总数上限。</td></tr><tr><td>services.loadbalancers</td><td>在该命名空间中能存在的 LoadBalancer 类型的 Service 总数上限。</td></tr><tr><td>services.nodeports</td><td>在该命名空间中能存在的 NodePort 类型的 Service 总数上限。</td></tr><tr><td>secrets</td><td>在该命名空间中能存在的 Secret 的总数上限。</td></tr></tbody></table><p>具体表示如下：</p><ul><li><code>count/&lt;resource&gt;.&lt;group&gt;</code>: 用于非核心（core）组成的资源，例如 <code>count/deployments.apps</code>、<code>count/cronjobs.batch</code>。</li><li><code>count/resource</code>: 用于核心组的资源，例如 <code>count/services</code>、<code>count/pods</code>。</li></ul><h2 id="_5-4-配额的作用域-quota-scopes" tabindex="-1">5.4 配额的作用域（Quota Scopes） <a class="header-anchor" href="#_5-4-配额的作用域-quota-scopes" aria-label="Permalink to &quot;5.4 配额的作用域（Quota Scopes）&quot;">​</a></h2><p>对每项资源配额都可以单独配置一组作用域，配置了作用域的资源配额只会对符合其作用域的资源使用情况进行计量和限制，作用域范围超出了资源配额的请求都会被报验证错误。下表列出了 ResourceQuota 的 4 种作用域。</p><table><thead><tr><th>作用域</th><th>说明</th></tr></thead><tbody><tr><td>Terminating</td><td>匹配所有 spec.activeDeadlineSeconds 不小于 0 的 Pod</td></tr><tr><td>NotTerminating</td><td>匹配所有 spec.activeDeadlineSeconds 是 nil 的 Pod</td></tr><tr><td>BestEffort</td><td>匹配所有 Qos 是 BestEffort 的 Pod</td></tr><tr><td>NotBestEffort</td><td>匹配所有 Qos 不是 BestEffort 的 Pod</td></tr><tr><td>PriorityClass</td><td>匹配所有引用了所指定的优先级类的 Pods</td></tr></tbody></table><p>其中：</p><ul><li>BestEffort 作用域可以限定资源配额来追踪 Pod 资源的使用。</li><li>而 Terminating、NotTerminating、NotBestEffort、PriorityClass 除了可以追踪 Pod，还可以追踪 CPU、Limits.cpu、Limits.memory、memory、requests.cpu、 requests.memory 等资源的使用情况。</li></ul><h2 id="_5-5-资源配额的定义" tabindex="-1">5.5 资源配额的定义 <a class="header-anchor" href="#_5-5-资源配额的定义" aria-label="Permalink to &quot;5.5 资源配额的定义&quot;">​</a></h2><p>与 LimitRange 相似，ResourceQuota 也被设置在命名空间中。创建名为 myspace 的命名空间：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl create namespace myspace</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl create namespace myspace</span></span></code></pre></div><p>创建 ResourceQuota 配置文件 compute-resource.yaml</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ResourceQuota</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">compute-resources</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">hard</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">pods</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;4&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">requests.cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">requests.memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">1Gi</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">limits.cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">limits.memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">2Gi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ResourceQuota</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">compute-resources</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">hard</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">pods</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;4&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">requests.cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">requests.memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">1Gi</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">limits.cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">limits.memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">2Gi</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"> kubectl create -f compute-resource.yaml --namespace=myspace</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"> kubectl create -f compute-resource.yaml --namespace=myspace</span></span></code></pre></div><p>创建另一个名为 object-counts.yaml 的文件，用于设置对象数量的配额</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ResourceQuota</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">object-counts</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">hard</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">configmaps</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;10&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">persistentvolumeclaims</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;4&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">replicationcontrollers</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;20&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">secrets</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;10&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">services</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;10&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">services.loadbalancers</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ResourceQuota</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">object-counts</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">hard</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">configmaps</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;10&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">persistentvolumeclaims</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;4&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">replicationcontrollers</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;20&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">secrets</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;10&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">services</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;10&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">services.loadbalancers</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2&quot;</span></span></code></pre></div><p>创建该 ResourceQuota：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl create -f object-counts.yaml --namespace=myspace</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl create -f object-counts.yaml --namespace=myspace</span></span></code></pre></div><p>查看各 ResourceQuota 的详细信息</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"> kubectl describe quota compute-resources --namespace=myspace</span></span>
<span class="line"><span style="color:#e1e4e8;"> </span></span>
<span class="line"><span style="color:#e1e4e8;"> Name:            compute-resources</span></span>
<span class="line"><span style="color:#e1e4e8;">Namespace:       myspace</span></span>
<span class="line"><span style="color:#e1e4e8;">Resource         Used  Hard</span></span>
<span class="line"><span style="color:#e1e4e8;">--------         ----  ----</span></span>
<span class="line"><span style="color:#e1e4e8;">limits.cpu       0     2</span></span>
<span class="line"><span style="color:#e1e4e8;">limits.memory    0     2Gi</span></span>
<span class="line"><span style="color:#e1e4e8;">pods             0     4</span></span>
<span class="line"><span style="color:#e1e4e8;">requests.cpu     0     1</span></span>
<span class="line"><span style="color:#e1e4e8;">requests.memory  0     1Gi</span></span>
<span class="line"><span style="color:#e1e4e8;">[root@master1 ]# kubectl describe quota object-counts --namespace=myspace </span></span>
<span class="line"><span style="color:#e1e4e8;">Name:                   object-counts</span></span>
<span class="line"><span style="color:#e1e4e8;">Namespace:              myspace</span></span>
<span class="line"><span style="color:#e1e4e8;">Resource                Used  Hard</span></span>
<span class="line"><span style="color:#e1e4e8;">--------                ----  ----</span></span>
<span class="line"><span style="color:#e1e4e8;">configmaps              0     10</span></span>
<span class="line"><span style="color:#e1e4e8;">persistentvolumeclaims  0     4</span></span>
<span class="line"><span style="color:#e1e4e8;">replicationcontrollers  0     20</span></span>
<span class="line"><span style="color:#e1e4e8;">secrets                 1     10</span></span>
<span class="line"><span style="color:#e1e4e8;">services                0     10</span></span>
<span class="line"><span style="color:#e1e4e8;">services.loadbalancers  0     2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"> kubectl describe quota compute-resources --namespace=myspace</span></span>
<span class="line"><span style="color:#24292e;"> </span></span>
<span class="line"><span style="color:#24292e;"> Name:            compute-resources</span></span>
<span class="line"><span style="color:#24292e;">Namespace:       myspace</span></span>
<span class="line"><span style="color:#24292e;">Resource         Used  Hard</span></span>
<span class="line"><span style="color:#24292e;">--------         ----  ----</span></span>
<span class="line"><span style="color:#24292e;">limits.cpu       0     2</span></span>
<span class="line"><span style="color:#24292e;">limits.memory    0     2Gi</span></span>
<span class="line"><span style="color:#24292e;">pods             0     4</span></span>
<span class="line"><span style="color:#24292e;">requests.cpu     0     1</span></span>
<span class="line"><span style="color:#24292e;">requests.memory  0     1Gi</span></span>
<span class="line"><span style="color:#24292e;">[root@master1 ]# kubectl describe quota object-counts --namespace=myspace </span></span>
<span class="line"><span style="color:#24292e;">Name:                   object-counts</span></span>
<span class="line"><span style="color:#24292e;">Namespace:              myspace</span></span>
<span class="line"><span style="color:#24292e;">Resource                Used  Hard</span></span>
<span class="line"><span style="color:#24292e;">--------                ----  ----</span></span>
<span class="line"><span style="color:#24292e;">configmaps              0     10</span></span>
<span class="line"><span style="color:#24292e;">persistentvolumeclaims  0     4</span></span>
<span class="line"><span style="color:#24292e;">replicationcontrollers  0     20</span></span>
<span class="line"><span style="color:#24292e;">secrets                 1     10</span></span>
<span class="line"><span style="color:#24292e;">services                0     10</span></span>
<span class="line"><span style="color:#24292e;">services.loadbalancers  0     2</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">❌ 注意</p><p>资源配额与集群资源总量是完全独立的。资源配额是通过绝对的单位来配置的，这也就意味着如果在集群中新添加了节点，那么资源配额不会自动更新，而该资源配额所对应的命名空间中的对象也不能自动增加资源上限.</p></div><h2 id="_5-3-创建" tabindex="-1">5.3 创建 <a class="header-anchor" href="#_5-3-创建" aria-label="Permalink to &quot;5.3 创建&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#cat quota-cpu-memory.yaml</span></span>
<span class="line"><span style="color:#B392F0;">apiVersion:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#B392F0;">kind:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ResourceQuota</span></span>
<span class="line"><span style="color:#B392F0;">metadata:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">name:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cpu-and-mem</span></span>
<span class="line"><span style="color:#B392F0;">spec:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">hard:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">requests.cpu:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">requests.memory:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">Gi</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">limits.cpu:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1500</span><span style="color:#9ECBFF;">m</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">limits.memory:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1500</span><span style="color:#9ECBFF;">Mi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># kubectl apply -f quota-cpu-memory.yaml</span></span>
<span class="line"><span style="color:#B392F0;">resourcequota/cpu-and-mem</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">created</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#cat quota-cpu-memory.yaml</span></span>
<span class="line"><span style="color:#6F42C1;">apiVersion:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#6F42C1;">kind:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ResourceQuota</span></span>
<span class="line"><span style="color:#6F42C1;">metadata:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">name:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cpu-and-mem</span></span>
<span class="line"><span style="color:#6F42C1;">spec:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">hard:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">requests.cpu:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">requests.memory:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">Gi</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">limits.cpu:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1500</span><span style="color:#032F62;">m</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">limits.memory:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1500</span><span style="color:#032F62;">Mi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># kubectl apply -f quota-cpu-memory.yaml</span></span>
<span class="line"><span style="color:#6F42C1;">resourcequota/cpu-and-mem</span><span style="color:#24292E;"> </span><span style="color:#032F62;">created</span></span></code></pre></div><h3 id="查看-1" tabindex="-1">查看 <a class="header-anchor" href="#查看-1" aria-label="Permalink to &quot;查看&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#kubectl describe resourcequotas cpu-and-mem</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#kubectl describe resourcequotas cpu-and-mem</span></span></code></pre></div><h3 id="测试-resourcequota" tabindex="-1">测试 resourcequota <a class="header-anchor" href="#测试-resourcequota" aria-label="Permalink to &quot;测试 resourcequota&quot;">​</a></h3><ul><li>创建</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[root@kube-master yaml]# cat replicas-quota-test.yaml</span></span>
<span class="line"><span style="color:#e1e4e8;">apiVersion: apps/v1</span></span>
<span class="line"><span style="color:#e1e4e8;">kind: Deployment</span></span>
<span class="line"><span style="color:#e1e4e8;">metadata:</span></span>
<span class="line"><span style="color:#e1e4e8;">  name: replicas-quota-test</span></span>
<span class="line"><span style="color:#e1e4e8;">spec:</span></span>
<span class="line"><span style="color:#e1e4e8;">  replicas: 10</span></span>
<span class="line"><span style="color:#e1e4e8;">  selector:</span></span>
<span class="line"><span style="color:#e1e4e8;">    matchLabels:</span></span>
<span class="line"><span style="color:#e1e4e8;">      app: replicas-quota-test</span></span>
<span class="line"><span style="color:#e1e4e8;">  template:</span></span>
<span class="line"><span style="color:#e1e4e8;">    metadata:</span></span>
<span class="line"><span style="color:#e1e4e8;">      labels:</span></span>
<span class="line"><span style="color:#e1e4e8;">        app: replicas-quota-test</span></span>
<span class="line"><span style="color:#e1e4e8;">    spec:</span></span>
<span class="line"><span style="color:#e1e4e8;">      containers:</span></span>
<span class="line"><span style="color:#e1e4e8;">      - name: replicas-quota-test</span></span>
<span class="line"><span style="color:#e1e4e8;">        image: busybox</span></span>
<span class="line"><span style="color:#e1e4e8;">        command: [&quot;/bin/sh&quot;,&quot;-c&quot;,&quot;sleep 60000&quot;]</span></span>
<span class="line"><span style="color:#e1e4e8;">        resources:</span></span>
<span class="line"><span style="color:#e1e4e8;">          limits:</span></span>
<span class="line"><span style="color:#e1e4e8;">            cpu: &quot;200m&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">            memory: &quot;90Mi&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[root@kube-master yaml]# cat replicas-quota-test.yaml</span></span>
<span class="line"><span style="color:#24292e;">apiVersion: apps/v1</span></span>
<span class="line"><span style="color:#24292e;">kind: Deployment</span></span>
<span class="line"><span style="color:#24292e;">metadata:</span></span>
<span class="line"><span style="color:#24292e;">  name: replicas-quota-test</span></span>
<span class="line"><span style="color:#24292e;">spec:</span></span>
<span class="line"><span style="color:#24292e;">  replicas: 10</span></span>
<span class="line"><span style="color:#24292e;">  selector:</span></span>
<span class="line"><span style="color:#24292e;">    matchLabels:</span></span>
<span class="line"><span style="color:#24292e;">      app: replicas-quota-test</span></span>
<span class="line"><span style="color:#24292e;">  template:</span></span>
<span class="line"><span style="color:#24292e;">    metadata:</span></span>
<span class="line"><span style="color:#24292e;">      labels:</span></span>
<span class="line"><span style="color:#24292e;">        app: replicas-quota-test</span></span>
<span class="line"><span style="color:#24292e;">    spec:</span></span>
<span class="line"><span style="color:#24292e;">      containers:</span></span>
<span class="line"><span style="color:#24292e;">      - name: replicas-quota-test</span></span>
<span class="line"><span style="color:#24292e;">        image: busybox</span></span>
<span class="line"><span style="color:#24292e;">        command: [&quot;/bin/sh&quot;,&quot;-c&quot;,&quot;sleep 60000&quot;]</span></span>
<span class="line"><span style="color:#24292e;">        resources:</span></span>
<span class="line"><span style="color:#24292e;">          limits:</span></span>
<span class="line"><span style="color:#24292e;">            cpu: &quot;200m&quot;</span></span>
<span class="line"><span style="color:#24292e;">            memory: &quot;90Mi&quot;</span></span></code></pre></div><ul><li>查看</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[root@kube-master yaml]# kubectl get pod</span></span>
<span class="line"><span style="color:#e1e4e8;">NAME                                   READY   STATUS    RESTARTS         AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">replicas-quota-test-84bd8d9fb4-bnbm9   1/1     Running   0                7m6s</span></span>
<span class="line"><span style="color:#e1e4e8;">replicas-quota-test-84bd8d9fb4-ctjdz   1/1     Running   0                7m6s</span></span>
<span class="line"><span style="color:#e1e4e8;">replicas-quota-test-84bd8d9fb4-n2kv9   1/1     Running   0                7m6s</span></span>
<span class="line"><span style="color:#e1e4e8;">replicas-quota-test-84bd8d9fb4-n445x   1/1     Running   0                7m6s</span></span>
<span class="line"><span style="color:#e1e4e8;">replicas-quota-test-84bd8d9fb4-s8jt2   1/1     Running   0                7m6s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[root@kube-master yaml]# kubectl get pod</span></span>
<span class="line"><span style="color:#24292e;">NAME                                   READY   STATUS    RESTARTS         AGE</span></span>
<span class="line"><span style="color:#24292e;">replicas-quota-test-84bd8d9fb4-bnbm9   1/1     Running   0                7m6s</span></span>
<span class="line"><span style="color:#24292e;">replicas-quota-test-84bd8d9fb4-ctjdz   1/1     Running   0                7m6s</span></span>
<span class="line"><span style="color:#24292e;">replicas-quota-test-84bd8d9fb4-n2kv9   1/1     Running   0                7m6s</span></span>
<span class="line"><span style="color:#24292e;">replicas-quota-test-84bd8d9fb4-n445x   1/1     Running   0                7m6s</span></span>
<span class="line"><span style="color:#24292e;">replicas-quota-test-84bd8d9fb4-s8jt2   1/1     Running   0                7m6s</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">💡 说明</p><p>发现只运行了5个pod，原因是requests的cpu为200（requests值未设置时与limits相同），resourcequotas中requests.cpu的限制值为1500m,所以最多只能新建5个pod</p></div><h3 id="限制可创建对象的个数" tabindex="-1">限制可创建对象的个数 <a class="header-anchor" href="#限制可创建对象的个数" aria-label="Permalink to &quot;限制可创建对象的个数&quot;">​</a></h3><ul><li>创建</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">root@kube-master yaml</span><span style="color:#E1E4E8;">]# </span><span style="color:#9ECBFF;">cat quota-count.yaml</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ResourceQuota</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">count-quota</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">hard</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">pods</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">replicationcontrollers</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">secrets</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">configmaps</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">persistentvolumeclaims</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">services</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">services.loadbalancers</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">services.nodeports</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">ssd.storageclass.storage.k8s.io/persistentvolumeclaims</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#032F62;">root@kube-master yaml</span><span style="color:#24292E;">]# </span><span style="color:#032F62;">cat quota-count.yaml</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ResourceQuota</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">count-quota</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">hard</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">pods</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">replicationcontrollers</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">secrets</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">configmaps</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">persistentvolumeclaims</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">services</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">services.loadbalancers</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">services.nodeports</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">ssd.storageclass.storage.k8s.io/persistentvolumeclaims</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span></span></code></pre></div><p>该命名空间最多创建 10 个 pod、5 个 Replication Controller、10 个 Secret、10 个 ConfigMap、4 个 PVC、5 个 Service、1 个 LoadBalancer、2 个 NodePort 和 2 个 StorageClass 为 ssd 的 PVC。</p><table><thead><tr><th style="text-align:left;">pod</th><th style="text-align:left;">Replication Controller</th><th style="text-align:left;">Secret</th><th style="text-align:left;">ConfigMap</th><th style="text-align:left;">PVC</th><th style="text-align:left;">Service</th><th style="text-align:left;">LoadBalancer</th><th style="text-align:left;">NodePort</th><th style="text-align:left;">ssd PVC</th></tr></thead><tbody><tr><td style="text-align:left;">10</td><td style="text-align:left;">5</td><td style="text-align:left;">10</td><td style="text-align:left;">10</td><td style="text-align:left;">4</td><td style="text-align:left;">5</td><td style="text-align:left;">1</td><td style="text-align:left;">2</td><td style="text-align:left;">2</td></tr></tbody></table><ul><li>查看</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@kube-master yaml]# kubectl apply  -f quota-count.yaml</span></span>
<span class="line"><span style="color:#B392F0;">resourcequota/count-quota</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">created</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[root@kube-master yaml]# kubectl describe resourcequotas count-quota</span></span>
<span class="line"><span style="color:#B392F0;">Name:</span><span style="color:#E1E4E8;">                                                   </span><span style="color:#9ECBFF;">count-quota</span></span>
<span class="line"><span style="color:#B392F0;">Namespace:</span><span style="color:#E1E4E8;">                                              </span><span style="color:#9ECBFF;">default</span></span>
<span class="line"><span style="color:#B392F0;">Resource</span><span style="color:#E1E4E8;">                                                </span><span style="color:#9ECBFF;">Used</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">Hard</span></span>
<span class="line"><span style="color:#B392F0;">--------</span><span style="color:#E1E4E8;">                                                </span><span style="color:#79B8FF;">----</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">----</span></span>
<span class="line"><span style="color:#B392F0;">configmaps</span><span style="color:#E1E4E8;">                                              </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#B392F0;">persistentvolumeclaims</span><span style="color:#E1E4E8;">                                  </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">5</span></span>
<span class="line"><span style="color:#B392F0;">pods</span><span style="color:#E1E4E8;">                                                    </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#B392F0;">replicationcontrollers</span><span style="color:#E1E4E8;">                                  </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">5</span></span>
<span class="line"><span style="color:#B392F0;">secrets</span><span style="color:#E1E4E8;">                                                 </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#B392F0;">services</span><span style="color:#E1E4E8;">                                                </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">5</span></span>
<span class="line"><span style="color:#B392F0;">services.loadbalancers</span><span style="color:#E1E4E8;">                                  </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#B392F0;">services.nodeports</span><span style="color:#E1E4E8;">                                      </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#B392F0;">ssd.storageclass.storage.k8s.io/persistentvolumeclaims</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@kube-master yaml]# kubectl apply  -f quota-count.yaml</span></span>
<span class="line"><span style="color:#6F42C1;">resourcequota/count-quota</span><span style="color:#24292E;"> </span><span style="color:#032F62;">created</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[root@kube-master yaml]# kubectl describe resourcequotas count-quota</span></span>
<span class="line"><span style="color:#6F42C1;">Name:</span><span style="color:#24292E;">                                                   </span><span style="color:#032F62;">count-quota</span></span>
<span class="line"><span style="color:#6F42C1;">Namespace:</span><span style="color:#24292E;">                                              </span><span style="color:#032F62;">default</span></span>
<span class="line"><span style="color:#6F42C1;">Resource</span><span style="color:#24292E;">                                                </span><span style="color:#032F62;">Used</span><span style="color:#24292E;">  </span><span style="color:#032F62;">Hard</span></span>
<span class="line"><span style="color:#6F42C1;">--------</span><span style="color:#24292E;">                                                </span><span style="color:#005CC5;">----</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">----</span></span>
<span class="line"><span style="color:#6F42C1;">configmaps</span><span style="color:#24292E;">                                              </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#6F42C1;">persistentvolumeclaims</span><span style="color:#24292E;">                                  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#6F42C1;">pods</span><span style="color:#24292E;">                                                    </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">    </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#6F42C1;">replicationcontrollers</span><span style="color:#24292E;">                                  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#6F42C1;">secrets</span><span style="color:#24292E;">                                                 </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#6F42C1;">services</span><span style="color:#24292E;">                                                </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#6F42C1;">services.loadbalancers</span><span style="color:#24292E;">                                  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#6F42C1;">services.nodeports</span><span style="color:#24292E;">                                      </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#6F42C1;">ssd.storageclass.storage.k8s.io/persistentvolumeclaims</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">2</span></span></code></pre></div><h1 id="_6-pod-服务质量-qos" tabindex="-1">6.Pod 服务质量 QoS <a class="header-anchor" href="#_6-pod-服务质量-qos" aria-label="Permalink to &quot;6.Pod 服务质量 QoS&quot;">​</a></h1><p>容器的资源配置满足以下两个条件：</p><ul><li>Requests ≤ 节点可用资源</li><li>Requests ≤ Limits</li></ul><h2 id="_6-0-资源" tabindex="-1">6.0 资源 <a class="header-anchor" href="#_6-0-资源" aria-label="Permalink to &quot;6.0 资源&quot;">​</a></h2><h3 id="可压缩资源" tabindex="-1">可压缩资源 <a class="header-anchor" href="#可压缩资源" aria-label="Permalink to &quot;可压缩资源&quot;">​</a></h3><ul><li>Kubernetes 目前支持的可压缩资源是 CPU。</li><li>Pod 可以得到 Requests 配置的 CPU 使用量，而能否使用超过 Requests 值的部分取决于系统的负载和调度。</li><li>空闲的 CPU 资源按照容器 Requests 值的比例分配。比如容器 A 的 CPU 配置为 Requests 1 Limits 10，容器 B 的 CPU 配置为 Requests 2 Limits 8。初始状态下容器可以用的 CPU 为 3cores，那么 A 和 B 恰好得到再其 Requests 中定义的 CPU 用量，即 1CPU 和 2CPU。如果 A 和 B 都需要更多的 CPU 资源，而恰好此时系统的其他任务释放了 1.5CPU，那么这 1.5CPU 将按照 A 和 B 的 Requests 值的比例 1:2 分配给 A 和 B，即最终 A 可使用 1.5CPU，B 可使用 3CPU。</li><li>如果 Pod 的 CPU 用来超过了在 Limits 10 中配置的 CPU 用量，那么 cgroups 会对 Pod 中容器的 CPU 用来进行限流（Throttled）；如果 Pod 没有配置 Limits 10，那么 Pod 会尝试抢占所有空间的 CPU 资源。</li></ul><h3 id="不可压缩资源" tabindex="-1">不可压缩资源 <a class="header-anchor" href="#不可压缩资源" aria-label="Permalink to &quot;不可压缩资源&quot;">​</a></h3><ul><li>Kubernetes 目前支持的不可压缩资源是内存。</li><li>Pod 可以得到在 Requests 中配置的内存。 <ul><li>如果 Pod 的内存用量小于它的 Requests 的配置，那么这个 Pod 可以正常运行（除非出现操作系统级别内存不足等严重问题）。</li><li>如果 Pod 的内存用量超过它的 Requests 的配置，那么这个 Pod 有可能会被 Kubernetes “杀掉”： <ul><li>比如 Pod A 使用的内存量在 Requests ~ Limits 之间，同一机器上的另一个 Pod B 之前使用的内存小于 Requests 的值，此时 Pod B 压力增大，Pod B 向系统申请的总量不超过自己的 Requests 值的内存，那么 Pod A 可能会直接被 Kubernetes “杀掉”。</li><li>另一种情况是 Pod A 使用的内存量在 Requests ~ Limits 之间，此时 Kubernetes 将一个新的 Pod 调度到这台机器上，只有 Pod A 使用量超过自己的 Requests 值的内存，那么也可能会直接被 Kubernetes “杀掉”。</li></ul></li></ul></li><li>如果 Pod 的内存用量超过它的 Limits 值，那么操作系统内核会“杀掉”Pod 所有容器的所有进程中内存使用量最多的一个，直到内存不超过 Limits 时为止。</li></ul><h3 id="对调度策略的影响" tabindex="-1"><strong>对调度策略的影响</strong> <a class="header-anchor" href="#对调度策略的影响" aria-label="Permalink to &quot;**对调度策略的影响**&quot;">​</a></h3><ul><li>Kubernetes 的 kube-scheduler 通过计算 Pod 中所有容器的 Requests 总和来决定对 Pod 的调度。</li><li>不管是 CPU 还是内存，Kubernetes 调度器和 kubelet 都会确保节点上的所有 Pod 的 Requests 总和不会超过在该节点上可分配给容器使用的资源容量上限。</li></ul><h2 id="_6-1-qos-定义" tabindex="-1">6.1 QoS 定义 <a class="header-anchor" href="#_6-1-qos-定义" aria-label="Permalink to &quot;6.1 QoS 定义&quot;">​</a></h2><p>QoS（QualityofService），可译为&quot;服务质量等级&quot;，或者译作&quot;服务质量保证&quot;，是作用在 Pod 上的一个配置，当</p><p>Kubernetes 创建一个 Pod 时，它就会给这个 Pod 分配一个 QoS 等级。</p><p>在 Kubernetes 的环境中，Kubernetes 允许节点的 Pod 过载使用资源，这意味着节点无法同时满足所有 Pod 以过载的方式运行。因此在内存资源紧缺的情况下，Kubernetes 需要借助 Pod 对象的服务质量和优先级等完成判定，进而挑选对应的 Pod 杀死。Kubernetes 根据 pod 的 Requests 和 Limits 属性，把 Pod 对象归类为三类: <code>Guaranteed（完全可靠的）</code>、<code>Burstable（弹性波动、较可靠的）</code>和 <code>BestEffort</code>（尽力而为、不太可靠的），这三种依次递减的优先级来决定优先“杀掉”哪些容器。</p><p>优先级，Guaranteed &gt; BurStabLe &gt; BestEffort</p><h2 id="_6-2-qos-类别" tabindex="-1">6.2 QoS 类别 <a class="header-anchor" href="#_6-2-qos-类别" aria-label="Permalink to &quot;6.2 QoS 类别&quot;">​</a></h2><h3 id="guaranteed-完全可靠的" tabindex="-1">Guaranteed（完全可靠的） <a class="header-anchor" href="#guaranteed-完全可靠的" aria-label="Permalink to &quot;Guaranteed（完全可靠的）&quot;">​</a></h3><p>如果 Pod 中的所有容器对所有资源类型都定义了 Limits 和 Requests，并且所有容器的 Limits 值都和 Requests 值相等（且都不为 0），那么该 Pod 的 QoS 级别就是 Guaranteed。</p><div class="danger custom-block"><p class="custom-block-title">❌ 注意</p><p>在这种情况下，容器可以不定义 Requests，因为 Requests 值在未定义时默认等于 Limits。</p></div><h3 id="burstable-弹性波动、较可靠的" tabindex="-1">Burstable（弹性波动、较可靠的） <a class="header-anchor" href="#burstable-弹性波动、较可靠的" aria-label="Permalink to &quot;Burstable（弹性波动、较可靠的）&quot;">​</a></h3><p>Burstable 级别的 Pod 涉及两种情况：</p><ol><li>Pod 中的一部分容器在一种或多种类型的资源配置中定义了 Requests 值和 Limits 值（都不为 0），且 Requests 值小于 Limits 值。</li><li>Pod 中的一部分容器未定义资源配置（Requests 和 Limits 都未定义）。</li></ol><div class="danger custom-block"><p class="custom-block-title">❌ 注意</p><p>容器未定义 Limits 时，Limits 值默认等于节点资源容量的上限。</p></div><h3 id="besteffort-尽力而为、不太可靠的" tabindex="-1">BestEffort（尽力而为、不太可靠的） <a class="header-anchor" href="#besteffort-尽力而为、不太可靠的" aria-label="Permalink to &quot;BestEffort（尽力而为、不太可靠的）&quot;">​</a></h3><p>如果 Pod 中所有容器都未定义资源配置（Requests 和 Limits 都未定义），那么该 Pod 的 QoS 级别就是 BestEffort。</p><p>当 Kubernetes 集群内存资源紧缺，优先杀死 BestEffort 类别的容器，因为系统不为该类资源提供任何服务保证，但此类资源最⼤的好处就是能够尽可能的使⽤资源.</p><p>如果系统中没有 BestEffort 类别的容器，接下来就轮到 Burstable 类别的容器，如果有多个 Burstable 类别的容器，就看谁的内存资源占⽤多，就优先⼲掉谁。⽐如 A 容器申请 1G 内存资源，实际使⽤了 95%，⽽ B 容器申请了 2G 内存资源，实际使⽤了 80%，但任然会优先⼲掉 A 容器，虽然 A 容器的⽤量少，但与⾃身的 Requests 值相⽐，它的占⽐要⼤于 B 容器。</p><p>对于 Guaranteed 类别的容器拥有最高优先级，它们不会被杀死，除非其内存资源需求超限，或者 00M 时没有其他更低优先级的 Pod 对象存在，才会干掉 Guaranteed 类容器.</p><h2 id="_6-3-qos-的工作特点" tabindex="-1">6.3 QoS 的工作特点 <a class="header-anchor" href="#_6-3-qos-的工作特点" aria-label="Permalink to &quot;6.3 QoS 的工作特点&quot;">​</a></h2><p>在 Pod 的 CPU Requests 无法得到满足（比如节点的系统任务占用过多的 CPU 导致无法分配足够的 CPU 给容器使用）时，容器得到的 CPU 会被限流</p><p>由于内存是不可压缩的资源，所以针对内存资源紧缺的情况，会按照以下逻辑处理：</p><ol><li>BestEffort Pod 的优先级最低，在这类 Pod 中运行的进程会在系统内存紧缺时被第一优先“杀掉”。从另一个角度看，由于没有设置资源 Limits，所以在资源充足时它们可以充分利用所有闲置资源。</li><li>Burstable Pod 的优先级居中，这类 Pod 在初始时会被分配较少的可靠资源，但可以按需申请更多资源。如果整个系统内存紧缺，又没有 BestEffort 容器可以被“杀掉”以释放资源，那么这类 Pod 中的进程可能会被“杀掉”。</li><li>Guaranteed Pod 的优先级最高，而且一般情况下这类 Pod 只要不超过其资源 Limits 的限制就不会被“杀掉”。如果整个系统内存紧缺，又没有其他优先级更低的容器可以被“杀掉”以释放资源，那么这类 Pod 中的进程也可能会被“杀掉”。</li></ol><h2 id="_6-4-oom-计分规则" tabindex="-1">6.4 OOM 计分规则 <a class="header-anchor" href="#_6-4-oom-计分规则" aria-label="Permalink to &quot;6.4 OOM 计分规则&quot;">​</a></h2><p>OOM（Out Of Memory）计分规则包括如下内容：</p><ul><li>OOM 计分的计算方法：计算进程所使用的内存在系统中所占的百分比，取其中不含百分号的数值，再乘以 10，该结果是进程 OOM 的基础分；将进程 OOM 基础分的分值再加上这个进程 OOM_SCORE_ADJ（分数调整）值，作为进程 OOM 的最终分值（除 root 启动的进程外）。在系统发生 OOM 时，OOM Killer 会优先“杀掉”OOM 计分更高的进程。</li><li>进程的 OOM 计分的基本分数范围是 0 ~ 1000，如果 A 进程的调整值 OOM_SCORE_ADJ 减去 B 进程的调整值的结果大于 1000，那么 A 进程的 OOM 计分最终值必然大于 B 进程，会优先“杀掉”A 进程。</li><li>不论调整 OOM_SCORE_ADJ 值为多少，任何进程的最终分值范围也是 0 ~ 1000。</li></ul><p>在 Kubernetes 中，不同 QoS 的 OOM 计分调整值如表所示：</p><table><thead><tr><th>QoS</th><th>oom_score_adj</th></tr></thead><tbody><tr><td>Guaranteed</td><td>-998</td></tr><tr><td>BestEffort</td><td>1000</td></tr><tr><td>Burstable</td><td>min(max(2, 1000 - (1000 * memoryRequestBytes) / machineMemoryCapacityBytes), 999)</td></tr></tbody></table><h3 id="驱逐" tabindex="-1">驱逐 <a class="header-anchor" href="#驱逐" aria-label="Permalink to &quot;驱逐&quot;">​</a></h3><p>具体地说，当 Kubernetes 所管理的宿主机上不可压缩资源短缺时，就有可能触发 Eviction 驱逐。目前，Kubernetes 为你设置的 Eviction 的默认阈值如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">memory.available&lt;100Mi</span></span>
<span class="line"><span style="color:#e1e4e8;">nodefs.available&lt;10%</span></span>
<span class="line"><span style="color:#e1e4e8;">nodefs.inodesFree&lt;5%</span></span>
<span class="line"><span style="color:#e1e4e8;">imagefs.available&lt;15%</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">memory.available&lt;100Mi</span></span>
<span class="line"><span style="color:#24292e;">nodefs.available&lt;10%</span></span>
<span class="line"><span style="color:#24292e;">nodefs.inodesFree&lt;5%</span></span>
<span class="line"><span style="color:#24292e;">imagefs.available&lt;15%</span></span></code></pre></div><p>当宿主机的 Eviction 阈值达到后，就会进入 MemoryPressure 或者 DiskPressure 状态，从而避免新的 Pod 被调度到这台宿主机上，然后 kubelet 会根据 QoS 的级别来挑选 Pod 进行驱逐，</p><p>具体驱逐优先级是：BestEffort -&gt; Burstable -&gt; Guaranteed。</p><p>QoS 的级别是通过 Linux 内核 OOM 分数值来实现的，OOM 分数值取值范围在-1000 ~1000 之间。在 Kubernetes 中，常用服务的 OOM 的分值如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">-1000  =&gt; sshd等进程 </span></span>
<span class="line"><span style="color:#e1e4e8;">-999   =&gt; Kubernetes 管理进程</span></span>
<span class="line"><span style="color:#e1e4e8;">-998   =&gt; Guaranteed Pod</span></span>
<span class="line"><span style="color:#e1e4e8;">0      =&gt; 其他进程 0</span></span>
<span class="line"><span style="color:#e1e4e8;">2~999  =&gt; Burstable Pod  </span></span>
<span class="line"><span style="color:#e1e4e8;">1000   =&gt; BestEffort Pod</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">-1000  =&gt; sshd等进程 </span></span>
<span class="line"><span style="color:#24292e;">-999   =&gt; Kubernetes 管理进程</span></span>
<span class="line"><span style="color:#24292e;">-998   =&gt; Guaranteed Pod</span></span>
<span class="line"><span style="color:#24292e;">0      =&gt; 其他进程 0</span></span>
<span class="line"><span style="color:#24292e;">2~999  =&gt; Burstable Pod  </span></span>
<span class="line"><span style="color:#24292e;">1000   =&gt; BestEffort Pod</span></span></code></pre></div><p>OOM 分数越高，就代表这个 Pod 的优先级越低，在出现资源竞争的时候，就越早被杀掉，分数为-999 和-1000 的进程永远不会因为 OOM 而被杀掉。</p><div class="danger custom-block"><p class="custom-block-title">❌ 注意</p><p>如果期望 Pod 尽可能的不被驱逐，就应当把 Pod 里的每一个 Container 的 requests 和 limits 都设置齐全，并且 requests 和 limits 值要相等。</p></div><h2 id="_6-5-案例" tabindex="-1">6.5 案例 <a class="header-anchor" href="#_6-5-案例" aria-label="Permalink to &quot;6.5 案例&quot;">​</a></h2><h3 id="创建-guaranteed-的-pod" tabindex="-1">创建 Guaranteed 的 Pod <a class="header-anchor" href="#创建-guaranteed-的-pod" aria-label="Permalink to &quot;创建 Guaranteed 的 Pod&quot;">​</a></h3><p>对于 QoS 类为 Guaranteed 的 Pod</p><ul><li><p>Pod 中的每个容器都必须指定内存请求和内存限制，且 Pod 中每个容器内存请求必须等于内存限制</p></li><li><p>Pod 中的每个容器都必须指定 CPU 请求和 CPU 限制，且 Pod 中每个容器 CPU 请求必须等于 CPU 限制</p><p>1.创建⼀个 Pod，容器设置了内存请求和内存限制，值都是 200MiB。容器设置了 CPU 请求和 CPU 限制，值都是 700 milliCPU.</p></li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">cat pod-qos-guaranteed.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">pod-qos-guaranteed</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx:latest</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">requests</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;500m&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;128Mi&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">limits</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;500m&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;128Mi&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">cat pod-qos-guaranteed.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">pod-qos-guaranteed</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx:latest</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">resources</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">requests</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;500m&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;128Mi&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">limits</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;500m&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;128Mi&quot;</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#查看</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@kube-master </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]# kubectl describe pod pod-qos-guaranteed</span></span>
<span class="line"><span style="color:#B392F0;">。。。</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Limits:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">cpu:</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">500</span><span style="color:#9ECBFF;">m</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">memory:</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">128</span><span style="color:#9ECBFF;">Mi</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Requests:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">cpu:</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">500</span><span style="color:#9ECBFF;">m</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">memory:</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">128</span><span style="color:#9ECBFF;">Mi</span></span>
<span class="line"><span style="color:#B392F0;">。。。</span></span>
<span class="line"><span style="color:#B392F0;">QoS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Class:</span><span style="color:#E1E4E8;">                   </span><span style="color:#9ECBFF;">Guaranteed</span></span>
<span class="line"><span style="color:#B392F0;">。。。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#查看</span></span>
<span class="line"><span style="color:#24292E;">[root@kube-master </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]# kubectl describe pod pod-qos-guaranteed</span></span>
<span class="line"><span style="color:#6F42C1;">。。。</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Limits:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">cpu:</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">500</span><span style="color:#032F62;">m</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">memory:</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">128</span><span style="color:#032F62;">Mi</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Requests:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">cpu:</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">500</span><span style="color:#032F62;">m</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">memory:</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">128</span><span style="color:#032F62;">Mi</span></span>
<span class="line"><span style="color:#6F42C1;">。。。</span></span>
<span class="line"><span style="color:#6F42C1;">QoS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Class:</span><span style="color:#24292E;">                   </span><span style="color:#032F62;">Guaranteed</span></span>
<span class="line"><span style="color:#6F42C1;">。。。</span></span></code></pre></div><h3 id="创建-burstable-的-pod" tabindex="-1">创建 Burstable 的 Pod <a class="header-anchor" href="#创建-burstable-的-pod" aria-label="Permalink to &quot;创建 Burstable 的 Pod&quot;">​</a></h3><p>如果满⾜下⾯条件，将会指定 Pod 的 QoS 类为 Burstable：</p><ul><li><p>Pod 不符合 Guaranteed QoS 类的标准</p></li><li><p>Pod 中⾄少⼀个容器指定了，内存或 CPU 的请求或限制</p><p>1.创建⼀个 Pod，容器设置了内存请求 100 MiB，以及内存限制 200MiB</p></li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">cat pod-qos-burstable.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">pod-qos-burstable</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx:latest</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">requests</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;128Mi&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">limits</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;128Mi&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">cat pod-qos-burstable.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">pod-qos-burstable</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx:latest</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">resources</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">requests</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;128Mi&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">limits</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;128Mi&quot;</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#查看</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@kube-master yaml]# kubectl describe pod pod-qos-burstable</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">。。。</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Limits:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">cpu:</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">500</span><span style="color:#9ECBFF;">m</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">memory:</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">128</span><span style="color:#9ECBFF;">Mi</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Requests:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">cpu:</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">500</span><span style="color:#9ECBFF;">m</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">memory:</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">128</span><span style="color:#9ECBFF;">Mi</span></span>
<span class="line"><span style="color:#B392F0;">。。。</span></span>
<span class="line"><span style="color:#B392F0;">QoS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Class:</span><span style="color:#E1E4E8;">                   </span><span style="color:#9ECBFF;">Burstable</span></span>
<span class="line"><span style="color:#B392F0;">。。。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#查看</span></span>
<span class="line"><span style="color:#24292E;">[root@kube-master yaml]# kubectl describe pod pod-qos-burstable</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">。。。</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Limits:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">cpu:</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">500</span><span style="color:#032F62;">m</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">memory:</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">128</span><span style="color:#032F62;">Mi</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Requests:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">cpu:</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">500</span><span style="color:#032F62;">m</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">memory:</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">128</span><span style="color:#032F62;">Mi</span></span>
<span class="line"><span style="color:#6F42C1;">。。。</span></span>
<span class="line"><span style="color:#6F42C1;">QoS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Class:</span><span style="color:#24292E;">                   </span><span style="color:#032F62;">Burstable</span></span>
<span class="line"><span style="color:#6F42C1;">。。。</span></span></code></pre></div><h3 id="创建-besteffort-的-pod" tabindex="-1">创建 BestEffort 的 Pod <a class="header-anchor" href="#创建-besteffort-的-pod" aria-label="Permalink to &quot;创建 BestEffort 的 Pod&quot;">​</a></h3><p>对于 QoS 类为 BestEffort 的 Pod，Pod 中的容器必须 <code>没有设置内存和 CPU 限制或请求</code></p><p>1.创建⼀个 Pod，容器没有设置内存和 CPU 限制或请求</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">root@kube-master yaml</span><span style="color:#E1E4E8;">]# </span><span style="color:#9ECBFF;">cat pod-qos-besteffort.yaml</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">pod-qos-besteffort</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx:latest</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#032F62;">root@kube-master yaml</span><span style="color:#24292E;">]# </span><span style="color:#032F62;">cat pod-qos-besteffort.yaml</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">pod-qos-besteffort</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx:latest</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#查看</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@kube-master yaml]# kubectl describe pod pod-qos-besteffort</span></span>
<span class="line"><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#B392F0;">QoS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Class:</span><span style="color:#E1E4E8;">                   </span><span style="color:#9ECBFF;">BestEffort</span></span>
<span class="line"><span style="color:#79B8FF;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#查看</span></span>
<span class="line"><span style="color:#24292E;">[root@kube-master yaml]# kubectl describe pod pod-qos-besteffort</span></span>
<span class="line"><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#6F42C1;">QoS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Class:</span><span style="color:#24292E;">                   </span><span style="color:#032F62;">BestEffort</span></span>
<span class="line"><span style="color:#005CC5;">...</span></span></code></pre></div><h3 id="创建多容器-pod" tabindex="-1">创建多容器 Pod <a class="header-anchor" href="#创建多容器-pod" aria-label="Permalink to &quot;创建多容器 Pod&quot;">​</a></h3><p>1.创建⼀个 Pod，⼀个容器指定了内存请求 200 MiB。 另外⼀个容器没有指定任何请求和限制。此 Pod 满⾜ Burstable QoS 类的标准。但它不满⾜ Guaranteed QoS 类标准，因为它的⼀个容器设有内存请求</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">pod-qos-mutil</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx:latest</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">limits</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;100Mi&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">redis</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">redis:latest</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">pod-qos-mutil</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx:latest</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">resources</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">limits</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;100Mi&#39;</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">redis</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">redis:latest</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#查看</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@kube-master yaml]# kubectl describe pod pod-qos-mutil</span></span>
<span class="line"><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Limits:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">memory:</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">100</span><span style="color:#9ECBFF;">Mi</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">Requests:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">memory:</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">100</span><span style="color:#9ECBFF;">Mi</span></span>
<span class="line"><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#B392F0;">QoS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Class:</span><span style="color:#E1E4E8;">                   </span><span style="color:#9ECBFF;">Burstable</span></span>
<span class="line"><span style="color:#79B8FF;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#查看</span></span>
<span class="line"><span style="color:#24292E;">[root@kube-master yaml]# kubectl describe pod pod-qos-mutil</span></span>
<span class="line"><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Limits:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">memory:</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">100</span><span style="color:#032F62;">Mi</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">Requests:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">memory:</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">100</span><span style="color:#032F62;">Mi</span></span>
<span class="line"><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#6F42C1;">QoS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Class:</span><span style="color:#24292E;">                   </span><span style="color:#032F62;">Burstable</span></span>
<span class="line"><span style="color:#005CC5;">...</span></span></code></pre></div><h2 id="_6-6-resourcequota-和-limitrange-实践" tabindex="-1">6.6 ResourceQuota 和 LimitRange 实践 <a class="header-anchor" href="#_6-6-resourcequota-和-limitrange-实践" aria-label="Permalink to &quot;6.6 ResourceQuota 和 LimitRange 实践&quot;">​</a></h2><p>根据集群用户数量来调整集群配置，以达到这个目的：能控制特定命名空间中的资源使用量，最终实现集群的公平使用和成本控制。</p><p>需要实现的功能如下：</p><ul><li>限制运行状态的 Pod 的计算资源用量。</li><li>限制持久卷的数量以控制对存储的访问。</li><li>限制负载均衡器的数量以控制成本。</li><li>防止滥用网络端口这类稀缺资源。</li><li>提供默认的计算资源 Requests 以便系统做出更优化的调度。</li></ul><h3 id="_1-创建命名空间" tabindex="-1"><strong>1. 创建命名空间</strong> <a class="header-anchor" href="#_1-创建命名空间" aria-label="Permalink to &quot;**1. 创建命名空间**&quot;">​</a></h3><p>创建名为 quota-example 的命名空间，namespace.yaml 文件内容如下：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Namespace</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">quota-example</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Namespace</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">quota-example</span></span></code></pre></div><ul><li>创建</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl create -f namespace.yaml</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#查看</span></span>
<span class="line"><span style="color:#e1e4e8;">kubectl get namespaces | grep -v &#39;kube&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl create -f namespace.yaml</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#查看</span></span>
<span class="line"><span style="color:#24292e;">kubectl get namespaces | grep -v &#39;kube&#39;</span></span></code></pre></div><h3 id="_2-设置限定对象数量的资源配额" tabindex="-1"><strong>2.设置限定对象数量的资源配额</strong> <a class="header-anchor" href="#_2-设置限定对象数量的资源配额" aria-label="Permalink to &quot;**2.设置限定对象数量的资源配额**&quot;">​</a></h3><p>通过设置限定对数量的资源配额，可以控制持久存储卷、负载均衡器、NodePort 这些资源的数量。 创建名为 object-counts 的 ResourceQuota，object-counts.yaml 文件内容如下：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ResourceQuota</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">object-counts</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">hard</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">persistentvolumeclaims</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">services.loadbalancers</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">services.nodeports</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;0&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ResourceQuota</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">object-counts</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">hard</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">persistentvolumeclaims</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">services.loadbalancers</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">services.nodeports</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;0&quot;</span></span></code></pre></div><ul><li>创建</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl create -f object-counts.yaml --namespace=quota-example</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl create -f object-counts.yaml --namespace=quota-example</span></span></code></pre></div><ul><li>查看</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl describe quota object-counts --namespace=quota-example</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Name:                   object-counts</span></span>
<span class="line"><span style="color:#e1e4e8;">Namespace:              quota-example</span></span>
<span class="line"><span style="color:#e1e4e8;">Resource                Used  Hard</span></span>
<span class="line"><span style="color:#e1e4e8;">--------                ----  ----</span></span>
<span class="line"><span style="color:#e1e4e8;">persistentvolumeclaims  0     2</span></span>
<span class="line"><span style="color:#e1e4e8;">services.loadbalancers  0     2</span></span>
<span class="line"><span style="color:#e1e4e8;">services.nodeports      0     0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl describe quota object-counts --namespace=quota-example</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Name:                   object-counts</span></span>
<span class="line"><span style="color:#24292e;">Namespace:              quota-example</span></span>
<span class="line"><span style="color:#24292e;">Resource                Used  Hard</span></span>
<span class="line"><span style="color:#24292e;">--------                ----  ----</span></span>
<span class="line"><span style="color:#24292e;">persistentvolumeclaims  0     2</span></span>
<span class="line"><span style="color:#24292e;">services.loadbalancers  0     2</span></span>
<span class="line"><span style="color:#24292e;">services.nodeports      0     0</span></span></code></pre></div><p>至此，配额系统会自动阻止那些使资源用量超过资源配额限定值的请求</p><h3 id="_3-设置限定计算资源的资源配额" tabindex="-1"><strong>3. 设置限定计算资源的资源配额</strong>* <a class="header-anchor" href="#_3-设置限定计算资源的资源配额" aria-label="Permalink to &quot;**3. 设置限定计算资源的资源配额***&quot;">​</a></h3><p>创建一项限定计算资源的资源配额，以限制该命名空间中计算资源的使用总量。</p><p>创建名为 compute-resources 的 ResourceQuota，compute-resources.yaml 文件内容如下：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ResourceQuota</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">compute-resources</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">hard</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">pods</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;4&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">requests.cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">requests.memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">1Gi</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">limits.cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;2&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">limits.memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">2Gi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ResourceQuota</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">compute-resources</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">hard</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">pods</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;4&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">requests.cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">requests.memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">1Gi</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">limits.cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;2&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">limits.memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">2Gi</span></span></code></pre></div><ul><li>创建</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl create -f compute-resources.yaml --namespace=quota-example</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl create -f compute-resources.yaml --namespace=quota-example</span></span></code></pre></div><ul><li>查看</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">describe</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">quota</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">compute-resources</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--namespace=quota-example</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">Name:</span><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">compute-resources</span></span>
<span class="line"><span style="color:#B392F0;">Namespace:</span><span style="color:#E1E4E8;">       </span><span style="color:#9ECBFF;">quota-example</span></span>
<span class="line"><span style="color:#B392F0;">Resource</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">Used</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">Hard</span></span>
<span class="line"><span style="color:#B392F0;">--------</span><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;">----</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">----</span></span>
<span class="line"><span style="color:#B392F0;">limits.cpu</span><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#B392F0;">limits.memory</span><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">Gi</span></span>
<span class="line"><span style="color:#B392F0;">pods</span><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">4</span></span>
<span class="line"><span style="color:#B392F0;">requests.cpu</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#B392F0;">requests.memory</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">1</span><span style="color:#9ECBFF;">Gi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">describe</span><span style="color:#24292E;"> </span><span style="color:#032F62;">quota</span><span style="color:#24292E;"> </span><span style="color:#032F62;">compute-resources</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--namespace=quota-example</span><span style="color:#24292E;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Name:</span><span style="color:#24292E;">            </span><span style="color:#032F62;">compute-resources</span></span>
<span class="line"><span style="color:#6F42C1;">Namespace:</span><span style="color:#24292E;">       </span><span style="color:#032F62;">quota-example</span></span>
<span class="line"><span style="color:#6F42C1;">Resource</span><span style="color:#24292E;">         </span><span style="color:#032F62;">Used</span><span style="color:#24292E;">  </span><span style="color:#032F62;">Hard</span></span>
<span class="line"><span style="color:#6F42C1;">--------</span><span style="color:#24292E;">         </span><span style="color:#005CC5;">----</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">----</span></span>
<span class="line"><span style="color:#6F42C1;">limits.cpu</span><span style="color:#24292E;">       </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#6F42C1;">limits.memory</span><span style="color:#24292E;">    </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">2</span><span style="color:#032F62;">Gi</span></span>
<span class="line"><span style="color:#6F42C1;">pods</span><span style="color:#24292E;">             </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">4</span></span>
<span class="line"><span style="color:#6F42C1;">requests.cpu</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#6F42C1;">requests.memory</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">1</span><span style="color:#032F62;">Gi</span></span></code></pre></div><p>配额系统会自动防止在该命名空间中同时拥有超过4个非“终止态”的 Pod。此外，由于该项资源配额限制了 CPU 和 内存的 Limits 和 Requests 总量，因此会强制要求该命名空间中所有的容器都显式定义 CPU 和内存的 Limits、Requests（可使用默认值，Requests 默认等于 Limits）。</p><h3 id="_4-配置默认的-requests-和-limits" tabindex="-1"><strong>4. 配置默认的 Requests 和 Limits</strong> <a class="header-anchor" href="#_4-配置默认的-requests-和-limits" aria-label="Permalink to &quot;**4. 配置默认的 Requests 和 Limits**&quot;">​</a></h3><p><strong>在命名空间已经配置了限定计算资源配额的情况下，如果尝试在该命名空间中创建一个不指定 Requests 和 Limits 的 Pod，那么 Pod 的创建可能会失败。</strong> 下面是一个失败的例子。</p><ul><li>创建</li></ul><p>创建一个 Nginx 的 Deployment：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl create deployment nginx --image=nginx --replicas=1 --namespace=quota-example</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl create deployment nginx --image=nginx --replicas=1 --namespace=quota-example</span></span></code></pre></div><ul><li>查看</li></ul><p>查看创建的 Pod，会发现 Pod 没有创建成功：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl get pods --namespace=quota-example </span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">No resources found in quota-example namespace.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl get pods --namespace=quota-example </span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">No resources found in quota-example namespace.</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl get deployments --namespace=quota-example</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">NAME    READY   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">nginx   0/1     0            0           2m38s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl get deployments --namespace=quota-example</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">NAME    READY   UP-TO-DATE   AVAILABLE   AGE</span></span>
<span class="line"><span style="color:#24292e;">nginx   0/1     0            0           2m38s</span></span></code></pre></div><p>再查看 Deployment 的详细信息：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl describe deployments nginx --namespace=quota-example</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">kubectl describe replicasets nginx-6799fc88d8  --namespace=quota-example</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl describe deployments nginx --namespace=quota-example</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">kubectl describe replicasets nginx-6799fc88d8  --namespace=quota-example</span></span></code></pre></div><p>提示创建失败，Master 拒绝这个 ReplicaSet 创建 Pod，因为在这个 Pod 中没有指定 CPU 和 内存的 Requests、Limits</p><p>为了避免这种失败，可以使用 LimitRange 为这个命名空间中所有 Pod 都提供一个资源配置的默认值</p><p>创建一个名为 limits 的 LimitRange，limits.yaml 文件内容如下：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">LimitRange</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">limits</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">limits</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">default</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">200m</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">512Mi</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">defaultRequest</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">100m</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">256Mi</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Container</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">LimitRange</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">limits</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">limits</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">default</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">200m</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">512Mi</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">defaultRequest</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">100m</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">256Mi</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Container</span></span></code></pre></div><ul><li>创建资源</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl create -f limits.yaml --namespace=quota-example</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl create -f limits.yaml --namespace=quota-example</span></span></code></pre></div><ul><li>查看</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl describe limitranges --namespace=quota-example</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl describe limitranges --namespace=quota-example</span></span></code></pre></div><p>在 LimitRange 创建成功后，若用户在该命名空间中创建了未指定资源限制的 Pod，系统就会自动为该 Pod 设置默认的资源限制。</p><p>例如，每个新建的未指定资源限制的 Pod 都等价于使用下面的资源限制：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl run nginx --image=nginx --requests=cpu=100m,memory=256Mi --limits=cpu=200m,memory=512Mi --namespace=quota-example</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl run nginx --image=nginx --requests=cpu=100m,memory=256Mi --limits=cpu=200m,memory=512Mi --namespace=quota-example</span></span></code></pre></div><h1 id="_7-downward-api" tabindex="-1">7. Downward API <a class="header-anchor" href="#_7-downward-api" aria-label="Permalink to &quot;7. Downward API&quot;">​</a></h1><p>文档，<a href="https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/downward-api/" target="_blank" rel="noreferrer">https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/downward-api/</a></p><p><strong>作用：让 Pod 里的容器能够直接获取到这个 Pod API 对象本身的信息</strong></p><p>DownwardAPI 可以让容器获取 Pod 的相关元数据信息，比如 Pod 名称，Pod 的 IP，Pod 的资源限制等，获取后通过 env、voLume 的方式将相关的环境信息注入到容器中，从而让容器通过环境变量这些信息，来设定容器的运行特性。</p><ul><li>例如：Nginx 进程根据节点的 CPU 核心数量自动设定要启动的 worker 进程数</li><li>例如：JVM 虚拟根据 Pod 的内存资源限制，来设定对应容器的堆内存大小</li><li>例如：获取 Pod 名称，以 Pod 名称注册到某个服务，当 Pod 结束后，调用 prestop 清理对应名称的注册信息</li></ul><h2 id="_7-1-可注入的元数据信息" tabindex="-1">7.1 可注⼊的元数据信息 <a class="header-anchor" href="#_7-1-可注入的元数据信息" aria-label="Permalink to &quot;7.1 可注⼊的元数据信息&quot;">​</a></h2><p>使⽤ <code>pod.spec.containers.env.valueFrom.fieldRef</code> 可以注⼊的字段有：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">metadata.name：Pod对象的名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">metadata.namespace：Pod对象隶属的名称空间</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">metadata.uid：Pod对象的UID</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">metadata.abels[</span><span style="color:#B392F0;">&#39;&lt;KEY&gt;&#39;</span><span style="color:#B392F0;">]：获取LabeL指定KEY对应的值</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">metadata.annotations[</span><span style="color:#B392F0;">&#39;&lt;KEY&gt;&#39;</span><span style="color:#B392F0;">]：获取Annotations对应KEY的值</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">status.podIP：Pod对象的IP地址</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">status.hostIP:节点IP</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">status.nodeName：节点名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">spec.serviceAccountName：Pod对象使用的ServiceAccount资源名称</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">metadata.name：Pod对象的名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">metadata.namespace：Pod对象隶属的名称空间</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">metadata.uid：Pod对象的UID</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">metadata.abels[</span><span style="color:#6F42C1;">&#39;&lt;KEY&gt;&#39;</span><span style="color:#6F42C1;">]：获取LabeL指定KEY对应的值</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">metadata.annotations[</span><span style="color:#6F42C1;">&#39;&lt;KEY&gt;&#39;</span><span style="color:#6F42C1;">]：获取Annotations对应KEY的值</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">status.podIP：Pod对象的IP地址</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">status.hostIP:节点IP</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">status.nodeName：节点名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">spec.serviceAccountName：Pod对象使用的ServiceAccount资源名称</span></span></code></pre></div><p>使⽤<code>pod.spec.containers.env.valueFrom.resourceFieldRef</code> 可以注⼊的字段有：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">requests.cpu</span></span>
<span class="line"><span style="color:#e1e4e8;">requests.memory</span></span>
<span class="line"><span style="color:#e1e4e8;">limits.cpu</span></span>
<span class="line"><span style="color:#e1e4e8;">limits.memory</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">requests.cpu</span></span>
<span class="line"><span style="color:#24292e;">requests.memory</span></span>
<span class="line"><span style="color:#24292e;">limits.cpu</span></span>
<span class="line"><span style="color:#24292e;">limits.memory</span></span></code></pre></div><h2 id="_7-2-环境变量方式注入元数据" tabindex="-1">7.2 环境变量⽅式注⼊元数据 <a class="header-anchor" href="#_7-2-环境变量方式注入元数据" aria-label="Permalink to &quot;7.2 环境变量⽅式注⼊元数据&quot;">​</a></h2><p>1.创建 Pod 容器，将 Pod 相关环境变量注⼊到容器中，⽐如（pod 名称、命名空间、标签、以及 cpu、内存的请求和限制）</p><p>[root@kube-master yaml]# kubectl apply pod-downward.yaml</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">pod-downward</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">pod-downward</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">pod-downward</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx:latest</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">command</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&#39;/bin/sh&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;-c&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;env&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">limits</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;200m&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;128Mi&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">requests</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;200m&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;64Mi&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">env</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">THIS_POD_NAME</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">valueFrom</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">fieldRef</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">fieldPath</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">metadata.name</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">THIS_POD_NAMESPACE</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">valueFrom</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">fieldRef</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">fieldPath</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">metadata.namespace</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">THIS_POD_APP_LABEL</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">valueFrom</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">fieldRef</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">fieldPath</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">metadata.labels[&#39;app&#39;]</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">THIS_CPU_LIMIT</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">valueFrom</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">resourceFieldRef</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">resource</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">limits.cpu</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">THIS_MEMORY_REQUEST</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">valueFrom</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">resourceFieldRef</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">resource</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">requests.memory</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">divisor</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">1Mi</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 默认显示为字节，通过divisor调整显示单位为兆</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">pod-downward</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">pod-downward</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">pod-downward</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx:latest</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">command</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;/bin/sh&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;-c&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;env&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">resources</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">limits</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;200m&#39;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;128Mi&#39;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">requests</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;200m&#39;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;64Mi&#39;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">env</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">THIS_POD_NAME</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">valueFrom</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">fieldRef</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">fieldPath</span><span style="color:#24292E;">: </span><span style="color:#032F62;">metadata.name</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">THIS_POD_NAMESPACE</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">valueFrom</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">fieldRef</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">fieldPath</span><span style="color:#24292E;">: </span><span style="color:#032F62;">metadata.namespace</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">THIS_POD_APP_LABEL</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">valueFrom</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">fieldRef</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">fieldPath</span><span style="color:#24292E;">: </span><span style="color:#032F62;">metadata.labels[&#39;app&#39;]</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">THIS_CPU_LIMIT</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">valueFrom</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">resourceFieldRef</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">resource</span><span style="color:#24292E;">: </span><span style="color:#032F62;">limits.cpu</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">THIS_MEMORY_REQUEST</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">valueFrom</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">resourceFieldRef</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">resource</span><span style="color:#24292E;">: </span><span style="color:#032F62;">requests.memory</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">divisor</span><span style="color:#24292E;">: </span><span style="color:#032F62;">1Mi</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 默认显示为字节，通过divisor调整显示单位为兆</span></span></code></pre></div><ul><li>查看</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@kube-master yaml]# kubectl logs pod-downward </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">grep</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">THIS</span></span>
<span class="line"><span style="color:#E1E4E8;">THIS_CPU_LIMIT</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">THIS_POD_APP_LABEL</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">pod-downward</span></span>
<span class="line"><span style="color:#E1E4E8;">THIS_POD_NAME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">pod-downward</span></span>
<span class="line"><span style="color:#E1E4E8;">THIS_MEMORY_REQUEST</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">64</span></span>
<span class="line"><span style="color:#E1E4E8;">THIS_POD_NAMESPACE</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">default</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@kube-master yaml]# kubectl logs pod-downward </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">grep</span><span style="color:#24292E;"> </span><span style="color:#032F62;">THIS</span></span>
<span class="line"><span style="color:#24292E;">THIS_CPU_LIMIT</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">THIS_POD_APP_LABEL</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">pod-downward</span></span>
<span class="line"><span style="color:#24292E;">THIS_POD_NAME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">pod-downward</span></span>
<span class="line"><span style="color:#24292E;">THIS_MEMORY_REQUEST</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">64</span></span>
<span class="line"><span style="color:#24292E;">THIS_POD_NAMESPACE</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">default</span></span></code></pre></div><h2 id="_7-3-存储卷方式注入元数据" tabindex="-1">7.3 存储卷⽅式注⼊元数据 <a class="header-anchor" href="#_7-3-存储卷方式注入元数据" aria-label="Permalink to &quot;7.3 存储卷⽅式注⼊元数据&quot;">​</a></h2><p>向容器注入元数据信息的另外一种方式是使用 downwardAPI 存储卷，它将配置的字段数据映射为文件并可通过容器中的挂载进行访问</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#查看帮助</span></span>
<span class="line"><span style="color:#e1e4e8;"> kubectl explain pod.spec.volumes.downwardAPI</span></span>
<span class="line"><span style="color:#e1e4e8;"> </span></span>
<span class="line"><span style="color:#e1e4e8;"> kubectl explain pod.spec.volumes.downwardAPI.items</span></span>
<span class="line"><span style="color:#e1e4e8;"> </span></span>
<span class="line"><span style="color:#e1e4e8;"> kubectl explain pod.spec.volumes.downwardAPI.items.resourceFieldRef</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#查看帮助</span></span>
<span class="line"><span style="color:#24292e;"> kubectl explain pod.spec.volumes.downwardAPI</span></span>
<span class="line"><span style="color:#24292e;"> </span></span>
<span class="line"><span style="color:#24292e;"> kubectl explain pod.spec.volumes.downwardAPI.items</span></span>
<span class="line"><span style="color:#24292e;"> </span></span>
<span class="line"><span style="color:#24292e;"> kubectl explain pod.spec.volumes.downwardAPI.items.resourceFieldRef</span></span></code></pre></div><p>在 downwardAPI 存储卷中使用 fieldRef 引用如下两个数据源：</p><ul><li>metadata.labels: Pod 对象的所有标签信息，每行一个，格式为 label-key=&quot;escaped-label-value&quot;</li><li>metadata.annotations: Pod 对象的所有注解信息，每行一个，格式为 annotation-key=&quot;escaped-annotation-value&quot;。</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">east-china</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">rack</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">rack-101</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">dapi-vol-pod</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">dapi-vol-pod</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">annotation1</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;test-value-1&quot;</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">volume-test-container</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">busybox</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">command</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;/bin/sh&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;-c&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;sleep 864000&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">requests</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;32Mi&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;125m&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">limits</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;64Mi&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;256m&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">volueMounts</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">podinfo</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">mountPath</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/etc/podinfo</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">readOnly</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">volumes</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">podinfo</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">downwardAPI</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">defaultMode</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">420</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">items</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">fieldRef</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">fieldPath</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">metadata.namespace</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">pod_namespace</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">fieldRef</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">fieldPath</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">metadata.labels</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">pod_labels</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">fieldRef</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">fieldPath</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">metadata.annotations</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">pod_annotations</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">resourceFieldRef</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">containerName</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">volume-test-container</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">resource</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">requests.memory</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">divisor</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1Mi&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;mem_request&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">: </span><span style="color:#032F62;">east-china</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">rack</span><span style="color:#24292E;">: </span><span style="color:#032F62;">rack-101</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">dapi-vol-pod</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">dapi-vol-pod</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">annotation1</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;test-value-1&quot;</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">volume-test-container</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">busybox</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">command</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;/bin/sh&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-c&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;sleep 864000&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">resources</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">requests</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;32Mi&quot;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;125m&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">limits</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;64Mi&quot;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;256m&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">volueMounts</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">podinfo</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">mountPath</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/etc/podinfo</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">readOnly</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">volumes</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">podinfo</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">downwardAPI</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">defaultMode</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">420</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">items</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">fieldRef</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">fieldPath</span><span style="color:#24292E;">: </span><span style="color:#032F62;">metadata.namespace</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">pod_namespace</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">fieldRef</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">fieldPath</span><span style="color:#24292E;">: </span><span style="color:#032F62;">metadata.labels</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">pod_labels</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">fieldRef</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">fieldPath</span><span style="color:#24292E;">: </span><span style="color:#032F62;">metadata.annotations</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">pod_annotations</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">resourceFieldRef</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">containerName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">volume-test-container</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">resource</span><span style="color:#24292E;">: </span><span style="color:#032F62;">requests.memory</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">divisor</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1Mi&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;mem_request&quot;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#查看</span></span>
<span class="line"><span style="color:#e1e4e8;">kubectl exec dapi-vol-pod -- cat /etc/podinfo/pod_labels</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#查看</span></span>
<span class="line"><span style="color:#24292e;">kubectl exec dapi-vol-pod -- cat /etc/podinfo/pod_labels</span></span></code></pre></div>`,275),e=[o];function t(c,r,y,E,i,d){return a(),n("div",null,e)}const m=s(p,[["render",t]]);export{F as __pageData,m as default};
