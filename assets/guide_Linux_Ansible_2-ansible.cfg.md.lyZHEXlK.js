import{_ as t,o as s,c as l,R as e}from"./chunks/framework.zUbWieqp.js";const b=JSON.parse('{"title":"1. ansible配置文件详解","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/Ansible/2-ansible.cfg.md","filePath":"guide/Linux/Ansible/2-ansible.cfg.md","lastUpdated":1720533756000}'),n={name:"guide/Linux/Ansible/2-ansible.cfg.md"},a=e(`<p>官方文档,<a href="https://docs.ansible.com/ansible/latest/cli/ansible.html" target="_blank" rel="noreferrer">https://docs.ansible.com/ansible/latest/cli/ansible.html</a></p><h1 id="_1-ansible配置文件详解" tabindex="-1">1. ansible配置文件详解 <a class="header-anchor" href="#_1-ansible配置文件详解" aria-label="Permalink to &quot;1. ansible配置文件详解&quot;">​</a></h1><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">vim ansible.cfg</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#关闭检查</span></span>
<span class="line"><span style="color:#9ECBFF;">host_key_checking = False</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">vim ansible.cfg</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#关闭检查</span></span>
<span class="line"><span style="color:#032F62;">host_key_checking = False</span></span></code></pre></div><h2 id="_1-1-etc-ansible有以下三个文件或者目录生成" tabindex="-1">1.1 /etc/ansible有以下三个文件或者目录生成 <a class="header-anchor" href="#_1-1-etc-ansible有以下三个文件或者目录生成" aria-label="Permalink to &quot;1.1 /etc/ansible有以下三个文件或者目录生成&quot;">​</a></h2><ul><li>/etc/ansible/hosts <ul><li>主机清单配置文件</li></ul></li><li>/etc/ansible/ansible.cfg <ul><li>Ansible主配置文件</li></ul></li><li>/etc/ansible/roles <ul><li>角色定义目录</li></ul></li></ul><h2 id="_1-2-ansible配置文件优先级" tabindex="-1">1.2 ansible配置文件优先级 <a class="header-anchor" href="#_1-2-ansible配置文件优先级" aria-label="Permalink to &quot;1.2 ansible配置文件优先级&quot;">​</a></h2><p>在Ansible中，它的配置文件是一个名为<code>ansible.cfg</code>的配置文件，ansible.cfg配置文件是以ini格式存储配置数据的。但是ansible.cfg配置文件可以存放在不同的目录，但只有一个可用，在运行Ansible命令时，Ansible将会按照预先设定的顺序查找配置文件，检查到哪个就用哪个。</p><p><strong>Ansible预先设定的优先级顺序如下：</strong></p><ul><li><code>ANSIBLE_CFG</code>：首先，Ansible命令会先检查环境变量，及这个环境变量将指向的配置文件；</li><li><code>./ansible.cfg</code>：其次，将会检查当前目录下的ansible.cfg配置文件；</li><li><code>~/.ansible.cfg</code>：再次，将会检查当前用户home目录下的<code>.ansible.cfg</code>配置文件；</li><li><code>/etc/ansible/ansible.cfg</code>：最后，将会检查在安装Ansible时自动生产的配置文件。</li></ul><p>几乎所有的配置项都可以通过Ansible的playbook或环境变量来重新赋值，所以当你怎么都不知道这个变量在哪里定义的时候，不妨去看看环境变量里看看。我建议使用<code>~/.ansible.cfg</code>作为配置文件使用，这样就可以实现每个用户都有自己独自的配置文件，不污染其它用户正常使用Ansible，同时也方便进行选项配置</p><h2 id="_1-3-主配置文件解析" tabindex="-1">1.3 主配置文件解析 <a class="header-anchor" href="#_1-3-主配置文件解析" aria-label="Permalink to &quot;1.3 主配置文件解析&quot;">​</a></h2><p><strong>配置文件分段说明</strong></p><p>ansible.cfg的配置默认分为八段：</p><ul><li>[defaults]：通用配置项</li><li>[inventory]：与主机清单相关的配置项</li><li>[privilege_escalation]：特权升级相关的配置项</li><li>[paramiko_connection]：使用paramiko连接的相关配置项，Paramiko在RHEL6以及更早的版本中默认使用的ssh连接方式</li><li>[ssh_connection]：使用OpenSSH连接的相关配置项，OpenSSH是Ansible在RHEL6之后默认使用的ssh连接方式</li><li>[persistent_connection]：持久连接的配置项</li><li>[accelerate]：加速模式配置项</li><li>[selinux]：selinux相关的配置项</li><li>[colors]：ansible命令输出的颜色相关的配置项</li><li>[diff]：定义是否在运行时打印diff（变更前与变更后的差异）</li></ul><p><strong>配置参数说明</strong></p><ul><li><p>defaults配置</p><table><thead><tr><th style="text-align:left;">配置项</th><th style="text-align:left;">说明</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;"><code>inventory</code></td><td style="text-align:left;">ansible inventory文件路径</td><td style="text-align:left;">/etc/ansible/hosts</td></tr><tr><td style="text-align:left;">library</td><td style="text-align:left;">ansible模块文件路径</td><td style="text-align:left;">/usr/share/my_modules/</td></tr><tr><td style="text-align:left;">remote_tmp</td><td style="text-align:left;">ansible远程主机脚本临时存放目录</td><td style="text-align:left;">~/.ansible/tmp</td></tr><tr><td style="text-align:left;">local_tmp</td><td style="text-align:left;">ansible管理节点脚本临时存放目录</td><td style="text-align:left;">~/.ansible/tmp</td></tr><tr><td style="text-align:left;"><code>forks</code></td><td style="text-align:left;">ansible执行并发数</td><td style="text-align:left;">5</td></tr><tr><td style="text-align:left;">poll_interval</td><td style="text-align:left;">ansible异步任务查询间隔</td><td style="text-align:left;">15</td></tr><tr><td style="text-align:left;">sudo_user</td><td style="text-align:left;">ansible sudo用户</td><td style="text-align:left;">root</td></tr><tr><td style="text-align:left;">ask_sudo_pass</td><td style="text-align:left;">运行ansible是否提示输入sudo密码</td><td style="text-align:left;">True</td></tr><tr><td style="text-align:left;">ask_pass</td><td style="text-align:left;">运行ansible是否提示输入密码</td><td style="text-align:left;">True</td></tr><tr><td style="text-align:left;">transport</td><td style="text-align:left;">ansible远程传输模式</td><td style="text-align:left;">smart</td></tr><tr><td style="text-align:left;">remote_port</td><td style="text-align:left;">远程主机SSH端口</td><td style="text-align:left;">22</td></tr><tr><td style="text-align:left;">module_lang</td><td style="text-align:left;">ansible模块运行默认语言环境</td><td style="text-align:left;">C</td></tr><tr><td style="text-align:left;">gathering</td><td style="text-align:left;">facts信息收集开关定义</td><td style="text-align:left;">smart</td></tr><tr><td style="text-align:left;"><code>roles_path</code></td><td style="text-align:left;">ansible role存放路径</td><td style="text-align:left;">/etc/ansible/roles</td></tr><tr><td style="text-align:left;">timeout</td><td style="text-align:left;">ansible SSH连接超时时间</td><td style="text-align:left;">10</td></tr><tr><td style="text-align:left;"><code>remote_user</code></td><td style="text-align:left;">ansible远程认证用户</td><td style="text-align:left;">root</td></tr><tr><td style="text-align:left;">log_path</td><td style="text-align:left;">ansible日志记录文件</td><td style="text-align:left;">/var/log/ansible.log</td></tr><tr><td style="text-align:left;">module_name</td><td style="text-align:left;">ansible默认执行模块</td><td style="text-align:left;">command</td></tr><tr><td style="text-align:left;">executable</td><td style="text-align:left;">ansible命令执行shell</td><td style="text-align:left;">/bin/sh</td></tr><tr><td style="text-align:left;">hash_behaviour</td><td style="text-align:left;">ansible主机变量重复处理方式</td><td style="text-align:left;">replace</td></tr><tr><td style="text-align:left;">private_role_vars</td><td style="text-align:left;">默认情况下，角色中的变量将在全局变量范围中可见。 为了防止这种情况，可以启用以下选项，只有tasks的任务和handlers得任务可以看到角色变量</td><td style="text-align:left;">yes</td></tr><tr><td style="text-align:left;">vault_password_file</td><td style="text-align:left;">指定vault密码文件路径</td><td style="text-align:left;">无</td></tr><tr><td style="text-align:left;">ansible_managed</td><td style="text-align:left;">定义的一个Jinja2变量，可以插入到Ansible配置模版系统生成的文件中</td><td style="text-align:left;">Ansible managed</td></tr><tr><td style="text-align:left;">display_skipped_hosts</td><td style="text-align:left;">开启显示跳过的主机</td><td style="text-align:left;">True</td></tr><tr><td style="text-align:left;">error_on_undefined_vars</td><td style="text-align:left;">开启错误，或者没有定义的变量</td><td style="text-align:left;">False</td></tr><tr><td style="text-align:left;">action_plugins</td><td style="text-align:left;">ansible action插件路径</td><td style="text-align:left;">无</td></tr><tr><td style="text-align:left;">cache_plugins</td><td style="text-align:left;">ansible cache插件路径</td><td style="text-align:left;">无</td></tr><tr><td style="text-align:left;">callback_plugins</td><td style="text-align:left;">ansible callback插件路径</td><td style="text-align:left;">无</td></tr><tr><td style="text-align:left;">connection_plugins</td><td style="text-align:left;">ansible connection插件路径</td><td style="text-align:left;">无</td></tr><tr><td style="text-align:left;">lookup_plugins</td><td style="text-align:left;">ansible lookup插件路径</td><td style="text-align:left;">无</td></tr><tr><td style="text-align:left;">inventory_plugins</td><td style="text-align:left;">ansible inventory插件路径</td><td style="text-align:left;">无</td></tr><tr><td style="text-align:left;">vars_plugins</td><td style="text-align:left;">ansible vars插件路径</td><td style="text-align:left;">无</td></tr><tr><td style="text-align:left;">filter_plugins</td><td style="text-align:left;">ansible filter插件路径</td><td style="text-align:left;">无</td></tr><tr><td style="text-align:left;">terminal_plugins</td><td style="text-align:left;">ansible terminal插件路径</td><td style="text-align:left;">无</td></tr><tr><td style="text-align:left;">strategy_plugins</td><td style="text-align:left;">ansible strategy插件路径</td><td style="text-align:left;">无</td></tr><tr><td style="text-align:left;">fact_caching</td><td style="text-align:left;">定义ansible facts缓存方式</td><td style="text-align:left;">memory</td></tr><tr><td style="text-align:left;">fact_caching_connection</td><td style="text-align:left;">定义ansible facts缓存路径</td><td style="text-align:left;">无</td></tr></tbody></table></li><li><p>privilege_escalation配置</p><table><thead><tr><th style="text-align:left;">配置项</th><th style="text-align:left;">说明</th><th style="text-align:left;">默认值</th></tr></thead><tbody><tr><td style="text-align:left;">become</td><td style="text-align:left;">是否开启become模式</td><td style="text-align:left;">True</td></tr><tr><td style="text-align:left;">become_method</td><td style="text-align:left;">定义become方式</td><td style="text-align:left;">sudo</td></tr><tr><td style="text-align:left;">become_user</td><td style="text-align:left;">定义become方式</td><td style="text-align:left;">root</td></tr><tr><td style="text-align:left;">become_ask_pass</td><td style="text-align:left;">是否定义become提示密码</td><td style="text-align:left;">False</td></tr></tbody></table></li></ul><h1 id="_2-主机清单-inventory" tabindex="-1">2. 主机清单(Inventory) <a class="header-anchor" href="#_2-主机清单-inventory" aria-label="Permalink to &quot;2. 主机清单(Inventory)&quot;">​</a></h1><p>在Ansible中描述主机的默认方法是将它们列在一个文本文件中，这个文本文件叫作inventory文件。Ansible Inventory 是包含静态 Inventory 和动态 Inventory 两部分的，静态 Inventory 指的是在文件中指定的主机和组，动态 Inventory 指通过外部脚本获取主机列表，并按照 ansible 所要求的格式返回给 ansilbe 命令的。这部分一般会结合 CMDB 资管系统、云计算平台等获取主机信息。此博文主要介绍静态Inventory的配置定义方法。默认的文件路径为 /etc/ansible/hosts。除默认文件外,你还可以同时使用多个 inventory 文件。如果需要使用非默认的Inventory文件，<code>在执行Ansible命令时使用-i参数指定Inventory文件</code>。</p><h2 id="_2-1-定义主机和组" tabindex="-1">2.1 定义主机和组 <a class="header-anchor" href="#_2-1-定义主机和组" aria-label="Permalink to &quot;2.1 定义主机和组&quot;">​</a></h2><p>Inventory配置文件遵循的是INI文件风格，中括号表示组名，其支持将同一个主机加入到不同的组中，此外若主机没有使用默认的SSH的22端口，还可以在主机名字或者IP后面加上冒号来指定，<code>#号为注释行</code></p><p>案例</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 直接跟主机IP及其他端口</span></span>
<span class="line"><span style="color:#B392F0;">192.168.111.120</span></span>
<span class="line"><span style="color:#B392F0;">192.168.111.120:2333</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 使用主机hostname及其他端口</span></span>
<span class="line"><span style="color:#B392F0;">ansible-node1</span></span>
<span class="line"><span style="color:#B392F0;">ansible-node1:2333</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 主机分组</span></span>
<span class="line"><span style="color:#E1E4E8;">[webserver]</span></span>
<span class="line"><span style="color:#B392F0;">192.168.111.120</span></span>
<span class="line"><span style="color:#B392F0;">ansible-node1:2333</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 连续主机</span></span>
<span class="line"><span style="color:#E1E4E8;">[dbserver]</span></span>
<span class="line"><span style="color:#B392F0;">192.168.111.[100:200]</span><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 表示192.168.111.100--192.168.111.200之间的所有主机</span></span>
<span class="line"><span style="color:#B392F0;">ansible-node[10:20]:2333</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 表示ansible-node10:2333--ansible-node20:2333之间的所有主机</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 直接跟主机IP及其他端口</span></span>
<span class="line"><span style="color:#6F42C1;">192.168.111.120</span></span>
<span class="line"><span style="color:#6F42C1;">192.168.111.120:2333</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 使用主机hostname及其他端口</span></span>
<span class="line"><span style="color:#6F42C1;">ansible-node1</span></span>
<span class="line"><span style="color:#6F42C1;">ansible-node1:2333</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 主机分组</span></span>
<span class="line"><span style="color:#24292E;">[webserver]</span></span>
<span class="line"><span style="color:#6F42C1;">192.168.111.120</span></span>
<span class="line"><span style="color:#6F42C1;">ansible-node1:2333</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 连续主机</span></span>
<span class="line"><span style="color:#24292E;">[dbserver]</span></span>
<span class="line"><span style="color:#6F42C1;">192.168.111.[100:200]</span><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 表示192.168.111.100--192.168.111.200之间的所有主机</span></span>
<span class="line"><span style="color:#6F42C1;">ansible-node[10:20]:2333</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 表示ansible-node10:2333--ansible-node20:2333之间的所有主机</span></span></code></pre></div><h2 id="_2-2-定义主机变量" tabindex="-1">2.2 定义主机变量 <a class="header-anchor" href="#_2-2-定义主机变量" aria-label="Permalink to &quot;2.2 定义主机变量&quot;">​</a></h2><p>在工作中，通常会遇到非标准化的需求配置，考虑安全的问题，通常会把企业内部的80端口修改为其他的端口，这个就可以在Inventory中定义,然后在后续的playbook使用</p><p>示例(编辑/etc/ansible/hosts文件):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[dbserver]</span></span>
<span class="line"><span style="color:#6A737D;"># 自定义http_port的端口为80，配置maxRequestsPerChild(最大请求数)为801</span></span>
<span class="line"><span style="color:#B392F0;">192.168.111.120</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http_port=</span><span style="color:#79B8FF;">808</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">maxRequestsPerChild=</span><span style="color:#79B8FF;">801</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 自定义http_port的端口为303，配置maxRequestsPerChild(最大请求数)为909</span></span>
<span class="line"><span style="color:#B392F0;">ansible-node1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http_port=</span><span style="color:#79B8FF;">303</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">maxRequestsPerChild=</span><span style="color:#79B8FF;">909</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[dbserver]</span></span>
<span class="line"><span style="color:#6A737D;"># 自定义http_port的端口为80，配置maxRequestsPerChild(最大请求数)为801</span></span>
<span class="line"><span style="color:#6F42C1;">192.168.111.120</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http_port=</span><span style="color:#005CC5;">808</span><span style="color:#24292E;"> </span><span style="color:#032F62;">maxRequestsPerChild=</span><span style="color:#005CC5;">801</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 自定义http_port的端口为303，配置maxRequestsPerChild(最大请求数)为909</span></span>
<span class="line"><span style="color:#6F42C1;">ansible-node1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http_port=</span><span style="color:#005CC5;">303</span><span style="color:#24292E;"> </span><span style="color:#032F62;">maxRequestsPerChild=</span><span style="color:#005CC5;">909</span></span></code></pre></div><h2 id="_2-3-定义组变量" tabindex="-1">2.3 定义组变量 <a class="header-anchor" href="#_2-3-定义组变量" aria-label="Permalink to &quot;2.3 定义组变量&quot;">​</a></h2><p>Ansible支持定义组的变量，主要是针对大量的机器的变量定义需求，赋予指定组内所有主机在playbook中可用的变量，等同于逐一给该组下的所有主机赋予同一个变量</p><p>示例(编辑/etc/ansible/hosts文件):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[groupserver]</span></span>
<span class="line"><span style="color:#B392F0;">192.168.111.120</span></span>
<span class="line"><span style="color:#B392F0;">ansible-node1</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">[groupserver:vars]</span></span>
<span class="line"><span style="color:#6A737D;"># 定义groupserver组中所有主机ntp_server的值为ntp1.aliyun.com</span></span>
<span class="line"><span style="color:#E1E4E8;">ntp_server</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">ntp1.aliyun.com</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 定义groupserver组中所有主机nfs_server的值为nfs.aliyun.com</span></span>
<span class="line"><span style="color:#E1E4E8;">nfs_server</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">nfs.aliyun.com</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[groupserver]</span></span>
<span class="line"><span style="color:#6F42C1;">192.168.111.120</span></span>
<span class="line"><span style="color:#6F42C1;">ansible-node1</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">[groupserver:vars]</span></span>
<span class="line"><span style="color:#6A737D;"># 定义groupserver组中所有主机ntp_server的值为ntp1.aliyun.com</span></span>
<span class="line"><span style="color:#24292E;">ntp_server</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">ntp1.aliyun.com</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 定义groupserver组中所有主机nfs_server的值为nfs.aliyun.com</span></span>
<span class="line"><span style="color:#24292E;">nfs_server</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">nfs.aliyun.com</span></span></code></pre></div><h2 id="_2-4-定义组嵌套和组变量" tabindex="-1">2.4 定义组嵌套和组变量 <a class="header-anchor" href="#_2-4-定义组嵌套和组变量" aria-label="Permalink to &quot;2.4 定义组嵌套和组变量&quot;">​</a></h2><p>Inventory中，组还可以包含其他的组(嵌套)，并且也可以向组中的主机指定变量，不过这些变量只能在playbook中使用，在ansible中不支持，组与组之间可以相互调用，并且可以向组中的主机指定变量</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[groupserver]</span></span>
<span class="line"><span style="color:#B392F0;">192.168.111.120</span></span>
<span class="line"><span style="color:#B392F0;">ansible-node1</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">[groupserver:vars]</span></span>
<span class="line"><span style="color:#6A737D;"># 定义groupserver组中所有主机ntp_server的值为ntp1.aliyun.com</span></span>
<span class="line"><span style="color:#E1E4E8;">ntp_server</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">ntp1.aliyun.com</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 定义groupserver组中所有主机nfs_server的值为nfs.aliyun.com</span></span>
<span class="line"><span style="color:#E1E4E8;">nfs_server</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">nfs.aliyun.com</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[groupserver]</span></span>
<span class="line"><span style="color:#6F42C1;">192.168.111.120</span></span>
<span class="line"><span style="color:#6F42C1;">ansible-node1</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">[groupserver:vars]</span></span>
<span class="line"><span style="color:#6A737D;"># 定义groupserver组中所有主机ntp_server的值为ntp1.aliyun.com</span></span>
<span class="line"><span style="color:#24292E;">ntp_server</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">ntp1.aliyun.com</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 定义groupserver组中所有主机nfs_server的值为nfs.aliyun.com</span></span>
<span class="line"><span style="color:#24292E;">nfs_server</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">nfs.aliyun.com</span></span></code></pre></div><h2 id="_2-5-inventory参数说明" tabindex="-1">2.5 Inventory参数说明 <a class="header-anchor" href="#_2-5-inventory参数说明" aria-label="Permalink to &quot;2.5 Inventory参数说明&quot;">​</a></h2><p>通过设置下面的参数,可以控制 ansible 与远程主机的交互方式</p><table><thead><tr><th style="text-align:left;"><strong>参数</strong></th><th style="text-align:left;">默认值</th><th style="text-align:left;">参数说明</th></tr></thead><tbody><tr><td style="text-align:left;">ansible_ssh_host</td><td style="text-align:left;">主机名</td><td style="text-align:left;">ssh目标主机名或者IP</td></tr><tr><td style="text-align:left;">ansible_ssh_port</td><td style="text-align:left;">22</td><td style="text-align:left;">ssh目标端口</td></tr><tr><td style="text-align:left;">ansible_ssh_user</td><td style="text-align:left;">root</td><td style="text-align:left;">ssh登录使用的用户名</td></tr><tr><td style="text-align:left;">ansible_ssh_pass</td><td style="text-align:left;">none</td><td style="text-align:left;">ssh认证使用的密码(这种方式并不安全,我们强烈建议使用 --ask-pass 或 SSH 密钥)</td></tr><tr><td style="text-align:left;">ansible_sudo_pass sudo</td><td style="text-align:left;">none</td><td style="text-align:left;">sudo密码(这种方式并不安全,我们强烈建议使用 --ask-sudo-pass)</td></tr><tr><td style="text-align:left;">ansible_sudo_exe</td><td style="text-align:left;">/usr/bin</td><td style="text-align:left;">sudo 命令路径(适用于1.8及以上版本)</td></tr><tr><td style="text-align:left;">ansible_connection</td><td style="text-align:left;">smart</td><td style="text-align:left;">与主机的连接类型.比如:local, ssh 或者 paramiko. Ansible 1.2 以前默认使用 paramiko.1.2 以后默认使用 ‘smart’,‘smart’ 方式会根据是否支持 ControlPersist, 来判断’ssh’ 方式是否可行.</td></tr><tr><td style="text-align:left;">ansible_ssh_private_key_file</td><td style="text-align:left;">none</td><td style="text-align:left;">ssh 使用的私钥文件.适用于有多个密钥,而你不想使用 SSH 代理的情况.</td></tr><tr><td style="text-align:left;">ansible_shell_type</td><td style="text-align:left;">sh</td><td style="text-align:left;">目标系统的shell类型.默认情况下,命令的执行使用 ‘sh’ 语法,可设置为 ‘csh’ 或 ‘fish’.</td></tr><tr><td style="text-align:left;">ansible_python_interpreter</td><td style="text-align:left;">/usr/bin</td><td style="text-align:left;">目标主机的 python 路径。适用于的情况: 系统中有多个 Python, 或者命令路径不是&quot;/usr/bin/python&quot;，比如 *BSD， 或者 /usr/bin/python 不是 2.X 版本的 Python。我们不使用 “/usr/bin/env” 机制,因为这要求远程用户的路径设置正确，且要求 “python” 可执行程序名不可为 python以外的名字(实际有可能名为python26)。</td></tr></tbody></table>`,36),p=[a];function i(o,r,d,c,y,g){return s(),l("div",null,p)}const h=t(n,[["render",i]]);export{b as __pageData,h as default};
