import{_ as s,o as a,c as n,R as l}from"./chunks/framework.zUbWieqp.js";const g=JSON.parse('{"title":"1. PostgreSQL 修改配置生效方法","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Database/pgSql/base/3-conf.md","filePath":"guide/Database/pgSql/base/3-conf.md","lastUpdated":1734500547000}'),p={name:"guide/Database/pgSql/base/3-conf.md"},o=l(`<p>文档，<a href="https://www.postgresql.org/docs/12/runtime-config-resource.html" target="_blank" rel="noreferrer">https://www.postgresql.org/docs/12/runtime-config-resource.html</a></p><p>生成配置文件：<a href="https://pgtune.leopard.in.ua/" target="_blank" rel="noreferrer">https://pgtune.leopard.in.ua/</a></p><p>官当：<a href="https://www.postgresql.org/docs/current/runtime-config.html" target="_blank" rel="noreferrer">https://www.postgresql.org/docs/current/runtime-config.html</a></p><h1 id="_1-postgresql-修改配置生效方法" tabindex="-1">1. PostgreSQL 修改配置生效方法 <a class="header-anchor" href="#_1-postgresql-修改配置生效方法" aria-label="Permalink to &quot;1. PostgreSQL 修改配置生效方法&quot;">​</a></h1><h2 id="_1-查看参数的默认单位" tabindex="-1">1.查看参数的默认单位 <a class="header-anchor" href="#_1-查看参数的默认单位" aria-label="Permalink to &quot;1.查看参数的默认单位&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">select name, unit from pg_settings;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">select name, unit from pg_settings;</span></span></code></pre></div><h2 id="_2-查看参数允许的枚举" tabindex="-1">2.查看参数允许的枚举 <a class="header-anchor" href="#_2-查看参数允许的枚举" aria-label="Permalink to &quot;2.查看参数允许的枚举&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">select name, enumvals from pg_settings;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">select name, enumvals from pg_settings;</span></span></code></pre></div><h3 id="设置参数" tabindex="-1">设置参数 <a class="header-anchor" href="#设置参数" aria-label="Permalink to &quot;设置参数&quot;">​</a></h3><ul><li>方式一：在 postgresql.conf设置</li><li>方式二：在启动时传递参数：postgres -c log_connections=yes -c log_destination=’syslog’</li></ul><h3 id="_2-1-在-psql-里查看及设置参数" tabindex="-1">2.1 在 psql 里查看及设置参数 <a class="header-anchor" href="#_2-1-在-psql-里查看及设置参数" aria-label="Permalink to &quot;2.1 在 psql 里查看及设置参数&quot;">​</a></h3><ul><li>查看：show postgresql.conf中的参数名;</li><li>设置：set postgresql.conf中的参数名 TO 参数值 | set postgresql.conf中的参数名=参数值</li></ul><p>对于配置服务器，，太多时候我们在Linux中做的操作是，配置 *.conf文件，然后重启服务。而很多服务都具有reload功能，而但是具体到某个配置，有时候直接说出需不需要重启服务而使得配置生效，这并不是一件容易的事情。</p><p>postgresql却讲这部分能用在数据表中显式的告诉了我们：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">postgres# select name, context from pg_settings;</span></span>
<span class="line"><span style="color:#e1e4e8;">postgres=# select distinct(context) from pg_settings;</span></span>
<span class="line"><span style="color:#e1e4e8;">      context</span></span>
<span class="line"><span style="color:#e1e4e8;">-------------------</span></span>
<span class="line"><span style="color:#e1e4e8;"> backend</span></span>
<span class="line"><span style="color:#e1e4e8;"> user</span></span>
<span class="line"><span style="color:#e1e4e8;"> internal</span></span>
<span class="line"><span style="color:#e1e4e8;"> postmaster</span></span>
<span class="line"><span style="color:#e1e4e8;"> superuser</span></span>
<span class="line"><span style="color:#e1e4e8;"> sighup</span></span>
<span class="line"><span style="color:#e1e4e8;"> superuser-backend</span></span>
<span class="line"><span style="color:#e1e4e8;">(7 行记录)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">postgres# select name, context from pg_settings;</span></span>
<span class="line"><span style="color:#24292e;">postgres=# select distinct(context) from pg_settings;</span></span>
<span class="line"><span style="color:#24292e;">      context</span></span>
<span class="line"><span style="color:#24292e;">-------------------</span></span>
<span class="line"><span style="color:#24292e;"> backend</span></span>
<span class="line"><span style="color:#24292e;"> user</span></span>
<span class="line"><span style="color:#24292e;"> internal</span></span>
<span class="line"><span style="color:#24292e;"> postmaster</span></span>
<span class="line"><span style="color:#24292e;"> superuser</span></span>
<span class="line"><span style="color:#24292e;"> sighup</span></span>
<span class="line"><span style="color:#24292e;"> superuser-backend</span></span>
<span class="line"><span style="color:#24292e;">(7 行记录)</span></span></code></pre></div><p><strong>internal</strong>: 编译期间的设置，只有重新编译才能生效。</p><p><strong>postmaster</strong>: 只有服务重启才能生效。</p><p><strong>sighup</strong>: 给服务器发送HUP信号会是服务器重新加载postgresql.conf配置，可以立即生效。</p><p><strong>backend</strong>: 与sighup类似，但是不影响正在运行的会话，只在新会话中生效</p><p><strong>superuser</strong>: 使用superuser(如postgres)才能更改，不用重新加载所有配置即可生效。</p><p><strong>user</strong>: 单个会话用户可以在任意时间做修改，只会影响该会话</p><h3 id="_2-2-重新加载数据库配置的方法有三种" tabindex="-1">2.2 重新加载数据库配置的方法有三种 <a class="header-anchor" href="#_2-2-重新加载数据库配置的方法有三种" aria-label="Permalink to &quot;2.2 重新加载数据库配置的方法有三种&quot;">​</a></h3><h4 id="用超级用户运行" tabindex="-1">用超级用户运行 <a class="header-anchor" href="#用超级用户运行" aria-label="Permalink to &quot;用超级用户运行&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">postgres=# SELECT pg_reload_conf();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">postgres=# SELECT pg_reload_conf();</span></span></code></pre></div><h4 id="用unix的kill手动发起hup信号" tabindex="-1">用UNIX的kill手动发起HUP信号 <a class="header-anchor" href="#用unix的kill手动发起hup信号" aria-label="Permalink to &quot;用UNIX的kill手动发起HUP信号&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$kill -HUP PID</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$kill -HUP PID</span></span></code></pre></div><h4 id="使用pg-ctl命令触发sighup信号" tabindex="-1">使用pg_ctl命令触发SIGHUP信号 <a class="header-anchor" href="#使用pg-ctl命令触发sighup信号" aria-label="Permalink to &quot;使用pg_ctl命令触发SIGHUP信号&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$pg_ctl reload</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$pg_ctl reload</span></span></code></pre></div><h2 id="_3-参数生效的方式" tabindex="-1">3.参数生效的方式 <a class="header-anchor" href="#_3-参数生效的方式" aria-label="Permalink to &quot;3.参数生效的方式&quot;">​</a></h2><h3 id="set" tabindex="-1">set <a class="header-anchor" href="#set" aria-label="Permalink to &quot;set&quot;">​</a></h3><p>可以在会话级别设置这种</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">postgres</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># </span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;"> work_mem</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">262144</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">SET</span></span>
<span class="line"><span style="color:#E1E4E8;">postgres</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># show work_mem;</span></span>
<span class="line"><span style="color:#E1E4E8;"> work_mem</span></span>
<span class="line"><span style="color:#6A737D;">----------</span></span>
<span class="line"><span style="color:#E1E4E8;"> 256MB</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> 行记录)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">#重新登录后</span></span>
<span class="line"><span style="color:#E1E4E8;">$ psql </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">U postgres                             </span></span>
<span class="line"><span style="color:#E1E4E8;">输入 </span><span style="color:#9ECBFF;">&quot;help&quot;</span><span style="color:#E1E4E8;"> 来获取帮助信息.                              </span></span>
<span class="line"><span style="color:#E1E4E8;">                                                </span></span>
<span class="line"><span style="color:#E1E4E8;">postgres</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># show work_mem;                       </span></span>
<span class="line"><span style="color:#E1E4E8;"> work_mem                                       </span></span>
<span class="line"><span style="color:#6A737D;">----------                                      </span></span>
<span class="line"><span style="color:#E1E4E8;"> 4MB                                            </span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> 行记录)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">postgres</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># </span><span style="color:#D73A49;">set</span><span style="color:#24292E;"> work_mem</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">262144</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">SET</span></span>
<span class="line"><span style="color:#24292E;">postgres</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># show work_mem;</span></span>
<span class="line"><span style="color:#24292E;"> work_mem</span></span>
<span class="line"><span style="color:#6A737D;">----------</span></span>
<span class="line"><span style="color:#24292E;"> 256MB</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> 行记录)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">#重新登录后</span></span>
<span class="line"><span style="color:#24292E;">$ psql </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">U postgres                             </span></span>
<span class="line"><span style="color:#24292E;">输入 </span><span style="color:#032F62;">&quot;help&quot;</span><span style="color:#24292E;"> 来获取帮助信息.                              </span></span>
<span class="line"><span style="color:#24292E;">                                                </span></span>
<span class="line"><span style="color:#24292E;">postgres</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># show work_mem;                       </span></span>
<span class="line"><span style="color:#24292E;"> work_mem                                       </span></span>
<span class="line"><span style="color:#6A737D;">----------                                      </span></span>
<span class="line"><span style="color:#24292E;"> 4MB                                            </span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> 行记录)</span></span></code></pre></div><h3 id="pg-reload-conf函数" tabindex="-1">pg_reload_conf函数 <a class="header-anchor" href="#pg-reload-conf函数" aria-label="Permalink to &quot;pg_reload_conf函数&quot;">​</a></h3><p>更改完sighup类的参数，可以直接使用下面语句来重载</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">postgres=# select pg_reload_conf();</span></span>
<span class="line"><span style="color:#e1e4e8;"> pg_reload_conf</span></span>
<span class="line"><span style="color:#e1e4e8;">----------------</span></span>
<span class="line"><span style="color:#e1e4e8;"> t</span></span>
<span class="line"><span style="color:#e1e4e8;">(1 行记录)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">postgres=# select pg_reload_conf();</span></span>
<span class="line"><span style="color:#24292e;"> pg_reload_conf</span></span>
<span class="line"><span style="color:#24292e;">----------------</span></span>
<span class="line"><span style="color:#24292e;"> t</span></span>
<span class="line"><span style="color:#24292e;">(1 行记录)</span></span></code></pre></div><h3 id="pg-ctl" tabindex="-1">pg_ctl <a class="header-anchor" href="#pg-ctl" aria-label="Permalink to &quot;pg_ctl&quot;">​</a></h3><p>使用pg_reload,这个操作会重载配置文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[postgres@localhost ~]$ pg_ctl reload </span></span>
<span class="line"><span style="color:#e1e4e8;">server signaled</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">重启</span></span>
<span class="line"><span style="color:#e1e4e8;">pg_ctl restart来重启数据库，这些会直接更改能改的一切参数，但是注意的是一些会话级别的参数可能因此会丢失</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[postgres@localhost ~]$ pg_ctl reload </span></span>
<span class="line"><span style="color:#24292e;">server signaled</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">重启</span></span>
<span class="line"><span style="color:#24292e;">pg_ctl restart来重启数据库，这些会直接更改能改的一切参数，但是注意的是一些会话级别的参数可能因此会丢失</span></span></code></pre></div><h3 id="postgresql修改配置生效方法" tabindex="-1">postgresql修改配置生效方法 <a class="header-anchor" href="#postgresql修改配置生效方法" aria-label="Permalink to &quot;postgresql修改配置生效方法&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">postgres# </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">, context </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pg_settings;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">postgres# </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">, context </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pg_settings;</span></span></code></pre></div><table><thead><tr><th>name</th><th>context</th></tr></thead><tbody><tr><td>archive_command</td><td>sihup</td></tr><tr><td>archive_mode</td><td>postmaster</td></tr><tr><td>block_size</td><td>internal</td></tr><tr><td>log_connections</td><td>backend</td></tr><tr><td>log_min_duration_statement</td><td>superuser</td></tr><tr><td>search_patch</td><td>user</td></tr></tbody></table><p>internal: 编译期间的设置，只有重新编译才能生效。</p><p>postmaster: 只有服务重启才能生效。</p><p>sighup: 给服务器发送HUP信号会是服务器重新加载postgresql.conf配置，可以立即生效。</p><p>backend: 与sighup类似，但是不影响正在运行的会话，只在新会话中生效</p><p>superuser: 使用superuser(如postgres)才能更改，不用重新加载所有配置即可生效。</p><p>user: 单个会话用户可以在任意时间做修改，只会影响该会话</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">postgres@postgres</span><span style="color:#F97583;">=&gt;select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">,context </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pg_settings </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">like</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;wal_buffers&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">     |  context   </span></span>
<span class="line"><span style="color:#6A737D;">-------------+------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> wal_buffers | postmaster</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">row</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--- 如果context的值是postmaster，就需要重启数据库</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">postgres@postgres</span><span style="color:#D73A49;">=&gt;select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">,context </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pg_settings </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">like</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;wal_buffers&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">     |  context   </span></span>
<span class="line"><span style="color:#6A737D;">-------------+------------</span></span>
<span class="line"><span style="color:#24292E;"> wal_buffers | postmaster</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">row</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--- 如果context的值是postmaster，就需要重启数据库</span></span></code></pre></div><p>重新加载数据库配置的方法有三种：</p><ol><li>用超级用户运行</li></ol><p>postgres=# SELECT pg_reload_conf();</p><ol start="2"><li>用UNIX的kill手动发起HUP信号</li></ol><p>$kill -HUP PID</p><p>3.使用pg_ctl命令触发SIGHUP信号</p><p>$pg_ctl reload</p><p>4.查看配置文件位置</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">postgres</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">,setting </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pg_settings </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> category</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;File Locations&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">        |                 setting                  </span></span>
<span class="line"><span style="color:#6A737D;">-------------------+------------------------------------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> config_file       | </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">var</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">postgresql</span><span style="color:#F97583;">/data/</span><span style="color:#79B8FF;">postgresql</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">conf</span></span>
<span class="line"><span style="color:#E1E4E8;"> data_directory    | </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">var</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">postgresql</span><span style="color:#F97583;">/data</span></span>
<span class="line"><span style="color:#E1E4E8;"> external_pid_file | </span></span>
<span class="line"><span style="color:#E1E4E8;"> hba_file          | </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">var</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">postgresql</span><span style="color:#F97583;">/data/</span><span style="color:#79B8FF;">pg_hba</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">conf</span></span>
<span class="line"><span style="color:#E1E4E8;"> ident_file        | </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">var</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">postgresql</span><span style="color:#F97583;">/data/</span><span style="color:#79B8FF;">pg_ident</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">conf</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">#查看参数</span></span>
<span class="line"><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">,context,unit,setting,boot_val,reset_val</span></span>
<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pg_settings</span></span>
<span class="line"><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span></span>
<span class="line"><span style="color:#E1E4E8;">( </span><span style="color:#9ECBFF;">&#39;listen_addresses&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;max_connection&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;shared_buffers&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;effective_cache_size&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;work_mem&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;maintenance_work_mem&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">order by</span><span style="color:#E1E4E8;"> context,</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;"> ;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">         |  context   | unit | setting | boot_val  | reset_val </span></span>
<span class="line"><span style="color:#6A737D;">----------------------+------------+------+---------+-----------+-----------</span></span>
<span class="line"><span style="color:#E1E4E8;"> listen_addresses     | postmaster |      | </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">       | localhost | </span><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#E1E4E8;"> shared_buffers       | postmaster | 8kB  | </span><span style="color:#79B8FF;">65536</span><span style="color:#E1E4E8;">   | </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;">      | </span><span style="color:#79B8FF;">65536</span></span>
<span class="line"><span style="color:#E1E4E8;"> effective_cache_size | user       | 8kB  | </span><span style="color:#79B8FF;">262144</span><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">524288</span><span style="color:#E1E4E8;">    | </span><span style="color:#79B8FF;">262144</span></span>
<span class="line"><span style="color:#E1E4E8;"> maintenance_work_mem | user       | kB   | </span><span style="color:#79B8FF;">131072</span><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">65536</span><span style="color:#E1E4E8;">     | </span><span style="color:#79B8FF;">131072</span></span>
<span class="line"><span style="color:#E1E4E8;"> work_mem             | user       | kB   | </span><span style="color:#79B8FF;">3121152</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">4096</span><span style="color:#E1E4E8;">      | </span><span style="color:#79B8FF;">3121152</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">postgres</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">,setting </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pg_settings </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> category</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;File Locations&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">        |                 setting                  </span></span>
<span class="line"><span style="color:#6A737D;">-------------------+------------------------------------------</span></span>
<span class="line"><span style="color:#24292E;"> config_file       | </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">var</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">lib</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">postgresql</span><span style="color:#D73A49;">/data/</span><span style="color:#005CC5;">postgresql</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">conf</span></span>
<span class="line"><span style="color:#24292E;"> data_directory    | </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">var</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">lib</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">postgresql</span><span style="color:#D73A49;">/data</span></span>
<span class="line"><span style="color:#24292E;"> external_pid_file | </span></span>
<span class="line"><span style="color:#24292E;"> hba_file          | </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">var</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">lib</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">postgresql</span><span style="color:#D73A49;">/data/</span><span style="color:#005CC5;">pg_hba</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">conf</span></span>
<span class="line"><span style="color:#24292E;"> ident_file        | </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">var</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">lib</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">postgresql</span><span style="color:#D73A49;">/data/</span><span style="color:#005CC5;">pg_ident</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">conf</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">#查看参数</span></span>
<span class="line"><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">,context,unit,setting,boot_val,reset_val</span></span>
<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pg_settings</span></span>
<span class="line"><span style="color:#D73A49;">where</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span></span>
<span class="line"><span style="color:#24292E;">( </span><span style="color:#032F62;">&#39;listen_addresses&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;max_connection&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;shared_buffers&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;effective_cache_size&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;work_mem&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;maintenance_work_mem&#39;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">order by</span><span style="color:#24292E;"> context,</span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> ;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">         |  context   | unit | setting | boot_val  | reset_val </span></span>
<span class="line"><span style="color:#6A737D;">----------------------+------------+------+---------+-----------+-----------</span></span>
<span class="line"><span style="color:#24292E;"> listen_addresses     | postmaster |      | </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">       | localhost | </span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#24292E;"> shared_buffers       | postmaster | 8kB  | </span><span style="color:#005CC5;">65536</span><span style="color:#24292E;">   | </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">      | </span><span style="color:#005CC5;">65536</span></span>
<span class="line"><span style="color:#24292E;"> effective_cache_size | user       | 8kB  | </span><span style="color:#005CC5;">262144</span><span style="color:#24292E;">  | </span><span style="color:#005CC5;">524288</span><span style="color:#24292E;">    | </span><span style="color:#005CC5;">262144</span></span>
<span class="line"><span style="color:#24292E;"> maintenance_work_mem | user       | kB   | </span><span style="color:#005CC5;">131072</span><span style="color:#24292E;">  | </span><span style="color:#005CC5;">65536</span><span style="color:#24292E;">     | </span><span style="color:#005CC5;">131072</span></span>
<span class="line"><span style="color:#24292E;"> work_mem             | user       | kB   | </span><span style="color:#005CC5;">3121152</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">4096</span><span style="color:#24292E;">      | </span><span style="color:#005CC5;">3121152</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="_4-1-查看关键参数" tabindex="-1">4.1 查看关键参数 <a class="header-anchor" href="#_4-1-查看关键参数" aria-label="Permalink to &quot;4.1 查看关键参数&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">postgres</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">,context,unit,setting,boot_val,reset_val </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pg_settings </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;listen_addresses&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;max_connections&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;shared_buffers&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;effective_cache_size&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;work_mem&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;maintenance_work_mem&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">order by</span><span style="color:#E1E4E8;"> context,</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">         |  context   | unit | setting | boot_val  | reset_val </span></span>
<span class="line"><span style="color:#6A737D;">----------------------+------------+------+---------+-----------+-----------</span></span>
<span class="line"><span style="color:#E1E4E8;"> listen_addresses     | postmaster |      | </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">       | localhost | </span><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#E1E4E8;"> max_connections      | postmaster |      | </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">     | </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">       | </span><span style="color:#79B8FF;">100</span></span>
<span class="line"><span style="color:#E1E4E8;"> shared_buffers       | postmaster | 8kB  | </span><span style="color:#79B8FF;">16384</span><span style="color:#E1E4E8;">   | </span><span style="color:#79B8FF;">1024</span><span style="color:#E1E4E8;">      | </span><span style="color:#79B8FF;">16384</span></span>
<span class="line"><span style="color:#E1E4E8;"> effective_cache_size | user       | 8kB  | </span><span style="color:#79B8FF;">524288</span><span style="color:#E1E4E8;">  | </span><span style="color:#79B8FF;">524288</span><span style="color:#E1E4E8;">    | </span><span style="color:#79B8FF;">524288</span></span>
<span class="line"><span style="color:#E1E4E8;"> maintenance_work_mem | user       | kB   | </span><span style="color:#79B8FF;">65536</span><span style="color:#E1E4E8;">   | </span><span style="color:#79B8FF;">65536</span><span style="color:#E1E4E8;">     | </span><span style="color:#79B8FF;">65536</span></span>
<span class="line"><span style="color:#E1E4E8;"> work_mem             | user       | kB   | </span><span style="color:#79B8FF;">4096</span><span style="color:#E1E4E8;">    | </span><span style="color:#79B8FF;">4096</span><span style="color:#E1E4E8;">      | </span><span style="color:#79B8FF;">4096</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">postgres</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">,context,unit,setting,boot_val,reset_val </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pg_settings </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;listen_addresses&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;max_connections&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;shared_buffers&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;effective_cache_size&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;work_mem&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;maintenance_work_mem&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">order by</span><span style="color:#24292E;"> context,</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">         |  context   | unit | setting | boot_val  | reset_val </span></span>
<span class="line"><span style="color:#6A737D;">----------------------+------------+------+---------+-----------+-----------</span></span>
<span class="line"><span style="color:#24292E;"> listen_addresses     | postmaster |      | </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">       | localhost | </span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#24292E;"> max_connections      | postmaster |      | </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">     | </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">       | </span><span style="color:#005CC5;">100</span></span>
<span class="line"><span style="color:#24292E;"> shared_buffers       | postmaster | 8kB  | </span><span style="color:#005CC5;">16384</span><span style="color:#24292E;">   | </span><span style="color:#005CC5;">1024</span><span style="color:#24292E;">      | </span><span style="color:#005CC5;">16384</span></span>
<span class="line"><span style="color:#24292E;"> effective_cache_size | user       | 8kB  | </span><span style="color:#005CC5;">524288</span><span style="color:#24292E;">  | </span><span style="color:#005CC5;">524288</span><span style="color:#24292E;">    | </span><span style="color:#005CC5;">524288</span></span>
<span class="line"><span style="color:#24292E;"> maintenance_work_mem | user       | kB   | </span><span style="color:#005CC5;">65536</span><span style="color:#24292E;">   | </span><span style="color:#005CC5;">65536</span><span style="color:#24292E;">     | </span><span style="color:#005CC5;">65536</span></span>
<span class="line"><span style="color:#24292E;"> work_mem             | user       | kB   | </span><span style="color:#005CC5;">4096</span><span style="color:#24292E;">    | </span><span style="color:#005CC5;">4096</span><span style="color:#24292E;">      | </span><span style="color:#005CC5;">4096</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">6</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows</span><span style="color:#24292E;">)</span></span></code></pre></div><p>context 设置为postmaster，更改此形参后需要重启PostgreSQL服务才能生效；</p><p>设置为user，那么只需要执行一次重新加载即可全局生效。重启数据库服务会终止活动连接，但重新加载不会。</p><p>unit 字段表示这些设置的单位</p><p>setting是指当前设置；boot_val是指默认设置；reset_val是指重新启动服务器或重新加载设置之后的新设置</p><p>在postgresql.conf中修改了设置后，一定记得查看一下setting和reset_val并确保二者是一致，否则说明设置并未生效，需要重新启动服务器或者重新加载设置</p><h2 id="_4-2postgresql-auto-conf与postgresql-conf区别" tabindex="-1">4.2postgresql.auto.conf与postgresql.conf区别 <a class="header-anchor" href="#_4-2postgresql-auto-conf与postgresql-conf区别" aria-label="Permalink to &quot;4.2postgresql.auto.conf与postgresql.conf区别&quot;">​</a></h2><p>对于9.4版及之后的版本来说，有相同配置，Postgresql.auto.conf的优先级是高于postgresql.conf的，如果这两个文件中存在同名配置项，则系统会优先选择前者设定的值</p><p>值得注意的是 auto.conf这个文件必须在 psql 中使用 alter system 来修改，而conf可以直接在文本编辑器中修改</p><p><strong>postgresql.auto.conf 为二进制格式</strong></p><p><strong>在使用 alter system set 修改postgres的配置文件的时候，仅影响 auto.conf 这个文件的内容，将 参数设回 default 时，auto.conf文件的这项配置会被删除，重新用回 conf 文件的设置</strong></p><h2 id="_4-3-postgresql-conf" tabindex="-1">4.3 postgresql.conf <a class="header-anchor" href="#_4-3-postgresql-conf" aria-label="Permalink to &quot;4.3 postgresql.conf&quot;">​</a></h2><p>修改这些值是一定要重新启动数据库服务</p><p>listen_addresses 一般设定为localhost或者local，但也有很多人会设为*，表示使用本机任一IP地址均可连接到Postgresql服务</p><p>port 默认值 为5432</p><p>max_connections</p><h1 id="_5-开启归档" tabindex="-1">5.开启归档 <a class="header-anchor" href="#_5-开启归档" aria-label="Permalink to &quot;5.开启归档&quot;">​</a></h1><h2 id="_5-1查看" tabindex="-1">5.1查看 <a class="header-anchor" href="#_5-1查看" aria-label="Permalink to &quot;5.1查看&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">postgres</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># \\c</span></span>
<span class="line"><span style="color:#E1E4E8;">You are </span><span style="color:#F97583;">now</span><span style="color:#E1E4E8;"> connected </span><span style="color:#F97583;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">database</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;postgres&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> user </span><span style="color:#9ECBFF;">&quot;postgres&quot;</span><span style="color:#E1E4E8;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">#查看是否归档</span></span>
<span class="line"><span style="color:#E1E4E8;">postgres</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># show archive_mode;</span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">[ RECORD 1 ]</span><span style="color:#F97583;">+</span><span style="color:#6A737D;">---</span></span>
<span class="line"><span style="color:#E1E4E8;">archive_mode | </span><span style="color:#F97583;">on</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">on</span><span style="color:#6A737D;">-----》开启</span></span>
<span class="line"><span style="color:#F97583;">off</span><span style="color:#6A737D;">-----&gt;关闭</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#24292E;">postgres</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># \\c</span></span>
<span class="line"><span style="color:#24292E;">You are </span><span style="color:#D73A49;">now</span><span style="color:#24292E;"> connected </span><span style="color:#D73A49;">to</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">database</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;postgres&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> user </span><span style="color:#032F62;">&quot;postgres&quot;</span><span style="color:#24292E;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">#查看是否归档</span></span>
<span class="line"><span style="color:#24292E;">postgres</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># show archive_mode;</span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">[ RECORD 1 ]</span><span style="color:#D73A49;">+</span><span style="color:#6A737D;">---</span></span>
<span class="line"><span style="color:#24292E;">archive_mode | </span><span style="color:#D73A49;">on</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">on</span><span style="color:#6A737D;">-----》开启</span></span>
<span class="line"><span style="color:#D73A49;">off</span><span style="color:#6A737D;">-----&gt;关闭</span></span></code></pre></div><h2 id="_5-2开启" tabindex="-1">5.2开启 <a class="header-anchor" href="#_5-2开启" aria-label="Permalink to &quot;5.2开启&quot;">​</a></h2><p>PostgreSQL数据库参数文件:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[postgres@pg01 ~]$ cd </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">var</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">lib</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">pgsql</span><span style="color:#F97583;">/</span><span style="color:#79B8FF;">12</span><span style="color:#F97583;">/data</span></span>
<span class="line"><span style="color:#E1E4E8;">[postgres@pg01 data]$ ll </span><span style="color:#79B8FF;">postgresql</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">conf</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">rw</span><span style="color:#6A737D;">-------. 1 postgres postgres 26612 Mar  1 16:03 postgresql.conf</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[postgres@pg01 ~]$ cd </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">var</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">lib</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">pgsql</span><span style="color:#D73A49;">/</span><span style="color:#005CC5;">12</span><span style="color:#D73A49;">/data</span></span>
<span class="line"><span style="color:#24292E;">[postgres@pg01 data]$ ll </span><span style="color:#005CC5;">postgresql</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">conf</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">rw</span><span style="color:#6A737D;">-------. 1 postgres postgres 26612 Mar  1 16:03 postgresql.conf</span></span></code></pre></div><p>vi postgres.conf修改如下</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">wal_level </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">replica</span><span style="color:#E1E4E8;">                     # minimal, </span><span style="color:#F97583;">replica</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> logical</span></span>
<span class="line"><span style="color:#E1E4E8;">archive_mode </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;">               # enables archiving; </span><span style="color:#F97583;">off</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">always</span></span>
<span class="line"><span style="color:#E1E4E8;">archive_command </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;test ! -f /var/lib/pgsql/12/arch/%f &amp;&amp; cp %p  /var/lib/pgsql/12/arch/%f&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">## 其中： </span></span>
<span class="line"><span style="color:#E1E4E8;">%p表示wal日志文件的路径，</span></span>
<span class="line"><span style="color:#E1E4E8;">%f表示wal日志文件名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">wal_level ：</span></span>
<span class="line"><span style="color:#E1E4E8;">minimal 记录的WAL日志信息最少, 除了记录数据库异常关闭需要恢复时的WAL外, 其他操作信息都不记录;</span></span>
<span class="line"><span style="color:#F97583;">replica</span><span style="color:#E1E4E8;"> 记录的WAL信息比minimal信息多, 会记录支持WAL归档、复制和备库中启用只读查询等操作所需的WAL信息；</span></span>
<span class="line"><span style="color:#E1E4E8;">logical 记录的最多， 包含了支持逻辑解析所需的WAL。 并包含了minimal和replica记录的信息</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">archive_command：</span></span>
<span class="line"><span style="color:#E1E4E8;">	可以将WAL归档到本级目录， 也可以归档到远程其他主机上</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span></span>
<span class="line"><span style="color:#E1E4E8;">max_wal_senders：</span></span>
<span class="line"><span style="color:#E1E4E8;">控制主库上的最大WAL发送进程数， 通过pg_basebackup命令在主库上做基准备份时也会消耗WAL进程。此参数不能大于max_connections， 默认值10</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">wal_level </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">replica</span><span style="color:#24292E;">                     # minimal, </span><span style="color:#D73A49;">replica</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> logical</span></span>
<span class="line"><span style="color:#24292E;">archive_mode </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">on</span><span style="color:#24292E;">               # enables archiving; </span><span style="color:#D73A49;">off</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">on</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">always</span></span>
<span class="line"><span style="color:#24292E;">archive_command </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;test ! -f /var/lib/pgsql/12/arch/%f &amp;&amp; cp %p  /var/lib/pgsql/12/arch/%f&#39;</span></span>
<span class="line"><span style="color:#24292E;">## 其中： </span></span>
<span class="line"><span style="color:#24292E;">%p表示wal日志文件的路径，</span></span>
<span class="line"><span style="color:#24292E;">%f表示wal日志文件名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">wal_level ：</span></span>
<span class="line"><span style="color:#24292E;">minimal 记录的WAL日志信息最少, 除了记录数据库异常关闭需要恢复时的WAL外, 其他操作信息都不记录;</span></span>
<span class="line"><span style="color:#D73A49;">replica</span><span style="color:#24292E;"> 记录的WAL信息比minimal信息多, 会记录支持WAL归档、复制和备库中启用只读查询等操作所需的WAL信息；</span></span>
<span class="line"><span style="color:#24292E;">logical 记录的最多， 包含了支持逻辑解析所需的WAL。 并包含了minimal和replica记录的信息</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">archive_command：</span></span>
<span class="line"><span style="color:#24292E;">	可以将WAL归档到本级目录， 也可以归档到远程其他主机上</span></span>
<span class="line"><span style="color:#24292E;">	</span></span>
<span class="line"><span style="color:#24292E;">max_wal_senders：</span></span>
<span class="line"><span style="color:#24292E;">控制主库上的最大WAL发送进程数， 通过pg_basebackup命令在主库上做基准备份时也会消耗WAL进程。此参数不能大于max_connections， 默认值10</span></span></code></pre></div><p>需要重启数据库</p><p>手动切换日志</p><p>在PG10之前：</p><p>postgres=<em># select pg_switch_xlog();</em></p><p>在PG10之后：</p><p>postgres=<em># select pg_switch_wal();</em></p><p>pg_switch_wal</p><p><em>---------------</em> 0/130005E0 (1 row)</p><h2 id="_5-3清理归档日志" tabindex="-1">5.3清理归档日志 <a class="header-anchor" href="#_5-3清理归档日志" aria-label="Permalink to &quot;5.3清理归档日志&quot;">​</a></h2><p>/data/pgdata/archivedir</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wal_level = replica </span></span>
<span class="line"><span style="color:#e1e4e8;">archive_mode = on </span></span>
<span class="line"><span style="color:#e1e4e8;">#archive_command = &#39;test ! -f /data/pgdata/archivedir/%f &amp;&amp; cp %p /data/pgdata/archivedir/%f&#39; </span></span>
<span class="line"><span style="color:#e1e4e8;">archive_command = &#39;arch.sh %f %p&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">archive_timeout = 60s</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#vi arch.sh</span></span>
<span class="line"><span style="color:#e1e4e8;">[postgres@pg01 data]$ pwd</span></span>
<span class="line"><span style="color:#e1e4e8;">/data/pgdata/data</span></span>
<span class="line"><span style="color:#e1e4e8;">[postgres@pg01 data]$ cat arch.sh </span></span>
<span class="line"><span style="color:#e1e4e8;">test ! -f /data/pgdata/archivedir/$1 &amp;&amp; cp --preserve=timestamps $2 /data/pgdata/archivedir/$1 ; find /data/pgdata/archivedir/ -type f -mtime +7 -exec rm -f {} \\;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wal_level = replica </span></span>
<span class="line"><span style="color:#24292e;">archive_mode = on </span></span>
<span class="line"><span style="color:#24292e;">#archive_command = &#39;test ! -f /data/pgdata/archivedir/%f &amp;&amp; cp %p /data/pgdata/archivedir/%f&#39; </span></span>
<span class="line"><span style="color:#24292e;">archive_command = &#39;arch.sh %f %p&#39;</span></span>
<span class="line"><span style="color:#24292e;">archive_timeout = 60s</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#vi arch.sh</span></span>
<span class="line"><span style="color:#24292e;">[postgres@pg01 data]$ pwd</span></span>
<span class="line"><span style="color:#24292e;">/data/pgdata/data</span></span>
<span class="line"><span style="color:#24292e;">[postgres@pg01 data]$ cat arch.sh </span></span>
<span class="line"><span style="color:#24292e;">test ! -f /data/pgdata/archivedir/$1 &amp;&amp; cp --preserve=timestamps $2 /data/pgdata/archivedir/$1 ; find /data/pgdata/archivedir/ -type f -mtime +7 -exec rm -f {} \\;</span></span></code></pre></div><p>重启pg数据库</p><p>[postgres@pg01 pgdata]$ ps uax|grep archiver postgres 6745 0.0 0.2 140540 4684 ? Ss 03:05 0:00 postgres: archiver</p><p><a href="https://zhangeamon.top/postgres/params/" target="_blank" rel="noreferrer">https://zhangeamon.top/postgres/params/</a></p><h1 id="_6-postmaster-pid含义" tabindex="-1">6，postmaster.pid含义 <a class="header-anchor" href="#_6-postmaster-pid含义" aria-label="Permalink to &quot;6，postmaster.pid含义&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">cat postmaster.pid  </span></span>
<span class="line"><span style="color:#e1e4e8;">  </span></span>
<span class="line"><span style="color:#e1e4e8;">2551  </span></span>
<span class="line"><span style="color:#e1e4e8;">/pgdata/digoal/1921/data02/pg_root  </span></span>
<span class="line"><span style="color:#e1e4e8;">1331803654  </span></span>
<span class="line"><span style="color:#e1e4e8;">1921  </span></span>
<span class="line"><span style="color:#e1e4e8;">/pgdata/digoal/1921/data02/pg_root  </span></span>
<span class="line"><span style="color:#e1e4e8;">0.0.0.0  </span></span>
<span class="line"><span style="color:#e1e4e8;">  1921001   6127619</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">cat postmaster.pid  </span></span>
<span class="line"><span style="color:#24292e;">  </span></span>
<span class="line"><span style="color:#24292e;">2551  </span></span>
<span class="line"><span style="color:#24292e;">/pgdata/digoal/1921/data02/pg_root  </span></span>
<span class="line"><span style="color:#24292e;">1331803654  </span></span>
<span class="line"><span style="color:#24292e;">1921  </span></span>
<span class="line"><span style="color:#24292e;">/pgdata/digoal/1921/data02/pg_root  </span></span>
<span class="line"><span style="color:#24292e;">0.0.0.0  </span></span>
<span class="line"><span style="color:#24292e;">  1921001   6127619</span></span></code></pre></div><p>1、2551 postgres主进程的PID</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">ps -ewf|grep 2551  </span></span>
<span class="line"><span style="color:#e1e4e8;">postgres  2551     1  0 17:27 ?        00:00:00 /opt/pgsql/bin/postgres  </span></span>
<span class="line"><span style="color:#e1e4e8;">postgres  2552  2551  0 17:27 ?        00:00:00 postgres: logger process     </span></span>
<span class="line"><span style="color:#e1e4e8;">postgres  2554  2551  0 17:27 ?        00:00:00 postgres: writer process     </span></span>
<span class="line"><span style="color:#e1e4e8;">postgres  2555  2551  0 17:27 ?        00:00:00 postgres: wal writer process     </span></span>
<span class="line"><span style="color:#e1e4e8;">postgres  2556  2551  0 17:27 ?        00:00:00 postgres: autovacuum launcher process     </span></span>
<span class="line"><span style="color:#e1e4e8;">postgres  2557  2551  0 17:27 ?        00:00:00 postgres: archiver process     </span></span>
<span class="line"><span style="color:#e1e4e8;">postgres  2558  2551  0 17:27 ?        00:00:00 postgres: stats collector process</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">ps -ewf|grep 2551  </span></span>
<span class="line"><span style="color:#24292e;">postgres  2551     1  0 17:27 ?        00:00:00 /opt/pgsql/bin/postgres  </span></span>
<span class="line"><span style="color:#24292e;">postgres  2552  2551  0 17:27 ?        00:00:00 postgres: logger process     </span></span>
<span class="line"><span style="color:#24292e;">postgres  2554  2551  0 17:27 ?        00:00:00 postgres: writer process     </span></span>
<span class="line"><span style="color:#24292e;">postgres  2555  2551  0 17:27 ?        00:00:00 postgres: wal writer process     </span></span>
<span class="line"><span style="color:#24292e;">postgres  2556  2551  0 17:27 ?        00:00:00 postgres: autovacuum launcher process     </span></span>
<span class="line"><span style="color:#24292e;">postgres  2557  2551  0 17:27 ?        00:00:00 postgres: archiver process     </span></span>
<span class="line"><span style="color:#24292e;">postgres  2558  2551  0 17:27 ?        00:00:00 postgres: stats collector process</span></span></code></pre></div><p>2、/pgdata/digoal/1921/data02/pg_root</p><p>数据目录.</p><p>3、1331803654</p><p>这行是这个文件创建的时间转换成epoch. 我一开始一直以为是pg_postmaster_start_time获得的时间.如果你发现不对的话就去看看postmaster.pid的文件创建时间吧.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">digoal=# select pg_postmaster_start_time();  </span></span>
<span class="line"><span style="color:#e1e4e8;">   pg_postmaster_start_time      </span></span>
<span class="line"><span style="color:#e1e4e8;">-------------------------------  </span></span>
<span class="line"><span style="color:#e1e4e8;"> 2012-03-15 17:27:34.416047+08  </span></span>
<span class="line"><span style="color:#e1e4e8;">(1 row)  </span></span>
<span class="line"><span style="color:#e1e4e8;">  </span></span>
<span class="line"><span style="color:#e1e4e8;">digoal=# select extract(epoch from &#39;2012-03-15 17:27:34&#39;::timestamp);    </span></span>
<span class="line"><span style="color:#e1e4e8;">date_part     </span></span>
<span class="line"><span style="color:#e1e4e8;">------------    </span></span>
<span class="line"><span style="color:#e1e4e8;">1331803654   </span></span>
<span class="line"><span style="color:#e1e4e8;">(1 row)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">digoal=# select pg_postmaster_start_time();  </span></span>
<span class="line"><span style="color:#24292e;">   pg_postmaster_start_time      </span></span>
<span class="line"><span style="color:#24292e;">-------------------------------  </span></span>
<span class="line"><span style="color:#24292e;"> 2012-03-15 17:27:34.416047+08  </span></span>
<span class="line"><span style="color:#24292e;">(1 row)  </span></span>
<span class="line"><span style="color:#24292e;">  </span></span>
<span class="line"><span style="color:#24292e;">digoal=# select extract(epoch from &#39;2012-03-15 17:27:34&#39;::timestamp);    </span></span>
<span class="line"><span style="color:#24292e;">date_part     </span></span>
<span class="line"><span style="color:#24292e;">------------    </span></span>
<span class="line"><span style="color:#24292e;">1331803654   </span></span>
<span class="line"><span style="color:#24292e;">(1 row)</span></span></code></pre></div><p>虽然上面的postmaster时间和这个文件的创建时间一致, 但它其实是这个文件的创建时间.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">stat postmaster.pid      </span></span>
<span class="line"><span style="color:#e1e4e8;">  </span></span>
<span class="line"><span style="color:#e1e4e8;">File: \`postmaster.pid&#39;     </span></span>
<span class="line"><span style="color:#e1e4e8;">  </span></span>
<span class="line"><span style="color:#e1e4e8;">Size: 119             Blocks: 8          IO Block: 4096     </span></span>
<span class="line"><span style="color:#e1e4e8;">  </span></span>
<span class="line"><span style="color:#e1e4e8;">regular file Device: fd03h/64771d    Inode: 1572868     Links: 1   </span></span>
<span class="line"><span style="color:#e1e4e8;">  </span></span>
<span class="line"><span style="color:#e1e4e8;">Access: (0600/-rw-------)    </span></span>
<span class="line"><span style="color:#e1e4e8;">  </span></span>
<span class="line"><span style="color:#e1e4e8;">Uid: (  500/postgres)     </span></span>
<span class="line"><span style="color:#e1e4e8;">  </span></span>
<span class="line"><span style="color:#e1e4e8;">Gid: (  500/postgres)   </span></span>
<span class="line"><span style="color:#e1e4e8;">  </span></span>
<span class="line"><span style="color:#e1e4e8;">Access: 2012-03-15 17:41:10.416810701 +0800   </span></span>
<span class="line"><span style="color:#e1e4e8;">  </span></span>
<span class="line"><span style="color:#e1e4e8;">Modify: 2012-03-15 17:27:34.364810701 +0800   </span></span>
<span class="line"><span style="color:#e1e4e8;">  </span></span>
<span class="line"><span style="color:#e1e4e8;">Change: 2012-03-15 17:27:34.364810701 +0800</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">stat postmaster.pid      </span></span>
<span class="line"><span style="color:#24292e;">  </span></span>
<span class="line"><span style="color:#24292e;">File: \`postmaster.pid&#39;     </span></span>
<span class="line"><span style="color:#24292e;">  </span></span>
<span class="line"><span style="color:#24292e;">Size: 119             Blocks: 8          IO Block: 4096     </span></span>
<span class="line"><span style="color:#24292e;">  </span></span>
<span class="line"><span style="color:#24292e;">regular file Device: fd03h/64771d    Inode: 1572868     Links: 1   </span></span>
<span class="line"><span style="color:#24292e;">  </span></span>
<span class="line"><span style="color:#24292e;">Access: (0600/-rw-------)    </span></span>
<span class="line"><span style="color:#24292e;">  </span></span>
<span class="line"><span style="color:#24292e;">Uid: (  500/postgres)     </span></span>
<span class="line"><span style="color:#24292e;">  </span></span>
<span class="line"><span style="color:#24292e;">Gid: (  500/postgres)   </span></span>
<span class="line"><span style="color:#24292e;">  </span></span>
<span class="line"><span style="color:#24292e;">Access: 2012-03-15 17:41:10.416810701 +0800   </span></span>
<span class="line"><span style="color:#24292e;">  </span></span>
<span class="line"><span style="color:#24292e;">Modify: 2012-03-15 17:27:34.364810701 +0800   </span></span>
<span class="line"><span style="color:#24292e;">  </span></span>
<span class="line"><span style="color:#24292e;">Change: 2012-03-15 17:27:34.364810701 +0800</span></span></code></pre></div><p>4、1921 数据库监听端口. 在postgresql.conf中对应 port = 1921</p><p>5、<code>/pgdata/digoal/1921/data02/pg_root</code> 是unix socket的监听目录. 在postgresql.conf中对应 <code>unix_socket_directory = &#39;/pgdata/digoal/1921/data02/pg_root&#39;</code></p><p>6、<code>0.0.0.0</code> 数据库监听地址, 对应 postgresql.conf 的 <code>listen_addresses = &#39;0.0.0.0&#39;</code></p><p>7、最后一行对应的是共享内存的地址(shared memory segments中的key和shmid).</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">  1921001   6127619  </span></span>
<span class="line"><span style="color:#e1e4e8;">ipcs    </span></span>
<span class="line"><span style="color:#e1e4e8;">------ Shared Memory Segments --------   </span></span>
<span class="line"><span style="color:#e1e4e8;">key        shmid      owner      perms      bytes      nattch     status         </span></span>
<span class="line"><span style="color:#e1e4e8;">0x001d4fe9 6127619    postgres  600        617250816  4</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">  1921001   6127619  </span></span>
<span class="line"><span style="color:#24292e;">ipcs    </span></span>
<span class="line"><span style="color:#24292e;">------ Shared Memory Segments --------   </span></span>
<span class="line"><span style="color:#24292e;">key        shmid      owner      perms      bytes      nattch     status         </span></span>
<span class="line"><span style="color:#24292e;">0x001d4fe9 6127619    postgres  600        617250816  4</span></span></code></pre></div><p>postmaster.pid显示的是key转成10进制后的数字</p><h1 id="_7-参数" tabindex="-1">7.参数 <a class="header-anchor" href="#_7-参数" aria-label="Permalink to &quot;7.参数&quot;">​</a></h1><h2 id="_7-1内存参数" tabindex="-1">7.1内存参数 <a class="header-anchor" href="#_7-1内存参数" aria-label="Permalink to &quot;7.1内存参数&quot;">​</a></h2><h3 id="work-mem" tabindex="-1">work_mem <a class="header-anchor" href="#work-mem" aria-label="Permalink to &quot;work_mem&quot;">​</a></h3><p><code>work_mem</code> (<code>integer</code>)</p><p>Specifies the amount of memory to be used by internal sort operations and hash tables before writing to temporary disk files. The value defaults to four megabytes (<code>4MB</code>). Note that for a complex query, several sort or hash operations might be running in parallel; each operation will be allowed to use as much memory as this value specifies before it starts to write data into temporary files. Also, several running sessions could be doing such operations concurrently. Therefore, the total memory used could be many times the value of <code>work_mem</code>; it is necessary to keep this fact in mind when choosing the value. Sort operations are used for <code>ORDER BY</code>, <code>DISTINCT</code>, and merge joins. Hash tables are used in hash joins, hash-based aggregation, and hash-based processing of <code>IN</code> subqueries.</p><p>声明内部排序操作和Hash表在开始使用临时磁盘文件之前使用的内存限制。 缺省数值是4兆字节(<code>4MB</code>)。请注意对于复杂的查询， 可能会并发行若干排序或者散列表操作；每个都会被允许使用这个参数获得这么多内存， 然后才会开始求助于临时文件。同样，好几个正在运行的会话可能会同时进行排序操作。 因此使用的总内存可能是<code>work_mem</code>的好几倍。 当选择这个值的时候，必须记住这个事实。 <code>ORDER BY</code>, <code>DISTINCT</code>和融合连接都要用到排序操作。 Hash表在散列连接、散列为基础的聚合、散列为基础的<code>IN</code>子查询处理中都要用到</p><h4 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to &quot;案例&quot;">​</a></h4><ul><li>生成一百万条记录</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[postgres@sht-sgmhadoopdn-04 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$ perl -e </span><span style="color:#9ECBFF;">&#39;@c=(&quot;a&quot;..&quot;z&quot;,&quot;A&quot;..&quot;Z&quot;,0..9); print join(&quot;&quot;,map{$c[rand@c]}10..20+rand(40)).&quot;\\n&quot; for 1..1000000&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> /tmp/random_strings</span></span>
<span class="line"><span style="color:#E1E4E8;">[postgres@sht-sgmhadoopdn-04 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$ ls -lh /tmp/random_strings </span></span>
<span class="line"><span style="color:#B392F0;">-rw-r--r--</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">postgres</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dba</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">31</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Nov</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">21</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">22</span><span style="color:#9ECBFF;">:44</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/tmp/random_strings</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[postgres@sht-sgmhadoopdn-04 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$ perl -e </span><span style="color:#032F62;">&#39;@c=(&quot;a&quot;..&quot;z&quot;,&quot;A&quot;..&quot;Z&quot;,0..9); print join(&quot;&quot;,map{$c[rand@c]}10..20+rand(40)).&quot;\\n&quot; for 1..1000000&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> /tmp/random_strings</span></span>
<span class="line"><span style="color:#24292E;">[postgres@sht-sgmhadoopdn-04 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$ ls -lh /tmp/random_strings </span></span>
<span class="line"><span style="color:#6F42C1;">-rw-r--r--</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">postgres</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dba</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">31</span><span style="color:#032F62;">M</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Nov</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">21</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">22</span><span style="color:#032F62;">:44</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/tmp/random_strings</span></span></code></pre></div><ul><li>创建对应表结构并导入数据</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">edbstore</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># </span><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> test (id </span><span style="color:#F97583;">serial</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;">, random_text </span><span style="color:#F97583;">text</span><span style="color:#E1E4E8;"> );</span></span>
<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">edbstore</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># \\d test</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#F97583;">Table</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;public.test&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">   Column    |  </span><span style="color:#F97583;">Type</span><span style="color:#E1E4E8;">   |                     Modifiers                     </span></span>
<span class="line"><span style="color:#6A737D;">-------------+---------+---------------------------------------------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> id          | </span><span style="color:#F97583;">integer</span><span style="color:#E1E4E8;"> | </span><span style="color:#F97583;">not null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> nextval(</span><span style="color:#9ECBFF;">&#39;test_id_seq&#39;</span><span style="color:#E1E4E8;">::regclass)</span></span>
<span class="line"><span style="color:#E1E4E8;"> random_text | </span><span style="color:#F97583;">text</span><span style="color:#E1E4E8;">    | </span></span>
<span class="line"><span style="color:#E1E4E8;">Indexes:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;test_pkey&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;">, btree (id)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">edbstore</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># \\d</span></span>
<span class="line"><span style="color:#E1E4E8;">             List of relations</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Schema</span><span style="color:#E1E4E8;"> |    </span><span style="color:#F97583;">Name</span><span style="color:#E1E4E8;">     |   </span><span style="color:#F97583;">Type</span><span style="color:#E1E4E8;">   |  </span><span style="color:#F97583;">Owner</span><span style="color:#E1E4E8;">   </span></span>
<span class="line"><span style="color:#6A737D;">--------+-------------+----------+----------</span></span>
<span class="line"><span style="color:#E1E4E8;"> public | tb1         | </span><span style="color:#F97583;">table</span><span style="color:#E1E4E8;">    | postgres</span></span>
<span class="line"><span style="color:#E1E4E8;"> public | test        | </span><span style="color:#F97583;">table</span><span style="color:#E1E4E8;">    | postgres</span></span>
<span class="line"><span style="color:#E1E4E8;"> public | test_id_seq | </span><span style="color:#F97583;">sequence</span><span style="color:#E1E4E8;"> | postgres</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">edbstore</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># </span><span style="color:#F97583;">copy</span><span style="color:#E1E4E8;"> test (random_text) </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/tmp/random_strings&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">COPY</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">edbstore</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> test </span><span style="color:#F97583;">limit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> id |                   random_text                   </span></span>
<span class="line"><span style="color:#6A737D;">----+-------------------------------------------------</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> | CKQyHTYH5VjeHRUC6YYLF8H5S</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> | G22uBhFmrlA17wTUzf</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> | ey6kX7I6etknzhEFCL</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> | 8LB6navSS8VyoIeqbJBx9RqB3O4AI8GIFExnM7s</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;"> | bvYt4dKGSiAun6yA5Q7owlKWJGEgD0nlxoBRZm8B</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;"> | qk1RfhXHwo2PNpbI4</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> | rnPterTw1a3Z3DoL8rhzlltUKb5</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;"> | l2TrrbDsBkAa5V5ZBKFE59k4T7sDKA58yrS0mJNssl7CJnF</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> | xM9HPgq6QMRsx1aOTqM0LPRQRYkQy50uV</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> | viSJ4p1i3O0dY8tKei3x</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">edbstore</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># </span><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> test (id </span><span style="color:#D73A49;">serial</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;">, random_text </span><span style="color:#D73A49;">text</span><span style="color:#24292E;"> );</span></span>
<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">edbstore</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># \\d test</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#D73A49;">Table</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;public.test&quot;</span></span>
<span class="line"><span style="color:#24292E;">   Column    |  </span><span style="color:#D73A49;">Type</span><span style="color:#24292E;">   |                     Modifiers                     </span></span>
<span class="line"><span style="color:#6A737D;">-------------+---------+---------------------------------------------------</span></span>
<span class="line"><span style="color:#24292E;"> id          | </span><span style="color:#D73A49;">integer</span><span style="color:#24292E;"> | </span><span style="color:#D73A49;">not null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> nextval(</span><span style="color:#032F62;">&#39;test_id_seq&#39;</span><span style="color:#24292E;">::regclass)</span></span>
<span class="line"><span style="color:#24292E;"> random_text | </span><span style="color:#D73A49;">text</span><span style="color:#24292E;">    | </span></span>
<span class="line"><span style="color:#24292E;">Indexes:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;test_pkey&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;">, btree (id)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">edbstore</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># \\d</span></span>
<span class="line"><span style="color:#24292E;">             List of relations</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">Schema</span><span style="color:#24292E;"> |    </span><span style="color:#D73A49;">Name</span><span style="color:#24292E;">     |   </span><span style="color:#D73A49;">Type</span><span style="color:#24292E;">   |  </span><span style="color:#D73A49;">Owner</span><span style="color:#24292E;">   </span></span>
<span class="line"><span style="color:#6A737D;">--------+-------------+----------+----------</span></span>
<span class="line"><span style="color:#24292E;"> public | tb1         | </span><span style="color:#D73A49;">table</span><span style="color:#24292E;">    | postgres</span></span>
<span class="line"><span style="color:#24292E;"> public | test        | </span><span style="color:#D73A49;">table</span><span style="color:#24292E;">    | postgres</span></span>
<span class="line"><span style="color:#24292E;"> public | test_id_seq | </span><span style="color:#D73A49;">sequence</span><span style="color:#24292E;"> | postgres</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">edbstore</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># </span><span style="color:#D73A49;">copy</span><span style="color:#24292E;"> test (random_text) </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/tmp/random_strings&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">COPY</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">edbstore</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> test </span><span style="color:#D73A49;">limit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;"> id |                   random_text                   </span></span>
<span class="line"><span style="color:#6A737D;">----+-------------------------------------------------</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> | CKQyHTYH5VjeHRUC6YYLF8H5S</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> | G22uBhFmrlA17wTUzf</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> | ey6kX7I6etknzhEFCL</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> | 8LB6navSS8VyoIeqbJBx9RqB3O4AI8GIFExnM7s</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">5</span><span style="color:#24292E;"> | bvYt4dKGSiAun6yA5Q7owlKWJGEgD0nlxoBRZm8B</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">6</span><span style="color:#24292E;"> | qk1RfhXHwo2PNpbI4</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> | rnPterTw1a3Z3DoL8rhzlltUKb5</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">8</span><span style="color:#24292E;"> | l2TrrbDsBkAa5V5ZBKFE59k4T7sDKA58yrS0mJNssl7CJnF</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> | xM9HPgq6QMRsx1aOTqM0LPRQRYkQy50uV</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> | viSJ4p1i3O0dY8tKei3x</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows</span><span style="color:#24292E;">)</span></span></code></pre></div><ul><li>通过每次获取不通的数据量来观察每次explain的执行方式</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">edbstore</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># show work_mem;</span></span>
<span class="line"><span style="color:#E1E4E8;"> work_mem </span></span>
<span class="line"><span style="color:#6A737D;">----------</span></span>
<span class="line"><span style="color:#E1E4E8;"> 1MB</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">row</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">edbstore</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># EXPLAIN analyze </span><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> test </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> id </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">ORDER BY</span><span style="color:#E1E4E8;"> random_text </span><span style="color:#F97583;">ASC</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                                                       QUERY PLAN                                                       </span></span>
<span class="line"><span style="color:#6A737D;">------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> Sort  (cost</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">73</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">75</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;">) (actual </span><span style="color:#F97583;">time=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">188</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">202</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> loops</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   Sort </span><span style="color:#F97583;">Key</span><span style="color:#E1E4E8;">: random_text</span></span>
<span class="line"><span style="color:#E1E4E8;">   Sort Method: quicksort  Memory: 25kB</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">Index</span><span style="color:#E1E4E8;"> Scan </span><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> test_pkey </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> test  (cost</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">42</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">58</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;">) (actual </span><span style="color:#F97583;">time=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">018</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">037</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> loops</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">Index</span><span style="color:#E1E4E8;"> Cond: (id </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;"> Planning </span><span style="color:#F97583;">time</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">435</span><span style="color:#E1E4E8;"> ms</span></span>
<span class="line"><span style="color:#E1E4E8;"> Execution </span><span style="color:#F97583;">time</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">294</span><span style="color:#E1E4E8;"> ms</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">edbstore</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># EXPLAIN analyze </span><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> test </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> id </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">ORDER BY</span><span style="color:#E1E4E8;"> random_text </span><span style="color:#F97583;">ASC</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                                                         QUERY PLAN                                                         </span></span>
<span class="line"><span style="color:#6A737D;">----------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> Sort  (cost</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">75</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;">) (actual </span><span style="color:#F97583;">time=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">870</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">027</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;"> loops</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   Sort </span><span style="color:#F97583;">Key</span><span style="color:#E1E4E8;">: random_text</span></span>
<span class="line"><span style="color:#E1E4E8;">   Sort Method: quicksort  Memory: 34kB</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">Index</span><span style="color:#E1E4E8;"> Scan </span><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> test_pkey </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> test  (cost</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">42</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;">) (actual </span><span style="color:#F97583;">time=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">022</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">218</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;"> loops</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">Index</span><span style="color:#E1E4E8;"> Cond: (id </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;"> Planning </span><span style="color:#F97583;">time</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">286</span><span style="color:#E1E4E8;"> ms</span></span>
<span class="line"><span style="color:#E1E4E8;"> Execution </span><span style="color:#F97583;">time</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">248</span><span style="color:#E1E4E8;"> ms</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">edbstore</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># EXPLAIN analyze </span><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> test </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> id </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">ORDER BY</span><span style="color:#E1E4E8;"> random_text </span><span style="color:#F97583;">ASC</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                                                          QUERY PLAN                                                          </span></span>
<span class="line"><span style="color:#6A737D;">------------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> Sort  (cost</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">92</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">57</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">95</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">1011</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;">) (actual </span><span style="color:#F97583;">time=</span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">846</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">251</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;"> loops</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   Sort </span><span style="color:#F97583;">Key</span><span style="color:#E1E4E8;">: random_text</span></span>
<span class="line"><span style="color:#E1E4E8;">   Sort Method: quicksort  Memory: 112kB</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">Index</span><span style="color:#E1E4E8;"> Scan </span><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> test_pkey </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> test  (cost</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">42</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">42</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">1011</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;">) (actual </span><span style="color:#F97583;">time=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">027</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">474</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;"> loops</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">Index</span><span style="color:#E1E4E8;"> Cond: (id </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;"> Planning </span><span style="color:#F97583;">time</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">286</span><span style="color:#E1E4E8;"> ms</span></span>
<span class="line"><span style="color:#E1E4E8;"> Execution </span><span style="color:#F97583;">time</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">11</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">584</span><span style="color:#E1E4E8;"> ms</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">edbstore</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># EXPLAIN analyze </span><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> test </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> id </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">ORDER BY</span><span style="color:#E1E4E8;"> random_text </span><span style="color:#F97583;">ASC</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                                                            QUERY PLAN                                                            </span></span>
<span class="line"><span style="color:#6A737D;">----------------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> Sort  (cost</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1049</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">39</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">1074</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">68</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">10116</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;">) (actual </span><span style="color:#F97583;">time=</span><span style="color:#79B8FF;">144</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">963</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">160</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">943</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;"> loops</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   Sort </span><span style="color:#F97583;">Key</span><span style="color:#E1E4E8;">: random_text</span></span>
<span class="line"><span style="color:#E1E4E8;">   Sort Method: </span><span style="color:#F97583;">external</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">merge</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">Disk</span><span style="color:#E1E4E8;">: 448kB</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">Index</span><span style="color:#E1E4E8;"> Scan </span><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> test_pkey </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> test  (cost</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">42</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">376</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">45</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">10116</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;">) (actual </span><span style="color:#F97583;">time=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">063</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">22</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">225</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;"> loops</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">Index</span><span style="color:#E1E4E8;"> Cond: (id </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;"> Planning </span><span style="color:#F97583;">time</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">149</span><span style="color:#E1E4E8;"> ms</span></span>
<span class="line"><span style="color:#E1E4E8;"> Execution </span><span style="color:#F97583;">time</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">173</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">841</span><span style="color:#E1E4E8;"> ms</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">edbstore</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># EXPLAIN analyze </span><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> test </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> id </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100000</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">ORDER BY</span><span style="color:#E1E4E8;"> random_text </span><span style="color:#F97583;">ASC</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                                                              QUERY PLAN                                                              </span></span>
<span class="line"><span style="color:#6A737D;">--------------------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> Sort  (cost</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">17477</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">39</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">17727</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">70</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">100122</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;">) (actual </span><span style="color:#F97583;">time=</span><span style="color:#79B8FF;">1325</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">789</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">1706</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">516</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">100000</span><span style="color:#E1E4E8;"> loops</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   Sort </span><span style="color:#F97583;">Key</span><span style="color:#E1E4E8;">: random_text</span></span>
<span class="line"><span style="color:#E1E4E8;">   Sort Method: </span><span style="color:#F97583;">external</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">merge</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">Disk</span><span style="color:#E1E4E8;">: 4440kB</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">Index</span><span style="color:#E1E4E8;"> Scan </span><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> test_pkey </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> test  (cost</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">42</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">3680</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">56</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">100122</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;">) (actual </span><span style="color:#F97583;">time=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">088</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">214</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">490</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">100000</span><span style="color:#E1E4E8;"> loops</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">Index</span><span style="color:#E1E4E8;"> Cond: (id </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;"> Planning </span><span style="color:#F97583;">time</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">147</span><span style="color:#E1E4E8;"> ms</span></span>
<span class="line"><span style="color:#E1E4E8;"> Execution </span><span style="color:#F97583;">time</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1822</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">008</span><span style="color:#E1E4E8;"> ms</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">edbstore</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># EXPLAIN analyze </span><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> test </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> id </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000000</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">ORDER BY</span><span style="color:#E1E4E8;"> random_text </span><span style="color:#F97583;">ASC</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                                                       QUERY PLAN                                                       </span></span>
<span class="line"><span style="color:#6A737D;">------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> Sort  (cost</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">202426</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">34</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">204926</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">34</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">1000000</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;">) (actual </span><span style="color:#F97583;">time=</span><span style="color:#79B8FF;">8703</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">143</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">10160</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">421</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">1000000</span><span style="color:#E1E4E8;"> loops</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   Sort </span><span style="color:#F97583;">Key</span><span style="color:#E1E4E8;">: random_text</span></span>
<span class="line"><span style="color:#E1E4E8;">   Sort Method: </span><span style="color:#F97583;">external</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">merge</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">Disk</span><span style="color:#E1E4E8;">: 44504kB</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">  Seq Scan </span><span style="color:#F97583;">on</span><span style="color:#E1E4E8;"> test  (cost</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">00</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">20732</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">00</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">1000000</span><span style="color:#E1E4E8;"> width</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;">) (actual </span><span style="color:#F97583;">time=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">024</span><span style="color:#E1E4E8;">..</span><span style="color:#79B8FF;">1021</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">491</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows=</span><span style="color:#79B8FF;">1000000</span><span style="color:#E1E4E8;"> loops</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">Filter</span><span style="color:#E1E4E8;">: (id </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000000</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;"> Planning </span><span style="color:#F97583;">time</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">316</span><span style="color:#E1E4E8;"> ms</span></span>
<span class="line"><span style="color:#E1E4E8;"> Execution </span><span style="color:#F97583;">time</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10577</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">464</span><span style="color:#E1E4E8;"> ms</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">edbstore</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># show work_mem;</span></span>
<span class="line"><span style="color:#24292E;"> work_mem </span></span>
<span class="line"><span style="color:#6A737D;">----------</span></span>
<span class="line"><span style="color:#24292E;"> 1MB</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">row</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">edbstore</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># EXPLAIN analyze </span><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> test </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> id </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">ORDER BY</span><span style="color:#24292E;"> random_text </span><span style="color:#D73A49;">ASC</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                                                       QUERY PLAN                                                       </span></span>
<span class="line"><span style="color:#6A737D;">------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#24292E;"> Sort  (cost</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">73</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">75</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">) (actual </span><span style="color:#D73A49;">time=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">188</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">202</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> loops</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   Sort </span><span style="color:#D73A49;">Key</span><span style="color:#24292E;">: random_text</span></span>
<span class="line"><span style="color:#24292E;">   Sort Method: quicksort  Memory: 25kB</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">Index</span><span style="color:#24292E;"> Scan </span><span style="color:#D73A49;">using</span><span style="color:#24292E;"> test_pkey </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> test  (cost</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">58</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">) (actual </span><span style="color:#D73A49;">time=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">018</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">037</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> loops</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">Index</span><span style="color:#24292E;"> Cond: (id </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> Planning </span><span style="color:#D73A49;">time</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">435</span><span style="color:#24292E;"> ms</span></span>
<span class="line"><span style="color:#24292E;"> Execution </span><span style="color:#D73A49;">time</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">294</span><span style="color:#24292E;"> ms</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">edbstore</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># EXPLAIN analyze </span><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> test </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> id </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">ORDER BY</span><span style="color:#24292E;"> random_text </span><span style="color:#D73A49;">ASC</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                                                         QUERY PLAN                                                         </span></span>
<span class="line"><span style="color:#6A737D;">----------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#24292E;"> Sort  (cost</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">13</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">13</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">75</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">100</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">) (actual </span><span style="color:#D73A49;">time=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">870</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">027</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">100</span><span style="color:#24292E;"> loops</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   Sort </span><span style="color:#D73A49;">Key</span><span style="color:#24292E;">: random_text</span></span>
<span class="line"><span style="color:#24292E;">   Sort Method: quicksort  Memory: 34kB</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">Index</span><span style="color:#24292E;"> Scan </span><span style="color:#D73A49;">using</span><span style="color:#24292E;"> test_pkey </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> test  (cost</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">18</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">100</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">) (actual </span><span style="color:#D73A49;">time=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">022</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">218</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">100</span><span style="color:#24292E;"> loops</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">Index</span><span style="color:#24292E;"> Cond: (id </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> Planning </span><span style="color:#D73A49;">time</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">286</span><span style="color:#24292E;"> ms</span></span>
<span class="line"><span style="color:#24292E;"> Execution </span><span style="color:#D73A49;">time</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">248</span><span style="color:#24292E;"> ms</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">edbstore</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># EXPLAIN analyze </span><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> test </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> id </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">ORDER BY</span><span style="color:#24292E;"> random_text </span><span style="color:#D73A49;">ASC</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                                                          QUERY PLAN                                                          </span></span>
<span class="line"><span style="color:#6A737D;">------------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#24292E;"> Sort  (cost</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">92</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">57</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">95</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">1011</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">) (actual </span><span style="color:#D73A49;">time=</span><span style="color:#005CC5;">8</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">846</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">251</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;"> loops</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   Sort </span><span style="color:#D73A49;">Key</span><span style="color:#24292E;">: random_text</span></span>
<span class="line"><span style="color:#24292E;">   Sort Method: quicksort  Memory: 112kB</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">Index</span><span style="color:#24292E;"> Scan </span><span style="color:#D73A49;">using</span><span style="color:#24292E;"> test_pkey </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> test  (cost</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">12</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">1011</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">) (actual </span><span style="color:#D73A49;">time=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">027</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">474</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">1000</span><span style="color:#24292E;"> loops</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">Index</span><span style="color:#24292E;"> Cond: (id </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> Planning </span><span style="color:#D73A49;">time</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">286</span><span style="color:#24292E;"> ms</span></span>
<span class="line"><span style="color:#24292E;"> Execution </span><span style="color:#D73A49;">time</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">584</span><span style="color:#24292E;"> ms</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">edbstore</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># EXPLAIN analyze </span><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> test </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> id </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">ORDER BY</span><span style="color:#24292E;"> random_text </span><span style="color:#D73A49;">ASC</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                                                            QUERY PLAN                                                            </span></span>
<span class="line"><span style="color:#6A737D;">----------------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#24292E;"> Sort  (cost</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1049</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">39</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">1074</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">68</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">10116</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">) (actual </span><span style="color:#D73A49;">time=</span><span style="color:#005CC5;">144</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">963</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">160</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">943</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">10000</span><span style="color:#24292E;"> loops</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   Sort </span><span style="color:#D73A49;">Key</span><span style="color:#24292E;">: random_text</span></span>
<span class="line"><span style="color:#24292E;">   Sort Method: </span><span style="color:#D73A49;">external</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">merge</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">Disk</span><span style="color:#24292E;">: 448kB</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">Index</span><span style="color:#24292E;"> Scan </span><span style="color:#D73A49;">using</span><span style="color:#24292E;"> test_pkey </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> test  (cost</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">376</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">45</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">10116</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">) (actual </span><span style="color:#D73A49;">time=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">063</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">22</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">225</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">10000</span><span style="color:#24292E;"> loops</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">Index</span><span style="color:#24292E;"> Cond: (id </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> Planning </span><span style="color:#D73A49;">time</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">149</span><span style="color:#24292E;"> ms</span></span>
<span class="line"><span style="color:#24292E;"> Execution </span><span style="color:#D73A49;">time</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">173</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">841</span><span style="color:#24292E;"> ms</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">edbstore</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># EXPLAIN analyze </span><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> test </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> id </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100000</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">ORDER BY</span><span style="color:#24292E;"> random_text </span><span style="color:#D73A49;">ASC</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                                                              QUERY PLAN                                                              </span></span>
<span class="line"><span style="color:#6A737D;">--------------------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#24292E;"> Sort  (cost</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">17477</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">39</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">17727</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">70</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">100122</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">) (actual </span><span style="color:#D73A49;">time=</span><span style="color:#005CC5;">1325</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">789</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">1706</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">516</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">100000</span><span style="color:#24292E;"> loops</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   Sort </span><span style="color:#D73A49;">Key</span><span style="color:#24292E;">: random_text</span></span>
<span class="line"><span style="color:#24292E;">   Sort Method: </span><span style="color:#D73A49;">external</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">merge</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">Disk</span><span style="color:#24292E;">: 4440kB</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">Index</span><span style="color:#24292E;"> Scan </span><span style="color:#D73A49;">using</span><span style="color:#24292E;"> test_pkey </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> test  (cost</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">42</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">3680</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">56</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">100122</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">) (actual </span><span style="color:#D73A49;">time=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">088</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">214</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">490</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">100000</span><span style="color:#24292E;"> loops</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">Index</span><span style="color:#24292E;"> Cond: (id </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> Planning </span><span style="color:#D73A49;">time</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">147</span><span style="color:#24292E;"> ms</span></span>
<span class="line"><span style="color:#24292E;"> Execution </span><span style="color:#D73A49;">time</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1822</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">008</span><span style="color:#24292E;"> ms</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">edbstore</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># EXPLAIN analyze </span><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> test </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> id </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000000</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">ORDER BY</span><span style="color:#24292E;"> random_text </span><span style="color:#D73A49;">ASC</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                                                       QUERY PLAN                                                       </span></span>
<span class="line"><span style="color:#6A737D;">------------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#24292E;"> Sort  (cost</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">202426</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">34</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">204926</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">34</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">1000000</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">) (actual </span><span style="color:#D73A49;">time=</span><span style="color:#005CC5;">8703</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">143</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">10160</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">421</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">1000000</span><span style="color:#24292E;"> loops</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   Sort </span><span style="color:#D73A49;">Key</span><span style="color:#24292E;">: random_text</span></span>
<span class="line"><span style="color:#24292E;">   Sort Method: </span><span style="color:#D73A49;">external</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">merge</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">Disk</span><span style="color:#24292E;">: 44504kB</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">  Seq Scan </span><span style="color:#D73A49;">on</span><span style="color:#24292E;"> test  (cost</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">20732</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">00</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">1000000</span><span style="color:#24292E;"> width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">35</span><span style="color:#24292E;">) (actual </span><span style="color:#D73A49;">time=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">024</span><span style="color:#24292E;">..</span><span style="color:#005CC5;">1021</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">491</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows=</span><span style="color:#005CC5;">1000000</span><span style="color:#24292E;"> loops</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">Filter</span><span style="color:#24292E;">: (id </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000000</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;"> Planning </span><span style="color:#D73A49;">time</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">316</span><span style="color:#24292E;"> ms</span></span>
<span class="line"><span style="color:#24292E;"> Execution </span><span style="color:#D73A49;">time</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10577</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">464</span><span style="color:#24292E;"> ms</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows</span><span style="color:#24292E;">)</span></span></code></pre></div><table><thead><tr><th>row</th><th>Sort Method</th><th>Execution time</th></tr></thead><tbody><tr><td>10</td><td>quicksort Memory: 25kB</td><td>0.294 ms</td></tr><tr><td>100</td><td>Sort Method: quicksort Memory: 34kB</td><td>1.248 ms</td></tr><tr><td>1000</td><td>Sort Method: quicksort Memory: 112kB</td><td>11.584 ms</td></tr><tr><td>10000</td><td>Sort Method: external merge Disk: 448kB</td><td>173.841 ms</td></tr><tr><td>100000</td><td>Sort Method: external merge Disk: 4440kB</td><td>1822.008 ms</td></tr><tr><td>1000000</td><td>Sort Method: external merge Disk: 44504kB</td><td>10577.464 ms</td></tr></tbody></table><p>通过上图我们可以看到，当sort的数据大于一万条时，explain显示排序方法从 quicksort in memory, 到external merge disk method，说明此时的work_mem的大小不能满足我们在内存的sort和hash表的需求。此时我们将work_mem参数的值调大</p><div class="language-psql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">psql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">edbstore=# set work_mem=&quot;500MB&quot;;</span></span>
<span class="line"><span style="color:#e1e4e8;">SET</span></span>
<span class="line"><span style="color:#e1e4e8;">edbstore=# EXPLAIN analyze SELECT * FROM test WHERE id &lt;= 1000000 ORDER BY random_text ASC;</span></span>
<span class="line"><span style="color:#e1e4e8;">                                                      QUERY PLAN                                                       </span></span>
<span class="line"><span style="color:#e1e4e8;">-----------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#e1e4e8;"> Sort  (cost=120389.84..122889.84 rows=1000000 width=35) (actual time=6232.270..6884.121 rows=1000000 loops=1)</span></span>
<span class="line"><span style="color:#e1e4e8;">   Sort Key: random_text</span></span>
<span class="line"><span style="color:#e1e4e8;">   Sort Method: quicksort  Memory: 112847kB</span></span>
<span class="line"><span style="color:#e1e4e8;">   -&gt;  Seq Scan on test  (cost=0.00..20732.00 rows=1000000 width=35) (actual time=0.015..659.035 rows=1000000 loops=1)</span></span>
<span class="line"><span style="color:#e1e4e8;">         Filter: (id &lt;= 1000000)</span></span>
<span class="line"><span style="color:#e1e4e8;"> Planning time: 0.125 ms</span></span>
<span class="line"><span style="color:#e1e4e8;"> Execution time: 7302.621 ms</span></span>
<span class="line"><span style="color:#e1e4e8;">(7 rows)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">edbstore=# set work_mem=&quot;500MB&quot;;</span></span>
<span class="line"><span style="color:#24292e;">SET</span></span>
<span class="line"><span style="color:#24292e;">edbstore=# EXPLAIN analyze SELECT * FROM test WHERE id &lt;= 1000000 ORDER BY random_text ASC;</span></span>
<span class="line"><span style="color:#24292e;">                                                      QUERY PLAN                                                       </span></span>
<span class="line"><span style="color:#24292e;">-----------------------------------------------------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#24292e;"> Sort  (cost=120389.84..122889.84 rows=1000000 width=35) (actual time=6232.270..6884.121 rows=1000000 loops=1)</span></span>
<span class="line"><span style="color:#24292e;">   Sort Key: random_text</span></span>
<span class="line"><span style="color:#24292e;">   Sort Method: quicksort  Memory: 112847kB</span></span>
<span class="line"><span style="color:#24292e;">   -&gt;  Seq Scan on test  (cost=0.00..20732.00 rows=1000000 width=35) (actual time=0.015..659.035 rows=1000000 loops=1)</span></span>
<span class="line"><span style="color:#24292e;">         Filter: (id &lt;= 1000000)</span></span>
<span class="line"><span style="color:#24292e;"> Planning time: 0.125 ms</span></span>
<span class="line"><span style="color:#24292e;"> Execution time: 7302.621 ms</span></span>
<span class="line"><span style="color:#24292e;">(7 rows)</span></span></code></pre></div><table><thead><tr><th>row</th><th>Sort Method</th><th>Execution time</th></tr></thead><tbody><tr><td>1000000</td><td>quicksort Memory: 112847kB</td><td>6887.851 ms</td></tr></tbody></table><p>可以发现sort method从merg disk变成quicksort in memory。</p><h3 id="maintenance-work-mem" tabindex="-1">maintenance_work_mem <a class="header-anchor" href="#maintenance-work-mem" aria-label="Permalink to &quot;maintenance_work_mem&quot;">​</a></h3><p>​ maintenance_work_mem定义的内存主要影响vacuum,analyze,create index,reindex等操作，这些命令用到的频率不高，但是会消耗较多的资源，系统默认值通常为64MB，可以分配高一点的内存，让上述命令进行地快速一点。当系统内存为32G时，可以分配512MB-1024MB的内存</p><h3 id="effective-cache-size" tabindex="-1">effective_cache_size <a class="header-anchor" href="#effective-cache-size" aria-label="Permalink to &quot;effective_cache_size&quot;">​</a></h3><p>effective_cache_size是优化器假设查询可以使用的最大内存(包括PostgreSQL和系统缓存)，和shared_buffer内存无关，只是给优化器生产计划使用的一个假设值。该值建议设置为可用空闲内存的25%-50%，设置值大点，可以让优化器更倾向使用索引扫描而不是顺序扫描</p><h3 id="wal-buffers" tabindex="-1">wal_buffers <a class="header-anchor" href="#wal-buffers" aria-label="Permalink to &quot;wal_buffers&quot;">​</a></h3>`,136),e=[o];function t(c,r,y,E,i,d){return a(),n("div",null,e)}const C=s(p,[["render",t]]);export{g as __pageData,C as default};
