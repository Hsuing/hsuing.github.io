import{_ as t,o,c as i,R as e}from"./chunks/framework.zUbWieqp.js";const f=JSON.parse('{"title":"1.commit规范","description":"","frontmatter":{},"headers":[],"relativePath":"guide/go/git/2-git规范.md","filePath":"guide/go/git/2-git规范.md","lastUpdated":1729503684000}'),r={name:"guide/go/git/2-git规范.md"},s=e('<h1 id="_1-commit规范" tabindex="-1">1.commit规范 <a class="header-anchor" href="#_1-commit规范" aria-label="Permalink to &quot;1.commit规范&quot;">​</a></h1><p>代码提交规范和分支命名相关联，但比分支命名分的更加明细，大多数开源框架都采用angular.js指定的提交格式，类型包含：</p><ul><li><strong>「feat」</strong>: 新功能</li><li><strong>「fix」</strong>: 问题修复</li><li><strong>「docs」</strong>: 文档更新</li><li><strong>「style」</strong>: 代码风格修改，例如空格处理、格式化、添加分号等等</li><li><strong>「refactor」</strong>: 新功能和问题修复除外的，代码结构、逻辑调整</li><li><strong>「perf」</strong>: 性能优化</li><li><strong>「test」</strong>: 增加或修复测试用例</li><li><strong>「chore」</strong>: 像构建脚本、辅助工具、文档生成等工程相关代码提交</li></ul>',3),a=[s];function n(l,_,g,c,d,m){return o(),i("div",null,a)}const u=t(r,[["render",n]]);export{f as __pageData,u as default};
