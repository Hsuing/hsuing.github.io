import{_ as e,o as s,c as a,R as i}from"./chunks/framework.zUbWieqp.js";const _=JSON.parse('{"title":"1.什么是 Redis？","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Database/Redis/面试题/1-redis.md","filePath":"guide/Database/Redis/面试题/1-redis.md","lastUpdated":1744292209000}'),t={name:"guide/Database/Redis/面试题/1-redis.md"},d=i('<h1 id="_1-什么是-redis" tabindex="-1">1.什么是 Redis？ <a class="header-anchor" href="#_1-什么是-redis" aria-label="Permalink to &quot;1.什么是 Redis？&quot;">​</a></h1><p>官方介绍</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202503181547700.jpeg" alt="img"></p><p>Redis 是一种基于内存的数据库，对数据的读写操作都是在内存中完成，因此<strong>读写速度非常快</strong>，常用于<strong>缓存，消息队列、分布式锁等场景</strong>。</p><p>Redis 提供了多种数据类型来支持不同的业务场景，比如 String(字符串)、Hash(哈希)、 List (列表)、Set(集合)、Zset(有序集合)、Bitmaps（位图）、HyperLogLog（基数统计）、GEO（地理信息）、Stream（流），并且对数据类型的操作都是<strong>原子性</strong>的，因为执行命令由单线程负责的，不存在并发竞争的问题。</p><p>除此之外，Redis 还支持<strong>事务 、持久化、Lua 脚本、多种集群方案（主从复制模式、哨兵模式、切片机群模式）、发布/订阅模式，内存淘汰机制、过期删除机制</strong>等等。</p><h2 id="_1-2-redis-和-memcached-有什么区别" tabindex="-1">1.2 Redis 和 Memcached 有什么区别？ <a class="header-anchor" href="#_1-2-redis-和-memcached-有什么区别" aria-label="Permalink to &quot;1.2 Redis 和 Memcached 有什么区别？&quot;">​</a></h2><p>Redis 与 Memcached <strong>共同点</strong>：</p><ol><li>都是基于内存的数据库，一般都用来当做缓存使用。</li><li>都有过期策略。</li><li>两者的性能都非常高。</li></ol><p>Redis 与 Memcached <strong>区别</strong>：</p><ul><li>Redis 支持的数据类型更丰富（String、Hash、List、Set、ZSet），而 Memcached 只支持最简单的 key-value 数据类型；</li><li>Redis 支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用，而 Memcached 没有持久化功能，数据全部存在内存之中，Memcached 重启或者挂掉后，数据就没了；</li><li>Redis 原生支持集群模式，Memcached 没有原生的集群模式，需要依靠客户端来实现往集群中分片写入数据；</li><li>Redis 支持发布订阅模型、Lua 脚本、事务等功能，而 Memcached 不支持；</li></ul><h2 id="_1-3-为什么用-redis-作为-mysql-的缓存" tabindex="-1">1.3 为什么用 Redis 作为 MySQL 的缓存？ <a class="header-anchor" href="#_1-3-为什么用-redis-作为-mysql-的缓存" aria-label="Permalink to &quot;1.3 为什么用 Redis 作为 MySQL 的缓存？&quot;">​</a></h2><p>主要是因为 <strong>Redis 具备「高性能」和「高并发」两种特性</strong>。</p><p><em><strong>1、Redis 具备高性能</strong></em></p><p>假如用户第一次访问 MySQL 中的某些数据。这个过程会比较慢，因为是从硬盘上读取的。将该用户访问的数据缓存在 Redis 中，这样下一次再访问这些数据的时候就可以直接从缓存中获取了，操作 Redis 缓存就是直接操作内存，所以速度相当快。</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/20250410190324172.png" alt="image-20250410184008358"></p>',16),r=[d];function o(n,c,l,h,p,m){return s(),a("div",null,r)}const R=e(t,[["render",o]]);export{_ as __pageData,R as default};
