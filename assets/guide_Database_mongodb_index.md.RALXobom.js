import{_ as t,o as d,c as o,R as a}from"./chunks/framework.zUbWieqp.js";const p=JSON.parse('{"title":"一、MongoDB简介","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Database/mongodb/index.md","filePath":"guide/Database/mongodb/index.md","lastUpdated":1704853811000}'),r={name:"guide/Database/mongodb/index.md"},e=a('<ul><li>社区， <a href="https://mongoing.com/archives/75020" target="_blank" rel="noreferrer">https://mongoing.com/archives/75020</a></li></ul><p>官方文档：<a href="https://docs.mongodb.com/manual/mongo/" target="_blank" rel="noreferrer">https://docs.mongodb.com/manual/mongo/</a></p><p>中文社区：<a href="https://mongoing.com" target="_blank" rel="noreferrer">https://mongoing.com</a></p><p>官方中文文档：<a href="https://docs.mongoing.com" target="_blank" rel="noreferrer">https://docs.mongoing.com</a></p><p>中文文档：<a href="https://www.runoob.com/mongodb/mongodb-databases-documents-collections.html" target="_blank" rel="noreferrer">https://www.runoob.com/mongodb/mongodb-databases-documents-collections.html</a></p><h1 id="一、mongodb简介" tabindex="-1"><strong>一、MongoDB简介</strong> <a class="header-anchor" href="#一、mongodb简介" aria-label="Permalink to &quot;**一、MongoDB简介**&quot;">​</a></h1><ul><li>官方，<a href="https://docs.mongodb.com/manual/" target="_blank" rel="noreferrer">https://docs.mongodb.com/manual/</a></li></ul><p>MongoDB是一个文档数据库，旨在简化应用程序开发和扩展</p><h2 id="_1-什么是mongodb" tabindex="-1"><strong>1 什么是MongoDB</strong> <a class="header-anchor" href="#_1-什么是mongodb" aria-label="Permalink to &quot;**1 什么是MongoDB**&quot;">​</a></h2><p>MongoDB是一个基于分布式文件存储的数据库。由C++语言编写。旨在为WEB应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB是一个<code>介于关系数据库和非关系数据库之间的产品</code>，是非关系数据库当中功能最丰富，最像关系数据库的。它支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是它支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。</p><p>mongodb是个非关系型数据库，但操作跟关系型数据最类似。mysql是关系型数据库</p><p>mongodb是面向文档存储的非关系型数据库，数据以json的格式进行存储</p><p>mongodb可用来永久存储，也可用来缓存数据</p><p>mongodb提供副本集和分片集群功能，操作简单</p><h2 id="_2-什么是nosql" tabindex="-1"><strong>2 什么是NoSQL</strong> <a class="header-anchor" href="#_2-什么是nosql" aria-label="Permalink to &quot;**2 什么是NoSQL**&quot;">​</a></h2><p>NoSQL(NoSQL = Not Only SQL )，意即“不仅仅是SQL”，是一项全新的数据库革命性运动，早期就有人提出，发展至2009年趋势越发高涨。NoSQL的拥护者们提倡运用非关系型的数据存储，相对于铺天盖地的关系型数据库运用，这一概念无疑是一种全新的思维的注入。</p><h2 id="_3-nosql数据库的分类" tabindex="-1"><strong>3 NoSQL数据库的分类</strong> <a class="header-anchor" href="#_3-nosql数据库的分类" aria-label="Permalink to &quot;**3 NoSQL数据库的分类**&quot;">​</a></h2><h3 id="_3-1-键值-key-value-存储数据库" tabindex="-1"><strong>3.1 键值(Key-Value)存储数据库</strong> <a class="header-anchor" href="#_3-1-键值-key-value-存储数据库" aria-label="Permalink to &quot;**3.1 键值(Key-Value)存储数据库**&quot;">​</a></h3><p>这一类数据库主要会使用到一个哈希表，这个表中有一个特定的键和一个指针指向特定的数据。Key/value模型对于IT系统来说的优势在于简单、易部署。但是如果DBA只对部分值进行查询或更新的时候，Key/value就显得效率低下了。举例如：Tokyo Cabinet/Tyrant, <strong>Redis</strong>, Voldemort, Oracle BDB。</p><h3 id="_3-2-列存储数据库" tabindex="-1"><strong>3.2 列存储数据库</strong> <a class="header-anchor" href="#_3-2-列存储数据库" aria-label="Permalink to &quot;**3.2 列存储数据库**&quot;">​</a></h3><p>这部分数据库通常是用来应对分布式存储的海量数据。键仍然存在，但是它们的特点是指向了多个列。这些列是由列家族来安排的。如：Cassandra, <strong>HBase</strong>, Riak。</p><h3 id="_3-3-文档型数据库" tabindex="-1"><strong>3.3 文档型数据库</strong> <a class="header-anchor" href="#_3-3-文档型数据库" aria-label="Permalink to &quot;**3.3 文档型数据库**&quot;">​</a></h3><p>文档型数据库的灵感是来自于Lotus Notes办公软件的，而且它同第一种键值存储相类似。该类型的数据模型是版本化的文档，半结构化的文档以特定的格式存储，比如JSON。文档型数据库可 以看作是键值数据库的升级版，允许之间嵌套键值。而且文档型数据库比键值数据库的查询效率更高。如：CouchDB, <strong>MongoDb</strong>. 国内也有文档型数据库SequoiaDB，已经开源。</p><h3 id="_3-4-图形-graph-数据库" tabindex="-1"><strong>3.4 图形(Graph)数据库</strong> <a class="header-anchor" href="#_3-4-图形-graph-数据库" aria-label="Permalink to &quot;**3.4 图形(Graph)数据库**&quot;">​</a></h3><p>图形结构的数据库同其他行列以及刚性结构的SQL数据库不同，它是使用灵活的图形模型，并且能够扩展到多个服务器上。NoSQL数据库没有标准的查询语言(SQL)，因此进行数据库查询需要制定数据模型。许多NoSQL数据库都有REST式的数据接口或者查询API。如：Neo4J, InfoGrid, Infinite Graph</p><h1 id="二、mongodb与关系型数据库对比" tabindex="-1"><strong>二、MongoDB与关系型数据库对比</strong> <a class="header-anchor" href="#二、mongodb与关系型数据库对比" aria-label="Permalink to &quot;**二、MongoDB与关系型数据库对比**&quot;">​</a></h1><h2 id="_1-与关系型数据库术语对比" tabindex="-1"><strong>1 与关系型数据库术语对比</strong> <a class="header-anchor" href="#_1-与关系型数据库术语对比" aria-label="Permalink to &quot;**1 与关系型数据库术语对比**&quot;">​</a></h2><table><thead><tr><th>SQL术语</th><th>MongoDB术语</th><th>说明</th></tr></thead><tbody><tr><td>database</td><td>database</td><td>数据库</td></tr><tr><td>table</td><td>collection</td><td>表/集合</td></tr><tr><td>raw</td><td>document</td><td>行/文档</td></tr><tr><td>column</td><td>field</td><td>字段/域</td></tr><tr><td>index</td><td>index</td><td>索引</td></tr><tr><td>table joins</td><td></td><td>表链接，mongo不支持</td></tr><tr><td>primary</td><td>primary key</td><td>主键/mongo自动将_id字段设置成主键</td></tr></tbody></table><h2 id="_2-mongo数据库类型" tabindex="-1">2.mongo数据库类型 <a class="header-anchor" href="#_2-mongo数据库类型" aria-label="Permalink to &quot;2.mongo数据库类型&quot;">​</a></h2><p>据。</p><table><thead><tr><th>类型</th><th>编号</th><th>别名</th><th>说明</th></tr></thead><tbody><tr><td>Double</td><td>1</td><td>“double”</td><td></td></tr><tr><td>String</td><td>2</td><td>“string”</td><td></td></tr><tr><td>Object</td><td>3</td><td>“object”</td><td></td></tr><tr><td>Array</td><td>4</td><td>“array”</td><td></td></tr><tr><td>Binary data</td><td>5</td><td>“binData”</td><td></td></tr><tr><td>Undefined</td><td>6</td><td>“undefined”</td><td>Deprecated.</td></tr><tr><td>ObjectId</td><td>7</td><td>“objectId”</td><td></td></tr><tr><td>Boolean</td><td>8</td><td>“bool”</td><td></td></tr><tr><td>Date</td><td>9</td><td>“date”</td><td></td></tr><tr><td>Null</td><td>10</td><td>“null”</td><td></td></tr><tr><td>Regular Expression</td><td>11</td><td>“regex”</td><td></td></tr><tr><td>DBPointer</td><td>12</td><td>“dbPointer”</td><td>Deprecated.</td></tr><tr><td>JavaScript</td><td>13</td><td>“javascript”</td><td></td></tr><tr><td>Symbol</td><td>14</td><td>“symbol”</td><td>Deprecated.</td></tr><tr><td>JavaScript (with scope)</td><td>15</td><td>“javascriptWithScope”</td><td></td></tr><tr><td>32-bit integer</td><td>16</td><td>“int”</td><td></td></tr><tr><td>Timestamp</td><td>17</td><td>“timestamp”</td><td></td></tr><tr><td>64-bit integer</td><td>18</td><td>“long”</td><td></td></tr><tr><td>Decimal128</td><td>19</td><td>“decimal”</td><td>New in version 3.4.</td></tr><tr><td>Min key</td><td>-1</td><td>“minKey”</td><td></td></tr><tr><td>Max key</td><td>127</td><td>“maxKey”</td><td></td></tr></tbody></table>',32),n=[e];function s(l,i,h,g,m,c){return d(),o("div",null,n)}const u=t(r,[["render",s]]);export{p as __pageData,u as default};
