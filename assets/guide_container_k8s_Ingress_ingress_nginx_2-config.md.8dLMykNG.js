import{_ as s,o as n,c as a,R as p}from"./chunks/framework.zUbWieqp.js";const d=JSON.parse('{"title":"0. 资源规范","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/Ingress/ingress_nginx/2-config.md","filePath":"guide/container/k8s/Ingress/ingress_nginx/2-config.md","lastUpdated":1732373831000}'),l={name:"guide/container/k8s/Ingress/ingress_nginx/2-config.md"},o=p(`<p>官方文档,<a href="https://kubernetes.io/zh-cn/docs/concepts/services-networking/ingress/" target="_blank" rel="noreferrer">https://kubernetes.io/zh-cn/docs/concepts/services-networking/ingress/</a></p><h1 id="_0-资源规范" tabindex="-1">0. 资源规范 <a class="header-anchor" href="#_0-资源规范" aria-label="Permalink to &quot;0. 资源规范&quot;">​</a></h1><h2 id="_1-ingress资源规范" tabindex="-1">1. Ingress资源规范 <a class="header-anchor" href="#_1-ingress资源规范" aria-label="Permalink to &quot;1. Ingress资源规范&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">networking.k8s.io/v1</span><span style="color:#E1E4E8;">           </span><span style="color:#6A737D;"># 资源所属的API群组和版本</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Ingress</span><span style="color:#E1E4E8;">                              </span><span style="color:#6A737D;"># 资源类型标识</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:                                  </span><span style="color:#6A737D;"># 元数据  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span><span style="color:#E1E4E8;">                           </span><span style="color:#6A737D;"># 资源名称</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:                             </span><span style="color:#6A737D;"># 资源注解</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">nginx.ingress.kubernetes.io/rewrite-target</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">     </span><span style="color:#6A737D;"># URL重写</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">namespace</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span><span style="color:#E1E4E8;">                      </span><span style="color:#6A737D;"># 名称空间</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">ingressClassName</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span><span style="color:#E1E4E8;">               </span><span style="color:#6A737D;"># Ingress控制器类别</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">defaultBackend</span><span style="color:#E1E4E8;">:	</span><span style="color:#9ECBFF;">&lt;Object&gt;</span><span style="color:#E1E4E8;">               </span><span style="color:#6A737D;"># 默认资源后端</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">service</span><span style="color:#E1E4E8;">:        </span><span style="color:#9ECBFF;">&lt;Object&gt;</span><span style="color:#E1E4E8;">               </span><span style="color:#6A737D;"># resource 与 Service 是互斥的，只能二选一，关联后端的service对象</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt; -required-</span><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 后端service的名称</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">:	</span><span style="color:#9ECBFF;">&lt;Object&gt;</span><span style="color:#E1E4E8;">                       </span><span style="color:#6A737D;"># 后端service上的端口对象</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">name：	&lt;string&gt;</span><span style="color:#E1E4E8;">                  </span><span style="color:#6A737D;"># 端口名称</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">number</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;integer&gt;</span><span style="color:#E1E4E8;">                  </span><span style="color:#6A737D;"># 端口号</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">resource</span><span style="color:#E1E4E8;">:       </span><span style="color:#9ECBFF;">&lt;Object&gt;</span><span style="color:#E1E4E8;">               </span><span style="color:#6A737D;"># resource 与 Service 是互斥的，只能二选一，Resource的一种常见用法是将所有入站数据导向带有静态资产的对象存储后端</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">apiGroup</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span><span style="color:#E1E4E8;">                   </span><span style="color:#6A737D;"># API资源组</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt; -required-</span><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 资源类型标识 </span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt; -required-</span><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 资源的名称</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">rules</span><span style="color:#E1E4E8;">:   </span><span style="color:#9ECBFF;">&lt;[]Object&gt;</span><span style="color:#E1E4E8;">                      </span><span style="color:#6A737D;"># Ingress规则列表</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">host</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span><span style="color:#E1E4E8;">                         </span><span style="color:#6A737D;"># 虚拟主机的FQDN，支持*前缀通配，不支持IP，不支持指定端口</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">http</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;Object&gt;</span><span style="color:#E1E4E8;">                          </span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">paths</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;[]Object&gt; -required-</span><span style="color:#E1E4E8;">         </span><span style="color:#6A737D;"># 虚拟主机PATH定义的列表，有pathType和backend组成</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span><span style="color:#E1E4E8;">                     </span><span style="color:#6A737D;"># 流量匹配的HTTP PATH，必须以/开头</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">pathType</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt; -required-</span><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;"># 支持ImplementationSpecific、Exact、Prefix</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">backend</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;Object&gt; -required-</span><span style="color:#E1E4E8;">       </span><span style="color:#6A737D;"># 匹配流量要转发的目标后端</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">resource：	&lt;Object&gt;</span><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;"># resource 与 Service 是互斥的，只能二选一，Resource的一种常见用法是将所有入站数据导向带有静态资产的对象存储后端</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">apiGroup</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span><span style="color:#E1E4E8;">                   </span><span style="color:#6A737D;"># API资源组</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt; -required-</span><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 资源类型标识 </span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt; -required-</span><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 资源的名称</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">service</span><span style="color:#E1E4E8;">:                         </span><span style="color:#6A737D;"># resource 与 Service 是互斥的，只能二选一，关联后端的service对象</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt; -required-</span><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;"># 后端service的名称</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt; -required-</span><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;"># 后端service上的端口对象</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#9ECBFF;">name：&lt;string&gt;</span><span style="color:#E1E4E8;">               </span><span style="color:#6A737D;"># 端口名称</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">number</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;integer&gt;</span><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 端口号</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">tls：&lt;[]Object&gt;</span><span style="color:#E1E4E8;">                          </span><span style="color:#6A737D;"># TLS配置，用于指定上述rules中定义的那些主机需要工作在HTTPS模式下</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#9ECBFF;">hosts：&lt;[]string&gt;</span><span style="color:#E1E4E8;">                      </span><span style="color:#6A737D;"># 使用同一组证书的主机名称列表</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">secretName：	&lt;string&gt;</span><span style="color:#E1E4E8;">                  </span><span style="color:#6A737D;"># 保存数字证书和私钥信息的secret资源名称</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">networking.k8s.io/v1</span><span style="color:#24292E;">           </span><span style="color:#6A737D;"># 资源所属的API群组和版本</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Ingress</span><span style="color:#24292E;">                              </span><span style="color:#6A737D;"># 资源类型标识</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:                                  </span><span style="color:#6A737D;"># 元数据  </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span><span style="color:#24292E;">                           </span><span style="color:#6A737D;"># 资源名称</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:                             </span><span style="color:#6A737D;"># 资源注解</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">nginx.ingress.kubernetes.io/rewrite-target</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/</span><span style="color:#24292E;">     </span><span style="color:#6A737D;"># URL重写</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">namespace</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span><span style="color:#24292E;">                      </span><span style="color:#6A737D;"># 名称空间</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">ingressClassName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span><span style="color:#24292E;">               </span><span style="color:#6A737D;"># Ingress控制器类别</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">defaultBackend</span><span style="color:#24292E;">:	</span><span style="color:#032F62;">&lt;Object&gt;</span><span style="color:#24292E;">               </span><span style="color:#6A737D;"># 默认资源后端</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">service</span><span style="color:#24292E;">:        </span><span style="color:#032F62;">&lt;Object&gt;</span><span style="color:#24292E;">               </span><span style="color:#6A737D;"># resource 与 Service 是互斥的，只能二选一，关联后端的service对象</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt; -required-</span><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 后端service的名称</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">port</span><span style="color:#24292E;">:	</span><span style="color:#032F62;">&lt;Object&gt;</span><span style="color:#24292E;">                       </span><span style="color:#6A737D;"># 后端service上的端口对象</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">name：	&lt;string&gt;</span><span style="color:#24292E;">                  </span><span style="color:#6A737D;"># 端口名称</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">number</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;integer&gt;</span><span style="color:#24292E;">                  </span><span style="color:#6A737D;"># 端口号</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">resource</span><span style="color:#24292E;">:       </span><span style="color:#032F62;">&lt;Object&gt;</span><span style="color:#24292E;">               </span><span style="color:#6A737D;"># resource 与 Service 是互斥的，只能二选一，Resource的一种常见用法是将所有入站数据导向带有静态资产的对象存储后端</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">apiGroup</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span><span style="color:#24292E;">                   </span><span style="color:#6A737D;"># API资源组</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt; -required-</span><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 资源类型标识 </span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt; -required-</span><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 资源的名称</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">rules</span><span style="color:#24292E;">:   </span><span style="color:#032F62;">&lt;[]Object&gt;</span><span style="color:#24292E;">                      </span><span style="color:#6A737D;"># Ingress规则列表</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">host</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span><span style="color:#24292E;">                         </span><span style="color:#6A737D;"># 虚拟主机的FQDN，支持*前缀通配，不支持IP，不支持指定端口</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">http</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;Object&gt;</span><span style="color:#24292E;">                          </span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">paths</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;[]Object&gt; -required-</span><span style="color:#24292E;">         </span><span style="color:#6A737D;"># 虚拟主机PATH定义的列表，有pathType和backend组成</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span><span style="color:#24292E;">                     </span><span style="color:#6A737D;"># 流量匹配的HTTP PATH，必须以/开头</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">pathType</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt; -required-</span><span style="color:#24292E;">      </span><span style="color:#6A737D;"># 支持ImplementationSpecific、Exact、Prefix</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">backend</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;Object&gt; -required-</span><span style="color:#24292E;">       </span><span style="color:#6A737D;"># 匹配流量要转发的目标后端</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#032F62;">resource：	&lt;Object&gt;</span><span style="color:#24292E;">              </span><span style="color:#6A737D;"># resource 与 Service 是互斥的，只能二选一，Resource的一种常见用法是将所有入站数据导向带有静态资产的对象存储后端</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">apiGroup</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span><span style="color:#24292E;">                   </span><span style="color:#6A737D;"># API资源组</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt; -required-</span><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 资源类型标识 </span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt; -required-</span><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 资源的名称</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">service</span><span style="color:#24292E;">:                         </span><span style="color:#6A737D;"># resource 与 Service 是互斥的，只能二选一，关联后端的service对象</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt; -required-</span><span style="color:#24292E;">      </span><span style="color:#6A737D;"># 后端service的名称</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt; -required-</span><span style="color:#24292E;">      </span><span style="color:#6A737D;"># 后端service上的端口对象</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#032F62;">name：&lt;string&gt;</span><span style="color:#24292E;">               </span><span style="color:#6A737D;"># 端口名称</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">number</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;integer&gt;</span><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 端口号</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">tls：&lt;[]Object&gt;</span><span style="color:#24292E;">                          </span><span style="color:#6A737D;"># TLS配置，用于指定上述rules中定义的那些主机需要工作在HTTPS模式下</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">hosts：&lt;[]string&gt;</span><span style="color:#24292E;">                      </span><span style="color:#6A737D;"># 使用同一组证书的主机名称列表</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">secretName：	&lt;string&gt;</span><span style="color:#24292E;">                  </span><span style="color:#6A737D;"># 保存数字证书和私钥信息的secret资源名称</span></span></code></pre></div><h2 id="_2-ingress路径类型" tabindex="-1">2. Ingress路径类型 <a class="header-anchor" href="#_2-ingress路径类型" aria-label="Permalink to &quot;2. Ingress路径类型&quot;">​</a></h2><p>Ingress 中的每个路径都需要有对应的路径类型（Path Type）。未明确设置 pathType 的路径无法通过合法性检查。当前支持的路径类型有三种：</p><p>ImplementationSpecific：对于这种路径类型，匹配方法取决于 IngressClass。 具体实现可以将其作为单独的 pathType 处理或者与 Prefix 或 Exact 类型作相同处理。</p><p>Exact：精确匹配 URL 路径，且区分大小写。</p><p>Prefix：基于以 / 分隔的 URL 路径前缀匹配。匹配区分大小写，并且对路径中的元素逐个完成。 路径元素指的是由 / 分隔符分隔的路径中的标签列表。 如果每个 p 都是请求路径 p 的元素前缀，则请求与路径 p 匹配。</p><h2 id="_3-ingressclass资源" tabindex="-1">3. IngressClass资源 <a class="header-anchor" href="#_3-ingressclass资源" aria-label="Permalink to &quot;3. IngressClass资源&quot;">​</a></h2><p>Ingress 可以由不同的控制器实现，通常使用不同的配置。 每个 Ingress 应当指定一个类，也就是一个对 IngressClass 资源的引用。 IngressClass 资源包含额外的配置，其中包括应当实现该类的控制器名称。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">networking.k8s.io/v1</span><span style="color:#E1E4E8;">           </span><span style="color:#6A737D;"># 资源所属的API群组和版本</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">IngressClass</span><span style="color:#E1E4E8;">                         </span><span style="color:#6A737D;"># 资源类型标识</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">labels：	&lt;map[string]string&gt;</span><span style="color:#E1E4E8;">           </span><span style="color:#6A737D;"># 标签</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span><span style="color:#E1E4E8;">                           </span><span style="color:#6A737D;"># 资源名称</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:                             </span><span style="color:#6A737D;"># 资源注解</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">ingressclass.kubernetes.io/is-default-class</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;true&quot;</span><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 是否为默认</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">namespace</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span><span style="color:#E1E4E8;">                      </span><span style="color:#6A737D;"># 名称空间</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">controller</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span><span style="color:#E1E4E8;">                     </span><span style="color:#6A737D;"># 该类型所关联的ingress控制器</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">parameters</span><span style="color:#E1E4E8;">:  </span><span style="color:#9ECBFF;">&lt;Object&gt;</span><span style="color:#E1E4E8;">                    </span><span style="color:#6A737D;"># 控制器相关的参数，这些参数由引用的资源定义，可选字段 </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">apiGroup</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span><span style="color:#E1E4E8;">                     </span><span style="color:#6A737D;"># 引用目标资源所属的API群组</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt; -required-</span><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;"># 引用的资源类型</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt; -required-</span><span style="color:#E1E4E8;">              </span><span style="color:#6A737D;"># 引用的资源名称</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">namespace</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span><span style="color:#E1E4E8;">                    </span><span style="color:#6A737D;"># 引用资源的名称空间</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">scope</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span><span style="color:#E1E4E8;">                        </span><span style="color:#6A737D;"># 引用资源的作用域，可选参数Cluster、Namespace</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">networking.k8s.io/v1</span><span style="color:#24292E;">           </span><span style="color:#6A737D;"># 资源所属的API群组和版本</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">IngressClass</span><span style="color:#24292E;">                         </span><span style="color:#6A737D;"># 资源类型标识</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">labels：	&lt;map[string]string&gt;</span><span style="color:#24292E;">           </span><span style="color:#6A737D;"># 标签</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span><span style="color:#24292E;">                           </span><span style="color:#6A737D;"># 资源名称</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:                             </span><span style="color:#6A737D;"># 资源注解</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">ingressclass.kubernetes.io/is-default-class</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;true&quot;</span><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 是否为默认</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">namespace</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span><span style="color:#24292E;">                      </span><span style="color:#6A737D;"># 名称空间</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">controller</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span><span style="color:#24292E;">                     </span><span style="color:#6A737D;"># 该类型所关联的ingress控制器</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">parameters</span><span style="color:#24292E;">:  </span><span style="color:#032F62;">&lt;Object&gt;</span><span style="color:#24292E;">                    </span><span style="color:#6A737D;"># 控制器相关的参数，这些参数由引用的资源定义，可选字段 </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">apiGroup</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span><span style="color:#24292E;">                     </span><span style="color:#6A737D;"># 引用目标资源所属的API群组</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt; -required-</span><span style="color:#24292E;">              </span><span style="color:#6A737D;"># 引用的资源类型</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt; -required-</span><span style="color:#24292E;">              </span><span style="color:#6A737D;"># 引用的资源名称</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">namespace</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span><span style="color:#24292E;">                    </span><span style="color:#6A737D;"># 引用资源的名称空间</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">scope</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span><span style="color:#24292E;">                        </span><span style="color:#6A737D;"># 引用资源的作用域，可选参数Cluster、Namespace</span></span></code></pre></div><h1 id="_1-snippet" tabindex="-1">1. snippet <a class="header-anchor" href="#_1-snippet" aria-label="Permalink to &quot;1. snippet&quot;">​</a></h1><p>在ingress-nginx的configMap和ingress域名规则中，利用ConfigMap和Annotations进行自定义配置 snippet 并注入nginx.conf中。</p><ul><li>ConfigMap: 使用ConfigMap在NGINX中设置全局配置。</li><li>Annotations: 如果需要特定入口规则的特定配置，请使用此选项。</li></ul><h2 id="_1-1-annotations" tabindex="-1">1.1 annotations <a class="header-anchor" href="#_1-1-annotations" aria-label="Permalink to &quot;1.1 annotations&quot;">​</a></h2><p>**Annotations 用于配置特定的 Ingress Controller 行为。**以下是常见的 Nginx Ingress Controller Annotations：</p><h3 id="_1-流量管理" tabindex="-1">1.流量管理 <a class="header-anchor" href="#_1-流量管理" aria-label="Permalink to &quot;1.流量管理&quot;">​</a></h3><p>nginx.ingress.kubernetes.io/<strong>rewrite-target</strong>: 重写 URL 路径。</p><p>nginx.ingress.kubernetes.io/<strong>force-ssl-redirect:</strong> 将 HTTP 请求重定向到 HTTPS。</p><p>nginx.ingress.kubernetes.io/<strong>use-regex</strong>: 启用正则表达式匹配路径。</p><h3 id="_2-负载均衡" tabindex="-1">2.负载均衡 <a class="header-anchor" href="#_2-负载均衡" aria-label="Permalink to &quot;2.负载均衡&quot;">​</a></h3><p>nginx.ingress.kubernetes.io/<strong>affinity</strong>: 配置会话保持。</p><p><strong>值：cookie 表示基于 cookie 的会话保持。</strong></p><p>nginx.ingress.kubernetes.io/<strong>load-balance</strong>: 配置负载均衡策略。</p><p><strong>值：round_robin、least_conn、ip_hash。</strong></p><h3 id="_3-安全性" tabindex="-1">3.安全性 <a class="header-anchor" href="#_3-安全性" aria-label="Permalink to &quot;3.安全性&quot;">​</a></h3><p>nginx.ingress.kubernetes.io/<strong>auth-type:</strong> 配置基础认证。</p><p>nginx.ingress.kubernetes.io/<strong>whitelist-source-range</strong>: 允许的 IP 地址列表。</p><h3 id="_4-性能优化" tabindex="-1">4.性能优化 <a class="header-anchor" href="#_4-性能优化" aria-label="Permalink to &quot;4.性能优化&quot;">​</a></h3><p>nginx.ingress.kubernetes.io/<strong>proxy-read-timeout</strong> : 设置后端响应超时时间。</p><p>nginx.ingress.kubernetes.io/<strong>proxy-body-size</strong>: 限制请求体大小。</p><div class="danger custom-block"><p class="custom-block-title">❌ 注意</p><p>只对指定svc的lngress生效;</p><p>若是同时配置了Annotations和configmap，一般都是annotations生效,configmap不生效，因为annotations优先级比configmap高;</p><p>nginx.ingress.kubernetes.io/configuration-snippet （用于插入 location块代码段）;</p><p>nginx.ingress.kubernetes.io/server-snippet （用于插入 server 块中的代码段）;</p></div><h3 id="_5-实战" tabindex="-1">5.实战 <a class="header-anchor" href="#_5-实战" aria-label="Permalink to &quot;5.实战&quot;">​</a></h3><h5 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h5><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#kubectl edit  ingress ingress-domain</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">networking.k8s.io/v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Ingress</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">nginx.ingress.kubernetes.io/configuration-snippet</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#9ECBFF;">      ....指令片段.....</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">nginx.ingress.kubernetes.io/stream-snippet</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#9ECBFF;">      ....指令片段.....</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">nginx.ingress.kubernetes.io/server-snippet</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#9ECBFF;">      ....指令片段.....</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#kubectl edit  ingress ingress-domain</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">networking.k8s.io/v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Ingress</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">nginx.ingress.kubernetes.io/configuration-snippet</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#032F62;">      ....指令片段.....</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">nginx.ingress.kubernetes.io/stream-snippet</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#032F62;">      ....指令片段.....</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">nginx.ingress.kubernetes.io/server-snippet</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#032F62;">      ....指令片段.....</span></span></code></pre></div><h5 id="rewrite" tabindex="-1">rewrite <a class="header-anchor" href="#rewrite" aria-label="Permalink to &quot;rewrite&quot;">​</a></h5><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">networking.k8s.io/v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Ingress</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ingress-rewrite</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 这句话的是意思是将&quot;/api(/|$)(.*)&quot;改写为&quot;/.*&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 后端在调用时会直接将&quot;/api(/|$)&quot;的内容取消掉.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">nginx.ingress.kubernetes.io/rewrite-target</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/$2</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">rules</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">host</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">java.host.com</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">http</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">paths</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">backend</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">service</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">svc-apple</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">number</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">80</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 注意，这里用到了2个分组，小括号代表分组，共计2个小括号，</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 上面的注解中&quot;rewrite-target&quot;使用到第二个小括号的参数。</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/api(/|$)(.*)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">pathType</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ImplementationSpecific</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">networking.k8s.io/v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Ingress</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ingress-rewrite</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 这句话的是意思是将&quot;/api(/|$)(.*)&quot;改写为&quot;/.*&quot;,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 后端在调用时会直接将&quot;/api(/|$)&quot;的内容取消掉.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">nginx.ingress.kubernetes.io/rewrite-target</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/$2</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">rules</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">host</span><span style="color:#24292E;">: </span><span style="color:#032F62;">java.host.com</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">http</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">paths</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">backend</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">service</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">svc-apple</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">port</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">number</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">80</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 注意，这里用到了2个分组，小括号代表分组，共计2个小括号，</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 上面的注解中&quot;rewrite-target&quot;使用到第二个小括号的参数。</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/api(/|$)(.*)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">pathType</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ImplementationSpecific</span></span></code></pre></div><h5 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to &quot;案例&quot;">​</a></h5><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">nginx.ingress.kubernetes.io/configuration-snippet</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#9ECBFF;">      proxy_set_header X-FORWARDED-FOR $http_X_FORWARDED_FOR;</span></span>
<span class="line"><span style="color:#9ECBFF;">      server_tokens off; location /itwork/res/css { deny all;return 403;}      </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">nginx.ingress.kubernetes.io/stream-snippet</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#9ECBFF;">      server {</span></span>
<span class="line"><span style="color:#9ECBFF;">        listen 8000;</span></span>
<span class="line"><span style="color:#9ECBFF;">        proxy_pass 127.0.0.1:80;</span></span>
<span class="line"><span style="color:#9ECBFF;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">nginx.ingress.kubernetes.io/server-snippet</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#9ECBFF;">      add_header X-Frame-Options SAMEORIGIN;</span></span>
<span class="line"><span style="color:#9ECBFF;">      # set_header X-Frame-Options SAMEORIGIN;</span></span>
<span class="line"><span style="color:#9ECBFF;">      set $flag 0;</span></span>
<span class="line"><span style="color:#9ECBFF;">      set $childdomain &quot;&quot;;</span></span>
<span class="line"><span style="color:#9ECBFF;">      if ($http_user_agent ~* &quot;(Mobile)&quot; ){</span></span>
<span class="line"><span style="color:#9ECBFF;">        set $flag &quot;\${flag}1&quot;;</span></span>
<span class="line"><span style="color:#9ECBFF;">      }</span></span>
<span class="line"><span style="color:#9ECBFF;">      if ( $host ~* &quot;(.*).xxx.top&quot;) {</span></span>
<span class="line"><span style="color:#9ECBFF;">        set $childdomain $1;</span></span>
<span class="line"><span style="color:#9ECBFF;">        set $flag &quot;\${flag}2&quot;;</span></span>
<span class="line"><span style="color:#9ECBFF;">      }</span></span>
<span class="line"><span style="color:#9ECBFF;">      if ( $flag = &quot;012&quot;)</span></span>
<span class="line"><span style="color:#9ECBFF;">      {</span></span>
<span class="line"><span style="color:#9ECBFF;">        return 301 http://m.xxx.top/$1$request_uri ;</span></span>
<span class="line"><span style="color:#9ECBFF;">      }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">nginx.ingress.kubernetes.io/configuration-snippet</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#032F62;">      proxy_set_header X-FORWARDED-FOR $http_X_FORWARDED_FOR;</span></span>
<span class="line"><span style="color:#032F62;">      server_tokens off; location /itwork/res/css { deny all;return 403;}      </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">nginx.ingress.kubernetes.io/stream-snippet</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#032F62;">      server {</span></span>
<span class="line"><span style="color:#032F62;">        listen 8000;</span></span>
<span class="line"><span style="color:#032F62;">        proxy_pass 127.0.0.1:80;</span></span>
<span class="line"><span style="color:#032F62;">      }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">nginx.ingress.kubernetes.io/server-snippet</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#032F62;">      add_header X-Frame-Options SAMEORIGIN;</span></span>
<span class="line"><span style="color:#032F62;">      # set_header X-Frame-Options SAMEORIGIN;</span></span>
<span class="line"><span style="color:#032F62;">      set $flag 0;</span></span>
<span class="line"><span style="color:#032F62;">      set $childdomain &quot;&quot;;</span></span>
<span class="line"><span style="color:#032F62;">      if ($http_user_agent ~* &quot;(Mobile)&quot; ){</span></span>
<span class="line"><span style="color:#032F62;">        set $flag &quot;\${flag}1&quot;;</span></span>
<span class="line"><span style="color:#032F62;">      }</span></span>
<span class="line"><span style="color:#032F62;">      if ( $host ~* &quot;(.*).xxx.top&quot;) {</span></span>
<span class="line"><span style="color:#032F62;">        set $childdomain $1;</span></span>
<span class="line"><span style="color:#032F62;">        set $flag &quot;\${flag}2&quot;;</span></span>
<span class="line"><span style="color:#032F62;">      }</span></span>
<span class="line"><span style="color:#032F62;">      if ( $flag = &quot;012&quot;)</span></span>
<span class="line"><span style="color:#032F62;">      {</span></span>
<span class="line"><span style="color:#032F62;">        return 301 http://m.xxx.top/$1$request_uri ;</span></span>
<span class="line"><span style="color:#032F62;">      }</span></span></code></pre></div><h2 id="_1-2-configmap" tabindex="-1">1.2 configmap <a class="header-anchor" href="#_1-2-configmap" aria-label="Permalink to &quot;1.2 configmap&quot;">​</a></h2><p><code>nginx-ingress configmap 中的配置会是全局生效的</code></p><p>在Ingress-nginx中的ConfigMap进行配置全局生效的Nginx指令片段，其中主要位置的指令片段嵌入位置参数如下:</p><ul><li><code>main-snippet</code>: 将自定义配置添加到 nginx 配置的主要部分。</li><li><code>http-snippet</code>: 将自定义配置添加到 nginx 配置的 http 部分。</li><li><code>server-snippet</code>: 将自定义配置添加到 nginx 配置中的所有服务器。</li><li><code>location-snippet</code>: 将自定义配置添加到 nginx 配置中的所有位置。您不能使用它来添加代理到 Kubernetes pod 的新位置，因为该片段无法访问 Go 模板函数。如果要添加自定义位置，则必须提供自己的 nginx.tmpl</li></ul><h3 id="编辑" tabindex="-1">编辑 <a class="header-anchor" href="#编辑" aria-label="Permalink to &quot;编辑&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">edit</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cm</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">ingress-nginx-controller</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ingress-nginx</span></span>
<span class="line"><span style="color:#B392F0;">apiVersion:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#B392F0;">data:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">allow-snippet-annotations:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">main-snippet:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">.指令.</span><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">http-snippet:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">.指令.</span><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">server-snippet:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">.指令.</span><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">location-snippet:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">...</span><span style="color:#E1E4E8;">.指令.</span><span style="color:#79B8FF;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">edit</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cm</span><span style="color:#24292E;">  </span><span style="color:#032F62;">ingress-nginx-controller</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ingress-nginx</span></span>
<span class="line"><span style="color:#6F42C1;">apiVersion:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#6F42C1;">data:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">allow-snippet-annotations:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;true&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">main-snippet:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">.指令.</span><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">http-snippet:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">.指令.</span><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">server-snippet:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">.指令.</span><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">location-snippet:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">...</span><span style="color:#24292E;">.指令.</span><span style="color:#005CC5;">...</span></span></code></pre></div><h3 id="禁用ssl跳转" tabindex="-1">禁用ssl跳转 <a class="header-anchor" href="#禁用ssl跳转" aria-label="Permalink to &quot;禁用ssl跳转&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">全局禁用</span></span>
<span class="line"><span style="color:#85E89D;">ssl-redirect</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;false&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">全局禁用</span></span>
<span class="line"><span style="color:#22863A;">ssl-redirect</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;false&quot;</span></span></code></pre></div><h2 id="_1-3-metadata" tabindex="-1">1.3 metadata <a class="header-anchor" href="#_1-3-metadata" aria-label="Permalink to &quot;1.3 metadata&quot;">​</a></h2><p><strong>name：</strong> Ingress 资源的名称。</p><p><strong>annotations</strong>：用于配置特定 Ingress Controller 的行为。</p><p><strong>nginx.ingress.kubernetes.io/rewrite-target</strong>：路径重写功能。</p><h2 id="_1-4-spec" tabindex="-1">1.4 spec <a class="header-anchor" href="#_1-4-spec" aria-label="Permalink to &quot;1.4 spec&quot;">​</a></h2><p><strong>ingressClassName</strong>：指定使用哪个 Ingress Controller 处理此 Ingress 资源。</p><p><strong>rules</strong>：定义域名和路径的路由规则。</p><p><strong>host</strong>：指定域名</p><p><strong>http.paths</strong>：定义 URL 路径的路由规则。</p><p><strong>path</strong>：URL 路径（如 /app1）。</p><p><strong>pathType</strong>：</p><p><strong>Exact</strong>：精确匹配路径。</p><p><strong>Prefix</strong>：匹配以此路径为前缀的请求。</p><p><strong>ImplementationSpecific</strong>：由具体 Ingress Controller 决定匹配逻辑。</p><p><strong>backend</strong>：指定后端服务。</p><p><strong>service.name</strong>：目标服务名称。</p><p><strong>service.port.number</strong>：目标服务的端口号。</p><h2 id="_1-5-tls" tabindex="-1">1.5 tls <a class="header-anchor" href="#_1-5-tls" aria-label="Permalink to &quot;1.5 tls&quot;">​</a></h2><p><strong>hosts</strong>：启用 HTTPS 的域名列表。</p><p><strong>secretName</strong>：存储 TLS 证书和私钥的 Kubernetes Secret 名称。</p><h1 id="_2-custom-template" tabindex="-1">2. Custom template <a class="header-anchor" href="#_2-custom-template" aria-label="Permalink to &quot;2. Custom template&quot;">​</a></h1>`,69),e=[o];function t(r,c,E,y,i,g){return n(),a("div",null,e)}const u=s(l,[["render",t]]);export{d as __pageData,u as default};
