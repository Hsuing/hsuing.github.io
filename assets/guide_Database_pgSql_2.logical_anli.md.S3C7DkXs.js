import{_ as s,o as a,c as n,R as l}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"逻辑复制异常引发Pg_wal目录膨胀","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Database/pgSql/2.logical_anli.md","filePath":"guide/Database/pgSql/2.logical_anli.md","lastUpdated":1703063387000}'),p={name:"guide/Database/pgSql/2.logical_anli.md"},e=l(`<h1 id="逻辑复制异常引发pg-wal目录膨胀" tabindex="-1">逻辑复制异常引发Pg_wal目录膨胀 <a class="header-anchor" href="#逻辑复制异常引发pg-wal目录膨胀" aria-label="Permalink to &quot;逻辑复制异常引发Pg_wal目录膨胀&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">数据库版本: PostgreSQL 11.2</span></span>
<span class="line"><span style="color:#e1e4e8;">数据库大小: 大于1TB</span></span>
<span class="line"><span style="color:#e1e4e8;">操作系统: CentOS 7.4</span></span>
<span class="line"><span style="color:#e1e4e8;">硬件环境: HPE DL560 gen10 + 全闪存(3par 8440)</span></span>
<span class="line"><span style="color:#e1e4e8;">其它信息: 单实例，配置了逻辑复制</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">数据库版本: PostgreSQL 11.2</span></span>
<span class="line"><span style="color:#24292e;">数据库大小: 大于1TB</span></span>
<span class="line"><span style="color:#24292e;">操作系统: CentOS 7.4</span></span>
<span class="line"><span style="color:#24292e;">硬件环境: HPE DL560 gen10 + 全闪存(3par 8440)</span></span>
<span class="line"><span style="color:#24292e;">其它信息: 单实例，配置了逻辑复制</span></span></code></pre></div><p><code>pg_wal</code>目录下的wal文件为在线WAL日志，不能删除，删除后数据库大概率会故障</p><p>排查步骤如下:</p><p>1、首先排查数据库pg_log日志文件，没有发现有价值的信息。</p><p>2、查看数据库活动会话，排查是否有长事务和慢查询，没有发现长事务和慢查询。</p><p>3、查看数据库主机性能，CPU、内存使用率正常，数据库负载正常。</p><p>4、查看数据库归档情况，发现数据库归档正常</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">archive_mode = on		# enables archiving; off, on, or always</span></span>
<span class="line"><span style="color:#e1e4e8;">				# (change requires restart)</span></span>
<span class="line"><span style="color:#e1e4e8;">archive_command = &#39;cp --backup %p  /log/archive_log/%f&#39;		# command to use to archive a logfile segment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">archive_mode = on		# enables archiving; off, on, or always</span></span>
<span class="line"><span style="color:#24292e;">				# (change requires restart)</span></span>
<span class="line"><span style="color:#24292e;">archive_command = &#39;cp --backup %p  /log/archive_log/%f&#39;		# command to use to archive a logfile segment</span></span></code></pre></div><p>5、查看WAL相关参数设置，如下:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wal_keep_segments = 2048	# in logfile segments; 0 disables</span></span>
<span class="line"><span style="color:#e1e4e8;">checkpoint_timeout = 30min		# range 30s-1d</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wal_keep_segments = 2048	# in logfile segments; 0 disables</span></span>
<span class="line"><span style="color:#24292e;">checkpoint_timeout = 30min		# range 30s-1d</span></span></code></pre></div><p>查看：</p><p>select * pg_replication_slot;</p><h1 id="模拟wal目录膨胀" tabindex="-1">模拟WAL目录膨胀 <a class="header-anchor" href="#模拟wal目录膨胀" aria-label="Permalink to &quot;模拟WAL目录膨胀&quot;">​</a></h1><p>数据库版本为 PostgreSQL 13 Beta1，生产库版本为 PostgreSQL 11.2，尽管版本不同，但并不影响这个模拟测试。</p><p>思路如下: 1、部署一套逻辑复制环境，同时把源库的wal_keep_segments参数设置得足够低。</p><p>2、将目标库的订阅DISABLE。</p><p>3、对源库上的逻辑复制表进行压力测试，观察源库上<code>pg_wal</code>目录下的WAL文件是否会膨胀</p><p>环境规划，如下:</p><table><thead><tr><th style="text-align:center;">节点</th><th style="text-align:center;">数据库版本</th><th style="text-align:center;">IP</th><th>端口</th></tr></thead><tbody><tr><td style="text-align:center;">源库</td><td style="text-align:center;">PostgreSQL 13beta1</td><td style="text-align:center;">192.168.2.11</td><td>1922</td></tr><tr><td style="text-align:center;">目标库</td><td style="text-align:center;">PostgreSQL 13beta1</td><td style="text-align:center;">192.168.2.13</td><td>1924</td></tr></tbody></table><h2 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备" aria-label="Permalink to &quot;环境准备&quot;">​</a></h2><h3 id="源库创建测试表并插入测试数据" tabindex="-1">源库创建测试表并插入测试数据 <a class="header-anchor" href="#源库创建测试表并插入测试数据" aria-label="Permalink to &quot;源库创建测试表并插入测试数据&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mydb</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> user1 (userid int4, username </span><span style="color:#F97583;">character varying</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">),regtime </span><span style="color:#F97583;">timestamp without time zone</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">mydb</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> user1 (userid,username,regtime) </span><span style="color:#F97583;">SELECT</span><span style="color:#E1E4E8;"> n, </span><span style="color:#9ECBFF;">&#39;user&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> n, </span><span style="color:#F97583;">now</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">generate_series</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">10000000</span><span style="color:#E1E4E8;">) n;</span></span>
<span class="line"><span style="color:#F97583;">INSERT</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">mydb</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">ALTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> user1 </span><span style="color:#F97583;">ADD</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;">(userid);</span></span>
<span class="line"><span style="color:#F97583;">ALTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mydb</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> user1 (userid int4, username </span><span style="color:#D73A49;">character varying</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">),regtime </span><span style="color:#D73A49;">timestamp without time zone</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">mydb</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> user1 (userid,username,regtime) </span><span style="color:#D73A49;">SELECT</span><span style="color:#24292E;"> n, </span><span style="color:#032F62;">&#39;user&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> n, </span><span style="color:#D73A49;">now</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">generate_series</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">10000000</span><span style="color:#24292E;">) n;</span></span>
<span class="line"><span style="color:#D73A49;">INSERT</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">mydb</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">ALTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> user1 </span><span style="color:#D73A49;">ADD</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;">(userid);</span></span>
<span class="line"><span style="color:#D73A49;">ALTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span></span></code></pre></div><p>源库设置wal_keep_segments参数值为4</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mydb</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> show wal_keep_segments ;</span></span>
<span class="line"><span style="color:#E1E4E8;"> wal_keep_segments</span></span>
<span class="line"><span style="color:#6A737D;">-------------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">row</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mydb</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> show wal_keep_segments ;</span></span>
<span class="line"><span style="color:#24292E;"> wal_keep_segments</span></span>
<span class="line"><span style="color:#6A737D;">-------------------</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">row</span><span style="color:#24292E;">)</span></span></code></pre></div><p>查看<code>pg_wal</code>目录下的WAL文件数量</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[pg13@ydtf01 pg_wal]$ ls $PGDATA/pg_wal | wc -l</span></span>
<span class="line"><span style="color:#e1e4e8;">57</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[pg13@ydtf01 pg_wal]$ ls $PGDATA/pg_wal | wc -l</span></span>
<span class="line"><span style="color:#24292e;">57</span></span></code></pre></div><h3 id="目标库上创建表结构" tabindex="-1">目标库上创建表结构 <a class="header-anchor" href="#目标库上创建表结构" aria-label="Permalink to &quot;目标库上创建表结构&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">mydb</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> user1 (userid int4, username </span><span style="color:#F97583;">character varying</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">),regtime </span><span style="color:#F97583;">timestamp without time zone</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">mydb</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">ALTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> user1 </span><span style="color:#F97583;">ADD</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;">(userid);</span></span>
<span class="line"><span style="color:#F97583;">ALTER</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">mydb</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> user1 (userid int4, username </span><span style="color:#D73A49;">character varying</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">32</span><span style="color:#24292E;">),regtime </span><span style="color:#D73A49;">timestamp without time zone</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">mydb</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">ALTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> user1 </span><span style="color:#D73A49;">ADD</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;">(userid);</span></span>
<span class="line"><span style="color:#D73A49;">ALTER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span></span></code></pre></div><ul><li>源库上创建发布</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mydb=&gt; CREATE PUBLICATION pub_user1 FOR TABLE user1 ;</span></span>
<span class="line"><span style="color:#e1e4e8;">CREATE PUBLICATION</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mydb=&gt; CREATE PUBLICATION pub_user1 FOR TABLE user1 ;</span></span>
<span class="line"><span style="color:#24292e;">CREATE PUBLICATION</span></span></code></pre></div><ul><li>目标库上创建订阅</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">CREATE SUBSCRIPTION sub_user1 CONNECTION &#39;host=192.168.2.11 port=1922 dbname=mydb user=repuser&#39; PUBLICATION pub_user1;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">CREATE SUBSCRIPTION sub_user1 CONNECTION &#39;host=192.168.2.11 port=1922 dbname=mydb user=repuser&#39; PUBLICATION pub_user1;</span></span></code></pre></div><p>注意配置好源库的<code>pg_hba.conf</code>和<code>.pgpass</code>文件，否则创建订阅会报相关的连接不上错误，发现user1表数据已同步到目标库</p><h2 id="源库压力测试" tabindex="-1">源库压力测试 <a class="header-anchor" href="#源库压力测试" aria-label="Permalink to &quot;源库压力测试&quot;">​</a></h2><p>对源库进行压力测试，并将目标库的sub_user1订阅DISABLE掉，看看是否能模拟源库WAL膨胀。</p><p>源库查询逻辑复制槽 sub_user1 的初始状态</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">postgres</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*from</span><span style="color:#E1E4E8;"> pg_replication_slots </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> slot_name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;sub_user1&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">[ RECORD 1 ]</span><span style="color:#6A737D;">-------+-----------</span></span>
<span class="line"><span style="color:#E1E4E8;">slot_name           | sub_user1</span></span>
<span class="line"><span style="color:#E1E4E8;">plugin              | pgoutput</span></span>
<span class="line"><span style="color:#E1E4E8;">slot_type           | logical</span></span>
<span class="line"><span style="color:#E1E4E8;">datoid              | </span><span style="color:#79B8FF;">16386</span></span>
<span class="line"><span style="color:#F97583;">database</span><span style="color:#E1E4E8;">            | mydb</span></span>
<span class="line"><span style="color:#E1E4E8;">temporary           | f</span></span>
<span class="line"><span style="color:#E1E4E8;">active              | t</span></span>
<span class="line"><span style="color:#E1E4E8;">active_pid          | </span><span style="color:#79B8FF;">84420</span></span>
<span class="line"><span style="color:#E1E4E8;">xmin                |</span></span>
<span class="line"><span style="color:#E1E4E8;">catalog_xmin        | </span><span style="color:#79B8FF;">549020</span></span>
<span class="line"><span style="color:#E1E4E8;">restart_lsn         | </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">17E06270</span></span>
<span class="line"><span style="color:#E1E4E8;">confirmed_flush_lsn | </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">17E062A8</span></span>
<span class="line"><span style="color:#E1E4E8;">wal_status          | normal</span></span>
<span class="line"><span style="color:#E1E4E8;">min_safe_lsn        |</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">postgres</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*from</span><span style="color:#24292E;"> pg_replication_slots </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> slot_name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;sub_user1&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">[ RECORD 1 ]</span><span style="color:#6A737D;">-------+-----------</span></span>
<span class="line"><span style="color:#24292E;">slot_name           | sub_user1</span></span>
<span class="line"><span style="color:#24292E;">plugin              | pgoutput</span></span>
<span class="line"><span style="color:#24292E;">slot_type           | logical</span></span>
<span class="line"><span style="color:#24292E;">datoid              | </span><span style="color:#005CC5;">16386</span></span>
<span class="line"><span style="color:#D73A49;">database</span><span style="color:#24292E;">            | mydb</span></span>
<span class="line"><span style="color:#24292E;">temporary           | f</span></span>
<span class="line"><span style="color:#24292E;">active              | t</span></span>
<span class="line"><span style="color:#24292E;">active_pid          | </span><span style="color:#005CC5;">84420</span></span>
<span class="line"><span style="color:#24292E;">xmin                |</span></span>
<span class="line"><span style="color:#24292E;">catalog_xmin        | </span><span style="color:#005CC5;">549020</span></span>
<span class="line"><span style="color:#24292E;">restart_lsn         | </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">17E06270</span></span>
<span class="line"><span style="color:#24292E;">confirmed_flush_lsn | </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">17E062A8</span></span>
<span class="line"><span style="color:#24292E;">wal_status          | normal</span></span>
<span class="line"><span style="color:#24292E;">min_safe_lsn        |</span></span></code></pre></div><p>注意 active=t, active_pid=84420。</p><p>目标库上将 sub_user1 订阅DISABLE，如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mydb=# ALTER SUBSCRIPTION sub_user1 DISABLE;</span></span>
<span class="line"><span style="color:#e1e4e8;">ALTER SUBSCRIPTION</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mydb=# ALTER SUBSCRIPTION sub_user1 DISABLE;</span></span>
<span class="line"><span style="color:#24292e;">ALTER SUBSCRIPTION</span></span></code></pre></div><p>再次在源库上查询 pg_replication_slots 视图，验证下:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">postgres</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"># </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*from</span><span style="color:#E1E4E8;"> pg_replication_slots </span><span style="color:#F97583;">WHERE</span><span style="color:#E1E4E8;"> slot_name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;sub_user1&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">[ RECORD 1 ]</span><span style="color:#6A737D;">-------+-----------</span></span>
<span class="line"><span style="color:#E1E4E8;">slot_name           | sub_user1</span></span>
<span class="line"><span style="color:#E1E4E8;">plugin              | pgoutput</span></span>
<span class="line"><span style="color:#E1E4E8;">slot_type           | logical</span></span>
<span class="line"><span style="color:#E1E4E8;">datoid              | </span><span style="color:#79B8FF;">16386</span></span>
<span class="line"><span style="color:#F97583;">database</span><span style="color:#E1E4E8;">            | mydb</span></span>
<span class="line"><span style="color:#E1E4E8;">temporary           | f</span></span>
<span class="line"><span style="color:#E1E4E8;">active              | f</span></span>
<span class="line"><span style="color:#E1E4E8;">active_pid          |</span></span>
<span class="line"><span style="color:#E1E4E8;">xmin                |</span></span>
<span class="line"><span style="color:#E1E4E8;">catalog_xmin        | </span><span style="color:#79B8FF;">549020</span></span>
<span class="line"><span style="color:#E1E4E8;">restart_lsn         | </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">17E06270</span></span>
<span class="line"><span style="color:#E1E4E8;">confirmed_flush_lsn | </span><span style="color:#79B8FF;">1</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">17E062A8</span></span>
<span class="line"><span style="color:#E1E4E8;">wal_status          | normal</span></span>
<span class="line"><span style="color:#E1E4E8;">min_safe_lsn        |</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">postgres</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"># </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*from</span><span style="color:#24292E;"> pg_replication_slots </span><span style="color:#D73A49;">WHERE</span><span style="color:#24292E;"> slot_name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;sub_user1&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">[ RECORD 1 ]</span><span style="color:#6A737D;">-------+-----------</span></span>
<span class="line"><span style="color:#24292E;">slot_name           | sub_user1</span></span>
<span class="line"><span style="color:#24292E;">plugin              | pgoutput</span></span>
<span class="line"><span style="color:#24292E;">slot_type           | logical</span></span>
<span class="line"><span style="color:#24292E;">datoid              | </span><span style="color:#005CC5;">16386</span></span>
<span class="line"><span style="color:#D73A49;">database</span><span style="color:#24292E;">            | mydb</span></span>
<span class="line"><span style="color:#24292E;">temporary           | f</span></span>
<span class="line"><span style="color:#24292E;">active              | f</span></span>
<span class="line"><span style="color:#24292E;">active_pid          |</span></span>
<span class="line"><span style="color:#24292E;">xmin                |</span></span>
<span class="line"><span style="color:#24292E;">catalog_xmin        | </span><span style="color:#005CC5;">549020</span></span>
<span class="line"><span style="color:#24292E;">restart_lsn         | </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">17E06270</span></span>
<span class="line"><span style="color:#24292E;">confirmed_flush_lsn | </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">17E062A8</span></span>
<span class="line"><span style="color:#24292E;">wal_status          | normal</span></span>
<span class="line"><span style="color:#24292E;">min_safe_lsn        |</span></span></code></pre></div><p>此时active=f,active_pid为空。</p><p>在源库上编写 tran1.sql 脚本，如下:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">\\set v_id random(1,10000000)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">UPDATE user1 SET username=&#39;updated&#39;||:v_id  WHERE userid=:v_id</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">\\set v_id random(1,10000000)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">UPDATE user1 SET username=&#39;updated&#39;||:v_id  WHERE userid=:v_id</span></span></code></pre></div><p>执行<code>pgbench</code>压力测试前，查看<code>pg_wal</code>目录下的WAL文件数量，如下:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[pg13@ydtf01 pg_wal]$ ls $PGDATA/pg_wal | wc -l</span></span>
<span class="line"><span style="color:#e1e4e8;">57</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[pg13@ydtf01 pg_wal]$ ls $PGDATA/pg_wal | wc -l</span></span>
<span class="line"><span style="color:#24292e;">57</span></span></code></pre></div><p>在源库上进行 <code>pgbench</code> 压力测试，如下:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">pgbench -n -Mprepared -c 4 -j 2 -T 120 -U pguser mydb -f tran1.sql &gt; tran1.out 2&gt;&amp;1 &amp;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">pgbench -n -Mprepared -c 4 -j 2 -T 120 -U pguser mydb -f tran1.sql &gt; tran1.out 2&gt;&amp;1 &amp;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[pg13@ydtf01 ~]$ ls $PGDATA/pg_wal| wc -l</span></span>
<span class="line"><span style="color:#e1e4e8;">96</span></span>
<span class="line"><span style="color:#e1e4e8;">[pg13@ydtf01 ~]$ ls $PGDATA/pg_wal| wc -l</span></span>
<span class="line"><span style="color:#e1e4e8;">97</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[pg13@ydtf01 ~]$ ls $PGDATA/pg_wal| wc -l</span></span>
<span class="line"><span style="color:#24292e;">96</span></span>
<span class="line"><span style="color:#24292e;">[pg13@ydtf01 ~]$ ls $PGDATA/pg_wal| wc -l</span></span>
<span class="line"><span style="color:#24292e;">97</span></span></code></pre></div><p><code>pgbench</code>执行过程中WAL文件一直在增长，<code>pgbench</code>停止后WAL文件不再增长，可以预见当目标库的订阅DISABLE掉后，若不干预，主库上的WAL文件将会一直增长下去</p><h1 id="应对措施" tabindex="-1">应对措施 <a class="header-anchor" href="#应对措施" aria-label="Permalink to &quot;应对措施&quot;">​</a></h1><p>生产库上如果启用了逻辑复制或复制槽，需监控源库的复制槽运行状态，可监控源库的 <code>pg_replication_slots</code>视图，若出现active=f的复制槽需人工介入。</p><p>监控生产库上 <code>pg_wal</code>目录的WAL文件增长情况，若短时间内增长较快，需人工介入，进行原因分析。</p><p>监控生产库上的长事务和慢查询，通过查询<code>pg_stat_activity</code>视图获取。</p><p>最重要的一条: 任何时候不要删除$PGDATA/pg_wal目录下的WAL日志文件</p><h1 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h1><ul><li><a href="https://dataegret.com/2018/04/pg_wal-is-too-big-whats-going-on/" target="_blank" rel="noreferrer">pg_wal is too big… what’s going on?</a></li><li><a href="https://postgres.fun/20200622102400.html" target="_blank" rel="noreferrer">PostgreSQL 13: 逻辑复制支持分区表</a></li><li><a href="https://www.postgresql.org/docs/11/view-pg-replication-slots.html" target="_blank" rel="noreferrer">pg_replication_slots</a></li><li><a href="https://www.postgresql.org/docs/11/catalog-pg-subscription.html" target="_blank" rel="noreferrer">pg_subscription</a></li></ul>`,59),o=[e];function t(c,r,i,E,y,d){return a(),n("div",null,o)}const h=s(p,[["render",t]]);export{u as __pageData,h as default};
