import{_ as s,o as a,c as n,R as l}from"./chunks/framework.zUbWieqp.js";const F=JSON.parse('{"title":"1. clean old images","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/TroubleshootingMaintenanceManual/22-CronJob.md","filePath":"guide/container/k8s/TroubleshootingMaintenanceManual/22-CronJob.md","lastUpdated":1732269995000}'),p={name:"guide/container/k8s/TroubleshootingMaintenanceManual/22-CronJob.md"},o=l(`<h1 id="_1-clean-old-images" tabindex="-1">1. clean old images <a class="header-anchor" href="#_1-clean-old-images" aria-label="Permalink to &quot;1. clean old images&quot;">​</a></h1><h2 id="_1-1-非报警" tabindex="-1">1.1 非报警 <a class="header-anchor" href="#_1-1-非报警" aria-label="Permalink to &quot;1.1 非报警&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">batch/v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">CronJob</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">docker-image-cleanup</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">schedule</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;0 0 * * *&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">jobTemplate</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">docker-image-cleanup</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">docker</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">command</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            - </span><span style="color:#9ECBFF;">/bin/sh</span></span>
<span class="line"><span style="color:#E1E4E8;">            - </span><span style="color:#9ECBFF;">-c</span></span>
<span class="line"><span style="color:#E1E4E8;">            - </span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">              echo y | docker system prune --force --filter &quot;until=24h&quot; --volumes</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">volumeMounts</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">docker-socket</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">mountPath</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/var/run/docker.sock</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">volumes</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">docker-socket</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">hostPath</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/var/run/docker.sock</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">restartPolicy</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">OnFailure</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">batch/v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">CronJob</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">docker-image-cleanup</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">schedule</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;0 0 * * *&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">jobTemplate</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">template</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">docker-image-cleanup</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">docker</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">command</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            - </span><span style="color:#032F62;">/bin/sh</span></span>
<span class="line"><span style="color:#24292E;">            - </span><span style="color:#032F62;">-c</span></span>
<span class="line"><span style="color:#24292E;">            - </span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#032F62;">              echo y | docker system prune --force --filter &quot;until=24h&quot; --volumes</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">volumeMounts</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">docker-socket</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">mountPath</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/var/run/docker.sock</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">volumes</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">docker-socket</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">hostPath</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/var/run/docker.sock</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">restartPolicy</span><span style="color:#24292E;">: </span><span style="color:#032F62;">OnFailure</span></span></code></pre></div><ul><li>执行</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl apply -f docker-image-cleanup.yaml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl apply -f docker-image-cleanup.yaml</span></span></code></pre></div><h2 id="_1-2-tg报警" tabindex="-1">1.2 TG报警 <a class="header-anchor" href="#_1-2-tg报警" aria-label="Permalink to &quot;1.2 TG报警&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">batch/v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">CronJob</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">docker-image-cleanup</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">schedule</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;0 0 * * *&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">jobTemplate</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">docker-image-cleanup</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">docker</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">command</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            - </span><span style="color:#9ECBFF;">/bin/sh</span></span>
<span class="line"><span style="color:#E1E4E8;">            - </span><span style="color:#9ECBFF;">-c</span></span>
<span class="line"><span style="color:#E1E4E8;">            - </span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">              echo y | docker system prune --force --filter &quot;until=24h&quot; &amp;&amp; apk add curl &amp;&amp; curl -s -X POST https://api.telegram.org/bot&lt;TOKEN&gt;/sendMessage -d chat_id=&lt;your_channel_id&gt; -d text=&quot;☸️ k8s-services-stage: Docker cleanup complete %0AFree disk space: $(df -h | grep sda2 | awk &#39;{print $4}&#39; | head -c 6) %0AAvailable memory: $(free -h |grep Mem | awk &#39;{print $7}&#39;)&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">volumeMounts</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">docker-socket</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">mountPath</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/var/run/docker.sock</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">volumes</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">docker-socket</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">hostPath</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/var/run/docker.sock</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">restartPolicy</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">OnFailure</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">batch/v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">CronJob</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">docker-image-cleanup</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">schedule</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;0 0 * * *&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">jobTemplate</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">template</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">docker-image-cleanup</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">docker</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">command</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            - </span><span style="color:#032F62;">/bin/sh</span></span>
<span class="line"><span style="color:#24292E;">            - </span><span style="color:#032F62;">-c</span></span>
<span class="line"><span style="color:#24292E;">            - </span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#032F62;">              echo y | docker system prune --force --filter &quot;until=24h&quot; &amp;&amp; apk add curl &amp;&amp; curl -s -X POST https://api.telegram.org/bot&lt;TOKEN&gt;/sendMessage -d chat_id=&lt;your_channel_id&gt; -d text=&quot;☸️ k8s-services-stage: Docker cleanup complete %0AFree disk space: $(df -h | grep sda2 | awk &#39;{print $4}&#39; | head -c 6) %0AAvailable memory: $(free -h |grep Mem | awk &#39;{print $7}&#39;)&quot;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">volumeMounts</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">docker-socket</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">mountPath</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/var/run/docker.sock</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">volumes</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">docker-socket</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">hostPath</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/var/run/docker.sock</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">restartPolicy</span><span style="color:#24292E;">: </span><span style="color:#032F62;">OnFailure</span></span></code></pre></div><blockquote><p>执行替换chat_id和token</p></blockquote><ul><li>执行</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apply</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker-image-cleanup_alert_telegram.yaml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apply</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker-image-cleanup_alert_telegram.yaml</span></span></code></pre></div><h1 id="_2-clean-evicted-pods" tabindex="-1">2. clean Evicted Pods <a class="header-anchor" href="#_2-clean-evicted-pods" aria-label="Permalink to &quot;2. clean Evicted Pods&quot;">​</a></h1><ul><li>清理特定namespace</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">delete</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pods</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--field-selector</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;status.phase==Failed&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">namespac</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">delete</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pods</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--field-selector</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;status.phase==Failed&#39;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">namespac</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><ul><li>清理所有</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">delete</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pods</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--field-selector</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;status.phase==Failed&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--all-namespaces</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">delete</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pods</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--field-selector</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;status.phase==Failed&#39;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--all-namespaces</span></span></code></pre></div><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">batch/v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">CronJob</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">evicted-pod-cleanup</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">schedule</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;0 1 * * *&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">jobTemplate</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">cleanup-container</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">bitnami/kubectl</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">command</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;sh&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;-c&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;kubectl delete pods --all --field-selector &#39;status.phase==Failed&#39; --all-namespaces&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">restartPolicy</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">OnFailure</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">batch/v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">CronJob</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">evicted-pod-cleanup</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">schedule</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;0 1 * * *&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">jobTemplate</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">template</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">cleanup-container</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">bitnami/kubectl</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">command</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;sh&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;-c&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;kubectl delete pods --all --field-selector &#39;status.phase==Failed&#39; --all-namespaces&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">restartPolicy</span><span style="color:#24292E;">: </span><span style="color:#032F62;">OnFailure</span></span></code></pre></div>`,16),e=[o];function c(t,r,E,y,i,d){return a(),n("div",null,e)}const m=s(p,[["render",c]]);export{F as __pageData,m as default};
