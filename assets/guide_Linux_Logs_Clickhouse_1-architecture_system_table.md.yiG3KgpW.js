import{_ as t,o as d,c as e,R as s}from"./chunks/framework.zUbWieqp.js";const p=JSON.parse('{"title":"1.system","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/Logs/Clickhouse/1-architecture_system_table.md","filePath":"guide/Linux/Logs/Clickhouse/1-architecture_system_table.md","lastUpdated":1731579751000}'),r={name:"guide/Linux/Logs/Clickhouse/1-architecture_system_table.md"},o=s('<h1 id="_1-system" tabindex="-1">1.system <a class="header-anchor" href="#_1-system" aria-label="Permalink to &quot;1.system&quot;">​</a></h1><h2 id="_1-1-介绍" tabindex="-1">1.1 介绍 <a class="header-anchor" href="#_1-1-介绍" aria-label="Permalink to &quot;1.1 介绍&quot;">​</a></h2><p><strong>ClickHouse 自带两个库，分别是 default 和 system，default 是默认的数据库，我们创建表的时候如果不指定库名，那么默认会在 default 下创建。而 system 则是系统库</strong></p><h2 id="_1-2-特点" tabindex="-1">1.2 特点 <a class="header-anchor" href="#_1-2-特点" aria-label="Permalink to &quot;1.2 特点&quot;">​</a></h2><p>1.系统表在磁盘上没有数据或元数据的文件。服务器在启动时创建所有系统表</p><p>2.系统表是只读的</p><h2 id="_1-3-常见表" tabindex="-1">1.3 常见表 <a class="header-anchor" href="#_1-3-常见表" aria-label="Permalink to &quot;1.3 常见表&quot;">​</a></h2><p>在23.x版本下有90多个表</p><table><thead><tr><th>分类</th><th><strong>系统表名称</strong></th><th>描述</th></tr></thead><tbody><tr><td></td><td><code>system.tables</code></td><td>数据库中所有表的信息，包括名称、引擎、列信息等</td></tr><tr><td></td><td><code>system.databases</code></td><td>系统中所有数据库的信息，包括名称、创建时间等</td></tr><tr><td>权限</td><td><code>system.users</code></td><td>ck中的用户信息，包括用户名、密码、配置文件、配额、角色、网络名称、允许IP地址等</td></tr><tr><td>权限</td><td><code>system.grants</code></td><td>授予ClickHouse用户帐户的权限</td></tr><tr><td>权限</td><td>system.roles</td><td>包含有关已配置的 角色 信息.</td></tr><tr><td>权限</td><td>system.role_grants</td><td>含用户和角色的角色授予. 向该表添加项, 请使用GRANT role TO user</td></tr><tr><td>权限</td><td><code>system.enabled_roles</code></td><td>包含当前所有活动角色, 包括当前用户的当前角色和当前角色的已授予角色</td></tr><tr><td>权限</td><td><code>system.current_roles</code></td><td>包含当前用户的激活角色. SET ROLE 修改该表的内容</td></tr><tr><td>权限</td><td><code>system.quotas_usage</code></td><td>所有用户配额使用情况</td></tr><tr><td>权限</td><td><code>system.quotas</code></td><td>包含 quotas 信息.</td></tr><tr><td>权限</td><td><code>system.quota_limits</code></td><td>包含关于所有配额的所有间隔的最大值的信息. 任何行数或0行都可以对应一个配额</td></tr><tr><td></td><td><code>system.processes</code></td><td>当前系统中正在运行的ClickHouse进程的信息，包括进程ID、查询语句、运行时间等</td></tr><tr><td></td><td><code>system.errors</code></td><td>用于存储发生的错误信息</td></tr><tr><td></td><td><code>system.build_options</code></td><td>包括编译时的参数、版本等</td></tr><tr><td></td><td><code>system.settings</code></td><td>系统中所有设置项的信息，包括名称、值、描述等</td></tr><tr><td></td><td><code>system.replicas</code></td><td>集群中所有副本的信息，包括副本ID、状态、分片等</td></tr><tr><td></td><td><code>system.replication_queue</code></td><td>复制队列中待复制的日志信息，用于数据复制和同步</td></tr><tr><td></td><td><code>system.disks</code></td><td>用于存储磁盘信息</td></tr><tr><td></td><td><code>system.user_directories</code></td><td>用于存储用户目录信息</td></tr><tr><td></td><td>system.columns</td><td>数据库中所有表的列信息，包括名称、数据类型、默认值等</td></tr><tr><td></td><td>system.dictionaries</td><td>定义的字典的详细信息，包括字典的名称、来源、类型、键和属性列、内存使用情况以及生存时间</td></tr><tr><td></td><td>system.table_engines</td><td>存储表引擎的信息</td></tr><tr><td></td><td>system.parts</td><td>表的分区信息，包括分区ID、大小、数据版本等</td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td>system.query_views_log</td><td>用于记录与视图相关的查询信息</td></tr><tr><td></td><td>system.functions</td><td>系统中定义的所有函数的信息，包括名称、参数信息、返回类型等</td></tr><tr><td></td><td>system.table_functions</td><td>用于存储表函数（Table Function）的信息</td></tr><tr><td></td><td>system.data_type_families</td><td>用于存储ClickHouse支持的数据类型族的信息</td></tr><tr><td></td><td>system.numbers</td><td>可以生成连续的数字序列，用于各种目的，如填充数据、生成日期范围或进行数字计算</td></tr><tr><td></td><td>system.mutations</td><td>数据表中进行的变更操作的信息，包括变更ID、表名、状态等。</td></tr><tr><td>系统日志</td><td><code>system.query_log</code></td><td>用于记录查询信息,可以分析占用sql资源大的语句</td></tr><tr><td>系统日志</td><td><code>system.processes</code></td><td>查看连接服务进程</td></tr><tr><td>系统日志</td><td><code>system.part_log</code></td><td></td></tr></tbody></table><p><a href="https://www.cnblogs.com/MrYang-11-GetKnow/p/16443887.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/MrYang-11-GetKnow/p/16443887.html</a></p><p><a href="https://github.com/tencentyun/qcloud-documents/blob/master/product/%E5%A4%A7%E6%95%B0%E6%8D%AE%E4%B8%8EAI/%E5%BC%B9%E6%80%A7MapReduce/EMR%20%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/ClickHouse%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/ClickHouse%E8%BF%90%E7%BB%B4/%E7%B3%BB%E7%BB%9F%E8%A1%A8%E8%AF%B4%E6%98%8E.md" target="_blank" rel="noreferrer">https://github.com/tencentyun/qcloud-documents/blob/master/product/大数据与AI/弹性MapReduce/EMR 开发教程/ClickHouse开发指南/ClickHouse运维/系统表说明.md</a></p><p><a href="https://blog.csdn.net/chuige2013/article/details/141537131?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;spm=1018.2226.3001.4187" target="_blank" rel="noreferrer">https://blog.csdn.net/chuige2013/article/details/141537131?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;spm=1018.2226.3001.4187</a></p>',12),a=[o];function c(i,l,m,n,u,_){return d(),e("div",null,a)}const y=t(r,[["render",c]]);export{p as __pageData,y as default};
