import{_ as s,o as a,c as n,R as l}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"1. Helm 概念","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/Helm/3-Helm-chart.md","filePath":"guide/container/k8s/Helm/3-Helm-chart.md","lastUpdated":1737367865000}'),p={name:"guide/container/k8s/Helm/3-Helm-chart.md"},o=l(`<h1 id="_1-helm-概念" tabindex="-1">1. Helm 概念 <a class="header-anchor" href="#_1-helm-概念" aria-label="Permalink to &quot;1. Helm 概念&quot;">​</a></h1><p>Helm 中几个个非常重要的概念：</p><ul><li><code>Repository</code></li><li><code>Chart</code></li><li><code>Release</code></li><li><code>Value</code></li><li><code>Template</code></li><li><code>Namespace</code></li></ul><h2 id="_1-1-repository" tabindex="-1">1.1 Repository <a class="header-anchor" href="#_1-1-repository" aria-label="Permalink to &quot;1.1 Repository&quot;">​</a></h2><p>存放安装包的仓库，可以使用 <code>helm env</code> 查看</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@kube-master </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]# helm env</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_BIN</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;helm&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_BURST_LIMIT</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;100&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_CACHE_HOME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;/root/.cache/helm&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_CONFIG_HOME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;/root/.config/helm&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_DATA_HOME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;/root/.local/share/helm&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_DEBUG</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;false&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_KUBEAPISERVER</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_KUBEASGROUPS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_KUBEASUSER</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_KUBECAFILE</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_KUBECONTEXT</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_KUBEINSECURE_SKIP_TLS_VERIFY</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;false&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_KUBETLS_SERVER_NAME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_KUBETOKEN</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_MAX_HISTORY</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;10&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_NAMESPACE</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;default&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_PLUGINS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;/root/.local/share/helm/plugins&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_QPS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;0.00&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_REGISTRY_CONFIG</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;/root/.config/helm/registry/config.json&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_REPOSITORY_CACHE</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;/root/.cache/helm/repository&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">HELM_REPOSITORY_CONFIG</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;/root/.config/helm/repositories.yaml&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@kube-master </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]# helm env</span></span>
<span class="line"><span style="color:#24292E;">HELM_BIN</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;helm&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_BURST_LIMIT</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;100&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_CACHE_HOME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;/root/.cache/helm&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_CONFIG_HOME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;/root/.config/helm&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_DATA_HOME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;/root/.local/share/helm&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_DEBUG</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;false&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_KUBEAPISERVER</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_KUBEASGROUPS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_KUBEASUSER</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_KUBECAFILE</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_KUBECONTEXT</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_KUBEINSECURE_SKIP_TLS_VERIFY</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;false&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_KUBETLS_SERVER_NAME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_KUBETOKEN</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_MAX_HISTORY</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;10&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_NAMESPACE</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;default&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_PLUGINS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;/root/.local/share/helm/plugins&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_QPS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;0.00&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_REGISTRY_CONFIG</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;/root/.config/helm/registry/config.json&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_REPOSITORY_CACHE</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;/root/.cache/helm/repository&quot;</span></span>
<span class="line"><span style="color:#24292E;">HELM_REPOSITORY_CONFIG</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;/root/.config/helm/repositories.yaml&quot;</span></span></code></pre></div><h2 id="_1-2-chart" tabindex="-1">1.2 Chart <a class="header-anchor" href="#_1-2-chart" aria-label="Permalink to &quot;1.2 Chart&quot;">​</a></h2><p>Helm 的应用包，采用tgz格式。类似于 Yum 的 RPM 包，其包含了一组定义 Kubernetes 资源相关的 YAML 文件，也称为应用 <code>Chart</code></p><h2 id="_1-3-release" tabindex="-1">1.3 Release <a class="header-anchor" href="#_1-3-release" aria-label="Permalink to &quot;1.3 Release&quot;">​</a></h2><p><code>Release</code> 就是安装到 Kubernetes 中的 Chart 实例，每个 Chart 可以在集群中安装多次，每安装一次，就会产生一个 Release</p><h2 id="_1-4-value" tabindex="-1">1.4 Value <a class="header-anchor" href="#_1-4-value" aria-label="Permalink to &quot;1.4 Value&quot;">​</a></h2><p>Helm Chart的参数，用于配置Kubernetes对象</p><h2 id="_1-5-template" tabindex="-1">1.5 Template <a class="header-anchor" href="#_1-5-template" aria-label="Permalink to &quot;1.5 Template&quot;">​</a></h2><p>使用Go模板语言生成Kubernetes对象的定义文件</p><h2 id="_1-6-namespace" tabindex="-1">1.6 Namespace <a class="header-anchor" href="#_1-6-namespace" aria-label="Permalink to &quot;1.6 Namespace&quot;">​</a></h2><p>Kubernetes中用于隔离资源的逻辑分区</p><h2 id="_1-4-部署流程" tabindex="-1">1.4 部署流程 <a class="header-anchor" href="#_1-4-部署流程" aria-label="Permalink to &quot;1.4 部署流程&quot;">​</a></h2><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407081823798.png" alt="image-20240708182327275"></p><ol><li>开发者首先创建并编辑chart的配置；</li><li>接着打包并发布至Helm的仓库（Repository）；</li><li>当管理员使用helm命令安装时，相关的依赖会从仓库下载；</li><li>接着helm会根据下载的配置部署资源至k8s；</li></ol><h1 id="_2-helm语法" tabindex="-1">2. Helm语法 <a class="header-anchor" href="#_2-helm语法" aria-label="Permalink to &quot;2. Helm语法&quot;">​</a></h1><p><a href="https://helm.sh/zh/docs/" target="_blank" rel="noreferrer">Helm官当</a></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407091407804.png" alt="image-20240709140654762"></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407091407251.png" alt="image-20240709140753862"></p><h2 id="_2-0-与2相比变化点" tabindex="-1">2.0 与2相比变化点 <a class="header-anchor" href="#_2-0-与2相比变化点" aria-label="Permalink to &quot;2.0 与2相比变化点&quot;">​</a></h2><p>1.HelmCLI个别名字更名</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">delete</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">更名为</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">uninstall</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">inspect</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">更名为</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">show</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">fetch</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">更名为</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">helm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">delete</span><span style="color:#24292E;">  </span><span style="color:#032F62;">更名为</span><span style="color:#24292E;"> </span><span style="color:#032F62;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">uninstall</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">inspect</span><span style="color:#24292E;"> </span><span style="color:#032F62;">更名为</span><span style="color:#24292E;"> </span><span style="color:#032F62;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">show</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">fetch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">更名为</span><span style="color:#24292E;"> </span><span style="color:#032F62;">helm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span></span></code></pre></div><p>2.移除了用于本地临时搭建Chart Repository的helm serve命令</p><p>3.自动创建名称空间</p><p>在不存在的命名空间中创建发行版时，Helm2创建了命名空间。Helm3遵循其他Kubernetes对象的行为，如果命名空间不存在则返回错误.</p><p>4.不再需要requirements.yaml，依赖关系是直接在chart.yaml中定义.</p><h2 id="_2-1-模版注释" tabindex="-1">2.1 模版注释 <a class="header-anchor" href="#_2-1-模版注释" aria-label="Permalink to &quot;2.1 模版注释&quot;">​</a></h2><h3 id="chart-yaml" tabindex="-1">Chart.yaml <a class="header-anchor" href="#chart-yaml" aria-label="Permalink to &quot;Chart.yaml&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">chart API 版本 （必需）</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">#必须有</span></span>
<span class="line"><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">chart名称 （必需）</span><span style="color:#E1E4E8;">     </span><span style="color:#6A737D;"># 必须有 </span></span>
<span class="line"><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">语义化2 版本（必需）</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 必须有</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">kubeVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">兼容Kubernetes版本的语义化版本（可选）</span></span>
<span class="line"><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">一句话对这个项目的描述（可选）</span></span>
<span class="line"><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">chart类型 （可选）</span></span>
<span class="line"><span style="color:#85E89D;">keywords</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#9ECBFF;">关于项目的一组关键字（可选）</span></span>
<span class="line"><span style="color:#85E89D;">home</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">项目home页面的URL （可选）</span></span>
<span class="line"><span style="color:#85E89D;">sources</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#9ECBFF;">项目源码的URL列表（可选）</span></span>
<span class="line"><span style="color:#85E89D;">dependencies</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;"># chart 必要条件列表 （可选）</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">chart名称 (nginx)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">chart版本 (&quot;1.2.3&quot;)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">repository</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">（可选）仓库URL (&quot;https://example.com/charts&quot;) 或别名 (&quot;@repo-name&quot;)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">condition</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">（可选） 解析为布尔值的yaml路径，用于启用/禁用chart (e.g. subchart1.enabled )</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">tags</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;"># （可选）</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#9ECBFF;">用于一次启用/禁用 一组chart的tag</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">import-values</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;"># （可选）</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#9ECBFF;">ImportValue 保存源值到导入父键的映射。每项可以是字符串或者一对子/父列表项</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">alias</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">（可选） chart中使用的别名。当你要多次添加相同的chart时会很有用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">maintainers</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;"># （可选） # 可能用到</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">维护者名字 （每个维护者都需要）</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">email</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">维护者邮箱 （每个维护者可选）</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">url</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">维护者URL （每个维护者可选）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">icon</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">用做icon的SVG或PNG图片URL （可选）</span></span>
<span class="line"><span style="color:#85E89D;">appVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">包含的应用版本（可选）。不需要是语义化，建议使用引号</span></span>
<span class="line"><span style="color:#85E89D;">deprecated</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">不被推荐的chart （可选，布尔值）</span></span>
<span class="line"><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">example</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">按名称输入的批注列表 （可选）.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">chart API 版本 （必需）</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">#必须有</span></span>
<span class="line"><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">chart名称 （必需）</span><span style="color:#24292E;">     </span><span style="color:#6A737D;"># 必须有 </span></span>
<span class="line"><span style="color:#22863A;">version</span><span style="color:#24292E;">: </span><span style="color:#032F62;">语义化2 版本（必需）</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 必须有</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">kubeVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">兼容Kubernetes版本的语义化版本（可选）</span></span>
<span class="line"><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">一句话对这个项目的描述（可选）</span></span>
<span class="line"><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">chart类型 （可选）</span></span>
<span class="line"><span style="color:#22863A;">keywords</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">关于项目的一组关键字（可选）</span></span>
<span class="line"><span style="color:#22863A;">home</span><span style="color:#24292E;">: </span><span style="color:#032F62;">项目home页面的URL （可选）</span></span>
<span class="line"><span style="color:#22863A;">sources</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">项目源码的URL列表（可选）</span></span>
<span class="line"><span style="color:#22863A;">dependencies</span><span style="color:#24292E;">: </span><span style="color:#6A737D;"># chart 必要条件列表 （可选）</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">chart名称 (nginx)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">version</span><span style="color:#24292E;">: </span><span style="color:#032F62;">chart版本 (&quot;1.2.3&quot;)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">repository</span><span style="color:#24292E;">: </span><span style="color:#032F62;">（可选）仓库URL (&quot;https://example.com/charts&quot;) 或别名 (&quot;@repo-name&quot;)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">condition</span><span style="color:#24292E;">: </span><span style="color:#032F62;">（可选） 解析为布尔值的yaml路径，用于启用/禁用chart (e.g. subchart1.enabled )</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">tags</span><span style="color:#24292E;">: </span><span style="color:#6A737D;"># （可选）</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#032F62;">用于一次启用/禁用 一组chart的tag</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">import-values</span><span style="color:#24292E;">: </span><span style="color:#6A737D;"># （可选）</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#032F62;">ImportValue 保存源值到导入父键的映射。每项可以是字符串或者一对子/父列表项</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">alias</span><span style="color:#24292E;">: </span><span style="color:#032F62;">（可选） chart中使用的别名。当你要多次添加相同的chart时会很有用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">maintainers</span><span style="color:#24292E;">: </span><span style="color:#6A737D;"># （可选） # 可能用到</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">维护者名字 （每个维护者都需要）</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">email</span><span style="color:#24292E;">: </span><span style="color:#032F62;">维护者邮箱 （每个维护者可选）</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">url</span><span style="color:#24292E;">: </span><span style="color:#032F62;">维护者URL （每个维护者可选）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">icon</span><span style="color:#24292E;">: </span><span style="color:#032F62;">用做icon的SVG或PNG图片URL （可选）</span></span>
<span class="line"><span style="color:#22863A;">appVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">包含的应用版本（可选）。不需要是语义化，建议使用引号</span></span>
<span class="line"><span style="color:#22863A;">deprecated</span><span style="color:#24292E;">: </span><span style="color:#032F62;">不被推荐的chart （可选，布尔值）</span></span>
<span class="line"><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">example</span><span style="color:#24292E;">: </span><span style="color:#032F62;">按名称输入的批注列表 （可选）.</span></span></code></pre></div><h3 id="values-yaml" tabindex="-1">values.yaml <a class="header-anchor" href="#values-yaml" aria-label="Permalink to &quot;values.yaml&quot;">​</a></h3><h3 id="templates" tabindex="-1">templates <a class="header-anchor" href="#templates" aria-label="Permalink to &quot;templates&quot;">​</a></h3><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407091522579.png" alt="image-20240709152235643"></p><p>templates/ 目录下的文件被视为使用 Go 模板语言的动态 YAML 模板，并带有一些附加功能。</p><p>YAML 模板可防止配置重复，并允许您在开发、暂存和生产环境中安装相同的图表。</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407091433296.png" alt="image-20240709143329789"></p>`,39),e=[o];function t(c,r,E,y,i,h){return a(),n("div",null,e)}const m=s(p,[["render",t]]);export{u as __pageData,m as default};
