import{_ as s,o as a,c as l,R as n}from"./chunks/framework.zUbWieqp.js";const d=JSON.parse('{"title":"一、cloudflare 加https、加SSL（加CF处理）实操流程","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/dns/1-cloudfalre_ssl.md","filePath":"guide/Linux/dns/1-cloudfalre_ssl.md","lastUpdated":1701424498000}'),e={name:"guide/Linux/dns/1-cloudfalre_ssl.md"},p=n(`<h1 id="一、cloudflare-加https、加ssl-加cf处理-实操流程" tabindex="-1">一、cloudflare 加https、加SSL（加CF处理）实操流程 <a class="header-anchor" href="#一、cloudflare-加https、加ssl-加cf处理-实操流程" aria-label="Permalink to &quot;一、cloudflare 加https、加SSL（加CF处理）实操流程&quot;">​</a></h1><ul><li>证书介绍</li></ul><blockquote><p>有OFF、Flexible SSL、Full SSL、Full SSL (Strict)四种模式</p></blockquote><ol><li>OF</li></ol><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011517028.png" alt="14"></p><p>如图所示，可以看到代表用户到CF，以及CF到服务器端是没有使用SSL证书的</p><ol start="2"><li>Flexible SSL</li></ol><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011517680.png" alt="15"></p><p>这个SSL模式一键实现用户到CF的SSL加密模式，我们服务器中的网站可以不安装SSL证书，然后用户打开也可以看到是HTTPS格式。根据CF的建议，This option is not recommended if you have any sensitive information on your website。如果确实没有办法在服务器端给网站安装证书的才使用这个办法。</p><ol start="3"><li>Full SSL</li></ol><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011517170.png" alt="16"></p><p>这个模式区别在于CF到服务器端是可以使用自签证书的，但是大鸟也不建议使用，一般我们使用下面一种。</p><ol start="4"><li>Full SSL (Strict)</li></ol><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011517737.png" alt="17"></p><p>这个模式是我们常用的，需要CF到服务器端安装SSL证书而且必须是认证过的证书，不可以自签证书。我们可以用免费的DV SSL或者Let&#39;s证书都可以</p><h2 id="_1-1-http-to-https" tabindex="-1">1.1 http to https <a class="header-anchor" href="#_1-1-http-to-https" aria-label="Permalink to &quot;1.1 http to https&quot;">​</a></h2><ul><li>当域名购买的平台将解析的dns改为上图中的dns（每个账号对应的cf dns相同，可以先在购买时候，直接填写）后，接下来就是关键步骤</li></ul><blockquote><p>选择“Page Rules”</p></blockquote><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011517184.png" alt="6"></p><ul><li>填入形如图的格式；选择“Always Use HTTPS”（如果无，说明域名平台还没生效，等待就好，可以先选online，如图）</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011517233.png" alt="7"></p><ul><li>确认后，点击“ssl”，查看证书授权状态；</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011517356.png" alt="8"></p><ul><li>建议选择“Flexible”模式；</li></ul><blockquote><p>生效后，如图</p></blockquote><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011517401.png" alt="9"></p><p>回到“Page Rules”,再改回online为“Always Use HTTPS”即完成</p><h2 id="_1-2-page-rules界面-页面重定向" tabindex="-1">1.2 Page Rules界面，页面重定向 <a class="header-anchor" href="#_1-2-page-rules界面-页面重定向" aria-label="Permalink to &quot;1.2 Page Rules界面，页面重定向&quot;">​</a></h2><blockquote><p>以iamsea.top这个域名为例</p></blockquote><p>二级域名重定向</p><p>二级域名www.iamsea.top重定向到一级域名<a href="https://iamsea.top" target="_blank" rel="noreferrer">https://iamsea.top</a></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011517778.jpg" alt="11"></p><ul><li>将http访问转为https访问</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011517144.jpg" alt="12"></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011517520.jpg" alt="13"></p><p>配置生效可能有时间延迟</p><h2 id="_1-3-cloudflare-ssl功能选项" tabindex="-1">1.3 Cloudflare SSL功能选项 <a class="header-anchor" href="#_1-3-cloudflare-ssl功能选项" aria-label="Permalink to &quot;1.3 Cloudflare SSL功能选项&quot;">​</a></h2><p>Cloudflare SSL设置选项的时候一般功能还是很多的。我们可以根据实际的需要选择都开启，反正开启之后也没有不良反应就可以。</p><p>1、Automatic HTTPS Rewrites</p><p>自动HTTPS重写可帮助修复可通过HTTPS提供服务的网站上所有资源或链接的“http”为“https”，从而修复混合内容。</p><p>2、Opportunistic Encryption</p><p>折个中开启之后，浏览器可以从HTTP / 2和SPDY的改进性能中受益，让他们知道您的网站是通过加密连接提供的。 浏览器将继续在地址栏中显示“http”，而不是“https”。</p><p>3、Require Modern TLS</p><p>只能使用TLS协议的现代版本1.2和1.3（如果启用）。 这些版本使用更安全的密码，但可能会限制旧版本浏览器访问您网站的流量。</p><p>4、Authenticated Origin Pulls</p><p>TLS客户端证书提供原始的认证。</p><p>5、Always use HTTPS</p><p>强制所有的链接都采用HTTPS跳转模式，可以起到强制不用HTTP的地址目的</p><ul><li>四种证书优缺点</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Flexible SSL：您的网站访问者和Cloudflare之间有加密连接，但是从Cloudflare到您的服务器没有加密。即半程加密。优点在于：你的网站不需要SSL证书，用户也能实现SSL加密访问。</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Full SSL：全程加密，即从你的网站到CDN服务器再到用户，全程都是SSL加密的。优点在于：只要你的服务器有SSL证书（不管是自签名证书还是购买的SSL），就可以实现SSL加密访问。</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Full SSL (strict)：全程加密，它与Full SSL的区别在于你的服务器必须是安装了那些已经受信任的SSL证书（即购买的SSL证书），否则无法开启SSL加密访问。</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Strict (SSL-Only Origin Pull)：企业模式。自动将所有的Http转化为Https加密访问，要求你的服务器安装了受信任的有效的SSL证书</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Flexible SSL：您的网站访问者和Cloudflare之间有加密连接，但是从Cloudflare到您的服务器没有加密。即半程加密。优点在于：你的网站不需要SSL证书，用户也能实现SSL加密访问。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Full SSL：全程加密，即从你的网站到CDN服务器再到用户，全程都是SSL加密的。优点在于：只要你的服务器有SSL证书（不管是自签名证书还是购买的SSL），就可以实现SSL加密访问。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Full SSL (strict)：全程加密，它与Full SSL的区别在于你的服务器必须是安装了那些已经受信任的SSL证书（即购买的SSL证书），否则无法开启SSL加密访问。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Strict (SSL-Only Origin Pull)：企业模式。自动将所有的Http转化为Https加密访问，要求你的服务器安装了受信任的有效的SSL证书</span></span></code></pre></div><h2 id="_1-4speed选项" tabindex="-1">1.4Speed选项 <a class="header-anchor" href="#_1-4speed选项" aria-label="Permalink to &quot;1.4Speed选项&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Auto Minify里选择Gzip压缩CSS, JS和HTML三个选项，减少网页传输流量大小。</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Rocket Loader™，进一步合并优化JS代码异步加载，我选择off，因为本人博客是双栏的，在国内的网络环境，如果选用了本功能，总是先显示左边栏再显示右边栏，给别人的感觉显示很慢。</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">这个功能因人而异，需要自己测试，如果对网页加载有影响的话就不要启用</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Auto Minify里选择Gzip压缩CSS, JS和HTML三个选项，减少网页传输流量大小。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Rocket Loader™，进一步合并优化JS代码异步加载，我选择off，因为本人博客是双栏的，在国内的网络环境，如果选用了本功能，总是先显示左边栏再显示右边栏，给别人的感觉显示很慢。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">这个功能因人而异，需要自己测试，如果对网页加载有影响的话就不要启用</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011517359.jpg" alt="Speed选项"></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011545772.jpg" alt="Speed选项1"></p><h2 id="_1-5caching选项" tabindex="-1">1.5Caching选项 <a class="header-anchor" href="#_1-5caching选项" aria-label="Permalink to &quot;1.5Caching选项&quot;">​</a></h2><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011517380.jpg" alt="cache"></p><h2 id="_1-6scrapeshield选项" tabindex="-1">1.6ScrapeShield选项 <a class="header-anchor" href="#_1-6scrapeshield选项" aria-label="Permalink to &quot;1.6ScrapeShield选项&quot;">​</a></h2><ul><li>Email Address Obfuscation启用，保护网页上出现的邮箱名不被机器人扫描</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202312011518382.jpg" alt="Scrape"></p>`,59),t=[p];function o(i,c,r,u,h,S){return a(),l("div",null,t)}const m=s(e,[["render",o]]);export{d as __pageData,m as default};
