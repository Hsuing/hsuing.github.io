import{_ as s,o as a,c as e,R as n}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"两地三中心","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Database/mongodb/12_2back.md","filePath":"guide/Database/mongodb/12_2back.md","lastUpdated":1704853811000}'),o={name:"guide/Database/mongodb/12_2back.md"},l=n(`<h1 id="两地三中心" tabindex="-1">两地三中心 <a class="header-anchor" href="#两地三中心" aria-label="Permalink to &quot;两地三中心&quot;">​</a></h1><p>两个地方，三个中心的意思是：<code>生产中心、同城容灾中心、异地容灾中心</code>。从意义上来看就是，兼具同城容灾和异地容灾，结合起来就叫<code>两地三中心</code>。</p><p><strong>第一步：同城双中心</strong>，是指在同城或邻近城市建立两个可独立承担关键系统运行的数据中心，双中心具备基本等同的业务处理能力并通过高速链路实时同步数据，日常情况下可同时分担业务及管理系统的运行，并可切换运行；灾难情况下可在基本不丢失数据的情况下进行灾备应急切换，保持业务连续运行。</p><p><strong>第二步：异地灾备中心</strong>是指在异地的城市建立一个备份的灾备中心，用于双中心的数据备份，当双中心出现自然灾害等原因而发生故障时，异地灾备中心可以用备份数据进行业务的恢复。</p><p>和<code>同城双活的区别就是</code>，两地三中心比同城双活多了一个异地数据中心。这个异地数据中心主要用于规避大自然灾害发生时，异地的数据中心能够立即启动，保障业务和数据最大限度不受影响，仍能够正常运行，将企业因大自然灾害受到的损失减到最小</p><h2 id="两地三中心架构图" tabindex="-1">两地三中心架构图 <a class="header-anchor" href="#两地三中心架构图" aria-label="Permalink to &quot;两地三中心架构图&quot;">​</a></h2><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202401100944806.png" alt="MongoDB 两地三中心架构图"></p><h2 id="两地三中心要点" tabindex="-1">两地三中心要点 <a class="header-anchor" href="#两地三中心要点" aria-label="Permalink to &quot;两地三中心要点&quot;">​</a></h2><ul><li>节点数量建议要 5 个，2+2+1 模式</li><li>主数据中心的两个节点要设置高一点的优先级，减少跨中心换主节点</li><li>同城双中心之间的网络要保证低延迟和带宽，满足 writeConcern: Majority 的双中心写需求</li></ul><h2 id="实验架构" tabindex="-1">实验架构 <a class="header-anchor" href="#实验架构" aria-label="Permalink to &quot;实验架构&quot;">​</a></h2><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202401100944539.png" alt="实验架构"></p><h2 id="实验步骤" tabindex="-1">实验步骤 <a class="header-anchor" href="#实验步骤" aria-label="Permalink to &quot;实验步骤&quot;">​</a></h2><h3 id="_1、配置域名解析" tabindex="-1">1、配置域名解析 <a class="header-anchor" href="#_1、配置域名解析" aria-label="Permalink to &quot;1、配置域名解析&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"># 在 3 台虚拟机上分别执行以下 3 条命令，注意替换实际 IP 地址</span></span>
<span class="line"><span style="color:#e1e4e8;">echo &quot;192.168.1.1 geekdemo1 member1.example.com member2.example.com&quot; &gt;&gt; /etc/hosts</span></span>
<span class="line"><span style="color:#e1e4e8;">echo &quot;192.168.1.2 geekdemo2 member3.example.com member4.example.com&quot; &gt;&gt; /etc/hosts</span></span>
<span class="line"><span style="color:#e1e4e8;">echo &quot;192.168.1.3 geekdemo3 member5.example.com&quot; &gt;&gt; /etc/hosts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># 在 3 台虚拟机上分别执行以下 3 条命令，注意替换实际 IP 地址</span></span>
<span class="line"><span style="color:#24292e;">echo &quot;192.168.1.1 geekdemo1 member1.example.com member2.example.com&quot; &gt;&gt; /etc/hosts</span></span>
<span class="line"><span style="color:#24292e;">echo &quot;192.168.1.2 geekdemo2 member3.example.com member4.example.com&quot; &gt;&gt; /etc/hosts</span></span>
<span class="line"><span style="color:#24292e;">echo &quot;192.168.1.3 geekdemo3 member5.example.com&quot; &gt;&gt; /etc/hosts</span></span></code></pre></div><h3 id="_2、启动-5-个-mongodb-实例" tabindex="-1">2、启动 5 个 MongoDB 实例 <a class="header-anchor" href="#_2、启动-5-个-mongodb-实例" aria-label="Permalink to &quot;2、启动 5 个 MongoDB 实例&quot;">​</a></h3><ul><li>在虚拟机1上执行以下命令</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mkdir -p member1 member2</span></span>
<span class="line"><span style="color:#e1e4e8;">mongod --dbpath ~/member1 --replSet demo --bind_ip 0.0.0.0 --port 10001 --fork --logpath member1.log</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">mongod --dbpath ~/member2 --replSet demo --bind_ip 0.0.0.0 --port 10002 --fork --logpath member2.log</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mkdir -p member1 member2</span></span>
<span class="line"><span style="color:#24292e;">mongod --dbpath ~/member1 --replSet demo --bind_ip 0.0.0.0 --port 10001 --fork --logpath member1.log</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">mongod --dbpath ~/member2 --replSet demo --bind_ip 0.0.0.0 --port 10002 --fork --logpath member2.log</span></span></code></pre></div><ul><li>在虚拟机2上执行以下命令</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mkdir -p member3 member4</span></span>
<span class="line"><span style="color:#e1e4e8;">mongod --dbpath ~/member3 --replSet demo --bind_ip 0.0.0.0 --port 10003 --fork --logpath member3.log</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">mongod --dbpath ~/member4 --replSet demo --bind_ip 0.0.0.0 --port 10004 --fork --logpath member4.log</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mkdir -p member3 member4</span></span>
<span class="line"><span style="color:#24292e;">mongod --dbpath ~/member3 --replSet demo --bind_ip 0.0.0.0 --port 10003 --fork --logpath member3.log</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">mongod --dbpath ~/member4 --replSet demo --bind_ip 0.0.0.0 --port 10004 --fork --logpath member4.log</span></span></code></pre></div><ul><li>在虚拟机3上执行以下命令</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mkdir -p member5</span></span>
<span class="line"><span style="color:#e1e4e8;">mongod --dbpath ~/member5 --replSet demo --bind_ip 0.0.0.0 --port 10005 --fork --logpath member5.log</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mkdir -p member5</span></span>
<span class="line"><span style="color:#24292e;">mongod --dbpath ~/member5 --replSet demo --bind_ip 0.0.0.0 --port 10005 --fork --logpath member5.log</span></span></code></pre></div><h3 id="_3、初始化副本集" tabindex="-1">3、初始化副本集 <a class="header-anchor" href="#_3、初始化副本集" aria-label="Permalink to &quot;3、初始化副本集&quot;">​</a></h3><ul><li>在任意一台虚拟机上执行</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mongo member1.example.com:10001</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">&gt;rs.initiate({</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;_id&quot; : &quot;demo&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;version&quot; : 1,</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;members&quot; : [</span></span>
<span class="line"><span style="color:#e1e4e8;">        { &quot;_id&quot; : 0, &quot;host&quot; : &quot;member1.example.com:10001&quot; },</span></span>
<span class="line"><span style="color:#e1e4e8;">        { &quot;_id&quot; : 1, &quot;host&quot; : &quot;member2.example.com:10002&quot; },</span></span>
<span class="line"><span style="color:#e1e4e8;">        { &quot;_id&quot; : 2, &quot;host&quot; : &quot;member3.example.com:10003&quot; },</span></span>
<span class="line"><span style="color:#e1e4e8;">        { &quot;_id&quot; : 3, &quot;host&quot; : &quot;member4.example.com:10004&quot; },</span></span>
<span class="line"><span style="color:#e1e4e8;">        { &quot;_id&quot; : 4, &quot;host&quot; : &quot;member5.example.com:10005&quot; }</span></span>
<span class="line"><span style="color:#e1e4e8;">    ]</span></span>
<span class="line"><span style="color:#e1e4e8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mongo member1.example.com:10001</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&gt;rs.initiate({</span></span>
<span class="line"><span style="color:#24292e;">    &quot;_id&quot; : &quot;demo&quot;,</span></span>
<span class="line"><span style="color:#24292e;">    &quot;version&quot; : 1,</span></span>
<span class="line"><span style="color:#24292e;">    &quot;members&quot; : [</span></span>
<span class="line"><span style="color:#24292e;">        { &quot;_id&quot; : 0, &quot;host&quot; : &quot;member1.example.com:10001&quot; },</span></span>
<span class="line"><span style="color:#24292e;">        { &quot;_id&quot; : 1, &quot;host&quot; : &quot;member2.example.com:10002&quot; },</span></span>
<span class="line"><span style="color:#24292e;">        { &quot;_id&quot; : 2, &quot;host&quot; : &quot;member3.example.com:10003&quot; },</span></span>
<span class="line"><span style="color:#24292e;">        { &quot;_id&quot; : 3, &quot;host&quot; : &quot;member4.example.com:10004&quot; },</span></span>
<span class="line"><span style="color:#24292e;">        { &quot;_id&quot; : 4, &quot;host&quot; : &quot;member5.example.com:10005&quot; }</span></span>
<span class="line"><span style="color:#24292e;">    ]</span></span>
<span class="line"><span style="color:#24292e;">})</span></span></code></pre></div><h3 id="_4、配置选举优先级" tabindex="-1">4、配置选举优先级 <a class="header-anchor" href="#_4、配置选举优先级" aria-label="Permalink to &quot;4、配置选举优先级&quot;">​</a></h3><ul><li>把第一台机器上的2个实例的选举优先级调高为5和10（默认为1）</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mongo member1.example.com:10001</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt;cfg = rs.conf()</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt;cfg.members[0].priority = 5</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt;cfg.members[1].priority = 10</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt;rs.reconfig(cfg)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mongo member1.example.com:10001</span></span>
<span class="line"><span style="color:#24292e;">&gt;cfg = rs.conf()</span></span>
<span class="line"><span style="color:#24292e;">&gt;cfg.members[0].priority = 5</span></span>
<span class="line"><span style="color:#24292e;">&gt;cfg.members[1].priority = 10</span></span>
<span class="line"><span style="color:#24292e;">&gt;rs.reconfig(cfg)</span></span></code></pre></div><h3 id="_5、启动持续写脚本" tabindex="-1">5、启动持续写脚本 <a class="header-anchor" href="#_5、启动持续写脚本" aria-label="Permalink to &quot;5、启动持续写脚本&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"># 4.2 默认 retryWrites，但加上无妨</span></span>
<span class="line"><span style="color:#e1e4e8;">mongo --retryWrites mongodb://member1.example.com:10001,member2.example.com:10002,member3.example.com:10003,member4.example.com:10004,member5.example.com:10005/test?replicaSet=demo ingest-script</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># 4.2 默认 retryWrites，但加上无妨</span></span>
<span class="line"><span style="color:#24292e;">mongo --retryWrites mongodb://member1.example.com:10001,member2.example.com:10002,member3.example.com:10003,member4.example.com:10004,member5.example.com:10005/test?replicaSet=demo ingest-script</span></span></code></pre></div><ul><li>ingest-script 内容（每2秒写一条记录）</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#cat ingest-script</span></span>
<span class="line"><span style="color:#B392F0;">db.test.drop</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">var</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; </span><span style="color:#B392F0;">i</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">; </span><span style="color:#B392F0;">i++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">db.test.insert(</span><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">item:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">}</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">inserted</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">db.test.findOne</span><span style="color:#E1E4E8;">({ item: i });</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">inserted</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">&quot; Item &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; was inserted &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Date</span><span style="color:#E1E4E8;">()</span><span style="color:#9ECBFF;">.getTime</span><span style="color:#E1E4E8;">() </span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">&quot;Unexpected &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">inserted</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">sleep(2000</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#cat ingest-script</span></span>
<span class="line"><span style="color:#6F42C1;">db.test.drop</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">var</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; </span><span style="color:#6F42C1;">i</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">; </span><span style="color:#6F42C1;">i++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">db.test.insert(</span><span style="color:#24292E;">{ </span><span style="color:#032F62;">item:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">}</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">inserted</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">db.test.findOne</span><span style="color:#24292E;">({ item: i });</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">inserted</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">&quot; Item &quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; was inserted &quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Date</span><span style="color:#24292E;">()</span><span style="color:#032F62;">.getTime</span><span style="color:#24292E;">() </span><span style="color:#032F62;">/</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1000</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">&quot;Unexpected &quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">inserted</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">sleep(2000</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_6、模拟从数据中心故障" tabindex="-1">6、模拟从数据中心故障 <a class="header-anchor" href="#_6、模拟从数据中心故障" aria-label="Permalink to &quot;6、模拟从数据中心故障&quot;">​</a></h3><ul><li>停止第 2 台虚拟机上所有 mongodb 进程</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">pkill mongod</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">pkill mongod</span></span></code></pre></div><p>观察第3台虚拟机上的写入未受中断</p><h3 id="_7、模拟主数据中心故障" tabindex="-1">7、模拟主数据中心故障 <a class="header-anchor" href="#_7、模拟主数据中心故障" aria-label="Permalink to &quot;7、模拟主数据中心故障&quot;">​</a></h3><ul><li>停止第 1 台虚拟机上所有 mongodb 进程</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">pkill mongod</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">pkill mongod</span></span></code></pre></div><p>观察第3台虚拟机上的写入未受中断</p>`,39),p=[l];function t(c,r,i,m,d,y){return a(),e("div",null,p)}const h=s(o,[["render",t]]);export{u as __pageData,h as default};
