import{_ as s,o as a,c as n,R as l}from"./chunks/framework.zUbWieqp.js";const h=JSON.parse('{"title":"1.持久化方式","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/Monitor/Prometheus/2-check.md","filePath":"guide/Linux/Monitor/Prometheus/2-check.md","lastUpdated":1739441864000}'),e={name:"guide/Linux/Monitor/Prometheus/2-check.md"},p=l(`<h1 id="_1-持久化方式" tabindex="-1">1.持久化方式 <a class="header-anchor" href="#_1-持久化方式" aria-label="Permalink to &quot;1.持久化方式&quot;">​</a></h1><p>记录规则：根据查询创建新指标。</p><p>警报规则：从查询生成警报</p><p>可视化规则：使用Grafana等仪表板可视化查询</p><h2 id="_1-1-记录规则" tabindex="-1">1.1 记录规则 <a class="header-anchor" href="#_1-1-记录规则" aria-label="Permalink to &quot;1.1 记录规则&quot;">​</a></h2><p>记录规则是一种根据已有时间序列计算新时间序列（特别是聚合时间序列）的方法</p><ul><li>跨多个时间序列生成聚合</li><li>预先计算消耗大的查询</li><li>产生可用于生成警报的时间序列</li></ul><h1 id="_2-语法" tabindex="-1">2. 语法 <a class="header-anchor" href="#_2-语法" aria-label="Permalink to &quot;2. 语法&quot;">​</a></h1><p><a href="https://prometheus.io/docs/prometheus/2.55/configuration/recording_rules/" target="_blank" rel="noreferrer">官方文档</a></p><p>rule_group:</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># The name of the group. Must be unique within a file.</span></span>
<span class="line"><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># How often rules in the group are evaluated.</span></span>
<span class="line"><span style="color:#E1E4E8;">[ </span><span style="color:#85E89D;">interval</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;duration&gt; | default = global.evaluation_interval</span><span style="color:#E1E4E8;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Limit the number of alerts an alerting rule and series a recording</span></span>
<span class="line"><span style="color:#6A737D;"># rule can produce. 0 is no limit.</span></span>
<span class="line"><span style="color:#E1E4E8;">[ </span><span style="color:#85E89D;">limit</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;int&gt; | default = 0</span><span style="color:#E1E4E8;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Offset the rule evaluation timestamp of this particular group by the specified duration into the past.</span></span>
<span class="line"><span style="color:#E1E4E8;">[ </span><span style="color:#85E89D;">query_offset</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;duration&gt; | default = global.rule_query_offset</span><span style="color:#E1E4E8;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">rules</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  [ - </span><span style="color:#9ECBFF;">&lt;rule&gt; ...</span><span style="color:#E1E4E8;"> ]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># The name of the group. Must be unique within a file.</span></span>
<span class="line"><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># How often rules in the group are evaluated.</span></span>
<span class="line"><span style="color:#24292E;">[ </span><span style="color:#22863A;">interval</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;duration&gt; | default = global.evaluation_interval</span><span style="color:#24292E;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Limit the number of alerts an alerting rule and series a recording</span></span>
<span class="line"><span style="color:#6A737D;"># rule can produce. 0 is no limit.</span></span>
<span class="line"><span style="color:#24292E;">[ </span><span style="color:#22863A;">limit</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;int&gt; | default = 0</span><span style="color:#24292E;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Offset the rule evaluation timestamp of this particular group by the specified duration into the past.</span></span>
<span class="line"><span style="color:#24292E;">[ </span><span style="color:#22863A;">query_offset</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;duration&gt; | default = global.rule_query_offset</span><span style="color:#24292E;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">rules</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  [ - </span><span style="color:#032F62;">&lt;rule&gt; ...</span><span style="color:#24292E;"> ]</span></span></code></pre></div><p>rule:</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># The name of the time series to output to. Must be a valid metric name.</span></span>
<span class="line"><span style="color:#85E89D;">record</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># The PromQL expression to evaluate. Every evaluation cycle this is</span></span>
<span class="line"><span style="color:#6A737D;"># evaluated at the current time, and the result recorded as a new set of</span></span>
<span class="line"><span style="color:#6A737D;"># time series with the metric name as given by &#39;record&#39;.</span></span>
<span class="line"><span style="color:#85E89D;">expr</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;string&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Labels to add or overwrite before storing the result.</span></span>
<span class="line"><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  [ </span><span style="color:#85E89D;">&lt;labelname&gt;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;labelvalue&gt;</span><span style="color:#E1E4E8;"> ]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># The name of the time series to output to. Must be a valid metric name.</span></span>
<span class="line"><span style="color:#22863A;">record</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># The PromQL expression to evaluate. Every evaluation cycle this is</span></span>
<span class="line"><span style="color:#6A737D;"># evaluated at the current time, and the result recorded as a new set of</span></span>
<span class="line"><span style="color:#6A737D;"># time series with the metric name as given by &#39;record&#39;.</span></span>
<span class="line"><span style="color:#22863A;">expr</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;string&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Labels to add or overwrite before storing the result.</span></span>
<span class="line"><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  [ </span><span style="color:#22863A;">&lt;labelname&gt;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;labelvalue&gt;</span><span style="color:#24292E;"> ]</span></span></code></pre></div><p>如：</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">groups</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">example</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">rules</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">record</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">code:prometheus_http_requests_total:sum</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">expr</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">sum by (code) (prometheus_http_requests_total)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">groups</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">example</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">rules</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">record</span><span style="color:#24292E;">: </span><span style="color:#032F62;">code:prometheus_http_requests_total:sum</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">expr</span><span style="color:#24292E;">: </span><span style="color:#032F62;">sum by (code) (prometheus_http_requests_total)</span></span></code></pre></div><ul><li>检查语法</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">promtool</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">check</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rules</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/path/to/example.rules.yml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">promtool</span><span style="color:#24292E;"> </span><span style="color:#032F62;">check</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rules</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/path/to/example.rules.yml</span></span></code></pre></div><h1 id="_3-配置" tabindex="-1">3. 配置 <a class="header-anchor" href="#_3-配置" aria-label="Permalink to &quot;3. 配置&quot;">​</a></h1><p>vim /etc/prometheus/prometheus.yml</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">rule_files</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#9ECBFF;">&quot;rules/*.yml&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">rule_files</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">&quot;rules/*.yml&quot;</span></span></code></pre></div><ul><li>创建rules目录</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/data/monitor/prometheus/rules</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/data/monitor/prometheus/rules</span></span></code></pre></div><ul><li>创建记录规则</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/data/monitor/prometheus/rules/node_record.yml</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">EOF</span></span>
<span class="line"><span style="color:#9ECBFF;">groups:</span></span>
<span class="line"><span style="color:#9ECBFF;">  - name: test-record</span></span>
<span class="line"><span style="color:#9ECBFF;">    interval: 10s</span></span>
<span class="line"><span style="color:#9ECBFF;">    rules:</span></span>
<span class="line"><span style="color:#9ECBFF;">      - record: instance:memory:usage </span></span>
<span class="line"><span style="color:#9ECBFF;">        expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100</span></span>
<span class="line"><span style="color:#9ECBFF;">     </span></span>
<span class="line"><span style="color:#9ECBFF;">      - record: instance:cpu:load</span></span>
<span class="line"><span style="color:#9ECBFF;">        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode=&quot;idle&quot;}[2m])) * 100)</span></span>
<span class="line"><span style="color:#9ECBFF;">EOF</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/data/monitor/prometheus/rules/node_record.yml</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">EOF</span></span>
<span class="line"><span style="color:#032F62;">groups:</span></span>
<span class="line"><span style="color:#032F62;">  - name: test-record</span></span>
<span class="line"><span style="color:#032F62;">    interval: 10s</span></span>
<span class="line"><span style="color:#032F62;">    rules:</span></span>
<span class="line"><span style="color:#032F62;">      - record: instance:memory:usage </span></span>
<span class="line"><span style="color:#032F62;">        expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100</span></span>
<span class="line"><span style="color:#032F62;">     </span></span>
<span class="line"><span style="color:#032F62;">      - record: instance:cpu:load</span></span>
<span class="line"><span style="color:#032F62;">        expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode=&quot;idle&quot;}[2m])) * 100)</span></span>
<span class="line"><span style="color:#032F62;">EOF</span></span></code></pre></div><ul><li>检查规则</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">promtool</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">check</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rules</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/data/monitor/prometheus/rules/node_record.yml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">promtool</span><span style="color:#24292E;"> </span><span style="color:#032F62;">check</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rules</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/data/monitor/prometheus/rules/node_record.yml</span></span></code></pre></div><ul><li>热更新</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">curl -X POST http://10.103.236.199:19090/prometheus/-/reload</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">curl -X POST http://10.103.236.199:19090/prometheus/-/reload</span></span></code></pre></div><ul><li>效果</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202502131513252.png" alt="image-20250213151127906"></p><p>官当：</p><p><a href="https://prometheus.io/docs/practices/rules/" target="_blank" rel="noreferrer">https://prometheus.io/docs/practices/rules/</a></p>`,32),o=[p];function t(r,c,i,y,u,d){return a(),n("div",null,o)}const m=s(e,[["render",t]]);export{h as __pageData,m as default};
