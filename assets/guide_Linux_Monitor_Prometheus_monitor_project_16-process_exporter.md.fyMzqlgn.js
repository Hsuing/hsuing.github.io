import{_ as s,o as a,c as n,R as l}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"1. process_exporter","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/Monitor/Prometheus/monitor_project/16-process_exporter.md","filePath":"guide/Linux/Monitor/Prometheus/monitor_project/16-process_exporter.md","lastUpdated":1734603886000}'),p={name:"guide/Linux/Monitor/Prometheus/monitor_project/16-process_exporter.md"},o=l(`<h1 id="_1-process-exporter" tabindex="-1">1. process_exporter <a class="header-anchor" href="#_1-process-exporter" aria-label="Permalink to &quot;1. process_exporter&quot;">​</a></h1><h2 id="_1-1-介绍" tabindex="-1">1.1 介绍 <a class="header-anchor" href="#_1-1-介绍" aria-label="Permalink to &quot;1.1 介绍&quot;">​</a></h2><p>可以监控系统<a href="https://github.com/ncabatoff/process-exporter" target="_blank" rel="noreferrer">进程</a></p><h2 id="_1-2-部署" tabindex="-1">1.2 部署 <a class="header-anchor" href="#_1-2-部署" aria-label="Permalink to &quot;1.2 部署&quot;">​</a></h2><h3 id="_1-容器方式" tabindex="-1">1.容器方式 <a class="header-anchor" href="#_1-容器方式" aria-label="Permalink to &quot;1.容器方式&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">9256</span><span style="color:#9ECBFF;">:9256</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--privileged</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/proc:/host/proc</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-v</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`</span><span style="color:#79B8FF;">pwd</span><span style="color:#9ECBFF;">\`</span><span style="color:#B392F0;">:/config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ncabatoff/process-exporter</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--procfs</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/host/proc</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-config.path</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/config/filename.yml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">9256</span><span style="color:#032F62;">:9256</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--privileged</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/proc:/host/proc</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`</span><span style="color:#005CC5;">pwd</span><span style="color:#032F62;">\`</span><span style="color:#6F42C1;">:/config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ncabatoff/process-exporter</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--procfs</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/host/proc</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-config.path</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/config/filename.yml</span></span></code></pre></div><h3 id="_2-二进制方式" tabindex="-1">2.二进制方式 <a class="header-anchor" href="#_2-二进制方式" aria-label="Permalink to &quot;2.二进制方式&quot;">​</a></h3><ul><li>下载</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">wget</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/ncabatoff/process-exporter/releases/download/v0.8.4/process-exporter-0.8.4.linux-amd64.tar.gz</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">wget</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/ncabatoff/process-exporter/releases/download/v0.8.4/process-exporter-0.8.4.linux-amd64.tar.gz</span></span></code></pre></div><h2 id="_1-3-配置文件" tabindex="-1">1.3 配置文件 <a class="header-anchor" href="#_1-3-配置文件" aria-label="Permalink to &quot;1.3 配置文件&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/data/apps/process-exporter/process_name.yaml</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">process_names:</span></span>
<span class="line"><span style="color:#9ECBFF;">#监控所有进程</span></span>
<span class="line"><span style="color:#9ECBFF;">#  - name: &quot;{{.Comm}}&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">#    cmdline:</span></span>
<span class="line"><span style="color:#9ECBFF;">#    - &#39;.+&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">  - name: &quot;{{.Matches}}&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">    cmdline:</span></span>
<span class="line"><span style="color:#9ECBFF;">    - &#39;nginx&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">  - name: &quot;{{.Matches}}&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">    cmdline:</span></span>
<span class="line"><span style="color:#9ECBFF;">    - &#39;/opt/atlassian/confluence/bin/tomcat-juli.jar&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">  - name: &quot;{{.Matches}}&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">    cmdline:</span></span>
<span class="line"><span style="color:#9ECBFF;">    - &#39;vsftpd&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">  - name: &quot;{{.Matches}}&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">    cmdline:</span></span>
<span class="line"><span style="color:#9ECBFF;">    - &#39;redis-server&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">EOF</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/data/apps/process-exporter/process_name.yaml</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">process_names:</span></span>
<span class="line"><span style="color:#032F62;">#监控所有进程</span></span>
<span class="line"><span style="color:#032F62;">#  - name: &quot;{{.Comm}}&quot;</span></span>
<span class="line"><span style="color:#032F62;">#    cmdline:</span></span>
<span class="line"><span style="color:#032F62;">#    - &#39;.+&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">  - name: &quot;{{.Matches}}&quot;</span></span>
<span class="line"><span style="color:#032F62;">    cmdline:</span></span>
<span class="line"><span style="color:#032F62;">    - &#39;nginx&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">  - name: &quot;{{.Matches}}&quot;</span></span>
<span class="line"><span style="color:#032F62;">    cmdline:</span></span>
<span class="line"><span style="color:#032F62;">    - &#39;/opt/atlassian/confluence/bin/tomcat-juli.jar&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">  - name: &quot;{{.Matches}}&quot;</span></span>
<span class="line"><span style="color:#032F62;">    cmdline:</span></span>
<span class="line"><span style="color:#032F62;">    - &#39;vsftpd&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">  - name: &quot;{{.Matches}}&quot;</span></span>
<span class="line"><span style="color:#032F62;">    cmdline:</span></span>
<span class="line"><span style="color:#032F62;">    - &#39;redis-server&#39;</span></span>
<span class="line"><span style="color:#032F62;">EOF</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">💡 说明</p><p>cmdline: 所选进程的唯一标识，ps -ef 可以查询到。如果改进程不存在，则不会有该进程的数据采集到</p></div><p>例如：&gt; ps -ef | grep redis</p><p>redis 4287 4127 0 Oct31 ? 00:58:12 redis-server *:6379</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202412181604720.png" alt="image-20241218160404645"></p><h2 id="_1-4-配置systemd" tabindex="-1">1.4 配置systemd <a class="header-anchor" href="#_1-4-配置systemd" aria-label="Permalink to &quot;1.4 配置systemd&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/lib/systemd/system/process_exporter.service</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">EOF</span></span>
<span class="line"><span style="color:#9ECBFF;"> </span></span>
<span class="line"><span style="color:#9ECBFF;">[Unit]</span></span>
<span class="line"><span style="color:#9ECBFF;">Description=Prometheus exporter for processors metrics, written in Go with pluggable metric collectors.</span></span>
<span class="line"><span style="color:#9ECBFF;">Documentation=https://github.com/ncabatoff/process-exporter</span></span>
<span class="line"><span style="color:#9ECBFF;">After=network.target</span></span>
<span class="line"><span style="color:#9ECBFF;"> </span></span>
<span class="line"><span style="color:#9ECBFF;">[Service]</span></span>
<span class="line"><span style="color:#9ECBFF;">Type=simple</span></span>
<span class="line"><span style="color:#9ECBFF;">User=prometheus</span></span>
<span class="line"><span style="color:#9ECBFF;">WorkingDirectory=/data/apps/process-exporter</span></span>
<span class="line"><span style="color:#9ECBFF;">ExecStart=/data/apps/process-exporter/process-exporter -config.path=/data/apps/process-exporter/process_name.yaml</span></span>
<span class="line"><span style="color:#9ECBFF;">ExecReload=/bin/kill -HUP </span><span style="color:#E1E4E8;">$MAINPID</span></span>
<span class="line"><span style="color:#9ECBFF;">KillMode=process</span></span>
<span class="line"><span style="color:#9ECBFF;">Restart=on-failure</span></span>
<span class="line"><span style="color:#9ECBFF;"> </span></span>
<span class="line"><span style="color:#9ECBFF;">[Install]</span></span>
<span class="line"><span style="color:#9ECBFF;">WantedBy=multi-user.target</span></span>
<span class="line"><span style="color:#9ECBFF;">EOF</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/lib/systemd/system/process_exporter.service</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">EOF</span></span>
<span class="line"><span style="color:#032F62;"> </span></span>
<span class="line"><span style="color:#032F62;">[Unit]</span></span>
<span class="line"><span style="color:#032F62;">Description=Prometheus exporter for processors metrics, written in Go with pluggable metric collectors.</span></span>
<span class="line"><span style="color:#032F62;">Documentation=https://github.com/ncabatoff/process-exporter</span></span>
<span class="line"><span style="color:#032F62;">After=network.target</span></span>
<span class="line"><span style="color:#032F62;"> </span></span>
<span class="line"><span style="color:#032F62;">[Service]</span></span>
<span class="line"><span style="color:#032F62;">Type=simple</span></span>
<span class="line"><span style="color:#032F62;">User=prometheus</span></span>
<span class="line"><span style="color:#032F62;">WorkingDirectory=/data/apps/process-exporter</span></span>
<span class="line"><span style="color:#032F62;">ExecStart=/data/apps/process-exporter/process-exporter -config.path=/data/apps/process-exporter/process_name.yaml</span></span>
<span class="line"><span style="color:#032F62;">ExecReload=/bin/kill -HUP </span><span style="color:#24292E;">$MAINPID</span></span>
<span class="line"><span style="color:#032F62;">KillMode=process</span></span>
<span class="line"><span style="color:#032F62;">Restart=on-failure</span></span>
<span class="line"><span style="color:#032F62;"> </span></span>
<span class="line"><span style="color:#032F62;">[Install]</span></span>
<span class="line"><span style="color:#032F62;">WantedBy=multi-user.target</span></span>
<span class="line"><span style="color:#032F62;">EOF</span></span></code></pre></div><ul><li>启动</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">daemon-reload</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">enable</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--now</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">process_exporter</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">daemon-reload</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">enable</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--now</span><span style="color:#24292E;"> </span><span style="color:#032F62;">process_exporter</span></span></code></pre></div><ul><li>验证数据</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://localhost:9256/metrics</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">curl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://localhost:9256/metrics</span></span></code></pre></div><h2 id="_1-5-添加prometheus" tabindex="-1">1.5 添加prometheus <a class="header-anchor" href="#_1-5-添加prometheus" aria-label="Permalink to &quot;1.5 添加prometheus&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">- </span><span style="color:#85E89D;">job_name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;process_exporter&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">scrape_interval</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10s</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">honor_labels</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">metrics_path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;/metrics&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">static_configs</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">targets</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&#39;192.168.10.73:9256&#39;</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">- </span><span style="color:#22863A;">job_name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;process_exporter&#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">scrape_interval</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10s</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">honor_labels</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">metrics_path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;/metrics&#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">static_configs</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">targets</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&#39;192.168.10.73:9256&#39;</span><span style="color:#24292E;">]</span></span></code></pre></div><ul><li>重启服务</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">curl -X POST http://127.0.0.1:9090/-/reload</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">curl -X POST http://127.0.0.1:9090/-/reload</span></span></code></pre></div><h2 id="_1-6-报警规则" tabindex="-1">1.6 报警规则 <a class="header-anchor" href="#_1-6-报警规则" aria-label="Permalink to &quot;1.6 报警规则&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">alert</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">进程告警</span></span>
<span class="line"><span style="color:#85E89D;">expr</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">sum by(cluster, job, instance, groupname) (namedprocess_namegroup_states{state=&quot;Zombie&quot;}) &gt; 0</span></span>
<span class="line"><span style="color:#85E89D;">for</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">1m</span></span>
<span class="line"><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">severity</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">warning</span></span>
<span class="line"><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">value</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">当前产生 {{ $value }} 个僵尸进程</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">alert</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">进程重启告警</span></span>
<span class="line"><span style="color:#85E89D;">expr</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ceil(time() - max by(cluster, job, instance, groupname) (namedprocess_namegroup_oldest_start_time_seconds)) &lt; 60</span></span>
<span class="line"><span style="color:#85E89D;">for</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">25s</span></span>
<span class="line"><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">label</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">alert_once</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">severity</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">warning</span></span>
<span class="line"><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">value</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">进程 {{ $labels.groupname }} 在 {{ $value }} 秒前发生重启</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">alert</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">进程退出告警</span></span>
<span class="line"><span style="color:#85E89D;">expr</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">up{export=&quot;process_exporter&quot;} == 0 or max by(cluster, job, instance, groupname) (delta(namedprocess_namegroup_oldest_start_time_seconds{groupname=~&quot;^map.*&quot;}[10d])) &lt; 0</span></span>
<span class="line"><span style="color:#85E89D;">for</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">55s</span></span>
<span class="line"><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">severity</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">warning</span></span>
<span class="line"><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">value</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">进程 {{ $labels.export}} 已退出</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">alert</span><span style="color:#24292E;">: </span><span style="color:#032F62;">进程告警</span></span>
<span class="line"><span style="color:#22863A;">expr</span><span style="color:#24292E;">: </span><span style="color:#032F62;">sum by(cluster, job, instance, groupname) (namedprocess_namegroup_states{state=&quot;Zombie&quot;}) &gt; 0</span></span>
<span class="line"><span style="color:#22863A;">for</span><span style="color:#24292E;">: </span><span style="color:#032F62;">1m</span></span>
<span class="line"><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">severity</span><span style="color:#24292E;">: </span><span style="color:#032F62;">warning</span></span>
<span class="line"><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">value</span><span style="color:#24292E;">: </span><span style="color:#032F62;">当前产生 {{ $value }} 个僵尸进程</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">alert</span><span style="color:#24292E;">: </span><span style="color:#032F62;">进程重启告警</span></span>
<span class="line"><span style="color:#22863A;">expr</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ceil(time() - max by(cluster, job, instance, groupname) (namedprocess_namegroup_oldest_start_time_seconds)) &lt; 60</span></span>
<span class="line"><span style="color:#22863A;">for</span><span style="color:#24292E;">: </span><span style="color:#032F62;">25s</span></span>
<span class="line"><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">label</span><span style="color:#24292E;">: </span><span style="color:#032F62;">alert_once</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">severity</span><span style="color:#24292E;">: </span><span style="color:#032F62;">warning</span></span>
<span class="line"><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">value</span><span style="color:#24292E;">: </span><span style="color:#032F62;">进程 {{ $labels.groupname }} 在 {{ $value }} 秒前发生重启</span></span>
<span class="line"></span>
<span class="line"><span style="color:#22863A;">alert</span><span style="color:#24292E;">: </span><span style="color:#032F62;">进程退出告警</span></span>
<span class="line"><span style="color:#22863A;">expr</span><span style="color:#24292E;">: </span><span style="color:#032F62;">up{export=&quot;process_exporter&quot;} == 0 or max by(cluster, job, instance, groupname) (delta(namedprocess_namegroup_oldest_start_time_seconds{groupname=~&quot;^map.*&quot;}[10d])) &lt; 0</span></span>
<span class="line"><span style="color:#22863A;">for</span><span style="color:#24292E;">: </span><span style="color:#032F62;">55s</span></span>
<span class="line"><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">severity</span><span style="color:#24292E;">: </span><span style="color:#032F62;">warning</span></span>
<span class="line"><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">value</span><span style="color:#24292E;">: </span><span style="color:#032F62;">进程 {{ $labels.export}} 已退出</span></span></code></pre></div><ul><li>检查语法</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">/usr/local/prometheus/promtool  check rules  rules.yml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/usr/local/prometheus/promtool  check rules  rules.yml</span></span></code></pre></div><h2 id="_1-7-grafana" tabindex="-1">1.7 grafana <a class="header-anchor" href="#_1-7-grafana" aria-label="Permalink to &quot;1.7 grafana&quot;">​</a></h2><p><a href="https://grafana.com/grafana/dashboards/8378-system-processes-metrics/" target="_blank" rel="noreferrer">https://grafana.com/grafana/dashboards/8378-system-processes-metrics/</a></p>`,31),e=[o];function t(c,r,i,y,E,F){return a(),n("div",null,e)}const h=s(p,[["render",t]]);export{u as __pageData,h as default};
