import{_ as s,o as n,c as a,R as l}from"./chunks/framework.zUbWieqp.js";const C=JSON.parse('{"title":"1.YAML文件概述","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/Yaml/1-YAML.md","filePath":"guide/container/k8s/Yaml/1-YAML.md","lastUpdated":1720533756000}'),p={name:"guide/container/k8s/Yaml/1-YAML.md"},o=l(`<h1 id="_1-yaml文件概述" tabindex="-1">1.YAML文件概述 <a class="header-anchor" href="#_1-yaml文件概述" aria-label="Permalink to &quot;1.YAML文件概述&quot;">​</a></h1><p>​ k8s集群中对资源管理和资源对编排部署都可以通过声明样式（YAML）文件来解决，也就是可以把需要对资源对象操作编辑到YAML格式文件中，我们把这种文件叫做资源清单文件，通过kubectl命令直接使用资源清单文件就可以实现对大量的资源对象进行编排部署.</p><h1 id="_2-yaml书写格式介绍" tabindex="-1">2.YAML书写格式介绍 <a class="header-anchor" href="#_2-yaml书写格式介绍" aria-label="Permalink to &quot;2.YAML书写格式介绍&quot;">​</a></h1><p>YAML：是一种标记语言，为了强调这种语言以数据做为中心，而不是以标记语言为重点，YAML是一个可读性高，用来表达数据序列的格式</p><h1 id="_3-yaml组成部分" tabindex="-1">3.Yaml组成部分 <a class="header-anchor" href="#_3-yaml组成部分" aria-label="Permalink to &quot;3.Yaml组成部分&quot;">​</a></h1><ol><li><strong>apiVersion</strong>：指定k8s API的版本，例如v1。</li><li><strong>kind</strong>：定义要创建的资源对象类型，如Pod、Service、Namespace等。</li><li><strong>metadata</strong>：提供资源对象的元数据，包括名称、命名空间、标签和注解。</li><li><strong>spec</strong>：详细描述资源对象的期望状态，包括容器配置、端口设置、存储卷等。</li></ol><p>由两部分组成，</p><p>（1）控制器定义</p><p>（2）被控制对象</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405131127678.png" alt="image-20240513112714422"></p><ul><li>查看支持版本</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@kube-master </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]# kubectl api-versions</span></span>
<span class="line"><span style="color:#B392F0;">admissionregistration.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">apiextensions.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">apiregistration.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">apps/v1</span></span>
<span class="line"><span style="color:#B392F0;">authentication.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">authorization.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">autoscaling/v1</span></span>
<span class="line"><span style="color:#B392F0;">autoscaling/v2beta1</span></span>
<span class="line"><span style="color:#B392F0;">autoscaling/v2beta2</span></span>
<span class="line"><span style="color:#B392F0;">batch/v1</span></span>
<span class="line"><span style="color:#B392F0;">batch/v1beta1</span></span>
<span class="line"><span style="color:#B392F0;">certificates.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">coordination.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">crd.projectcalico.org/v1</span></span>
<span class="line"><span style="color:#B392F0;">discovery.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">discovery.k8s.io/v1beta1</span></span>
<span class="line"><span style="color:#B392F0;">events.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">events.k8s.io/v1beta1</span></span>
<span class="line"><span style="color:#B392F0;">flowcontrol.apiserver.k8s.io/v1beta1</span></span>
<span class="line"><span style="color:#B392F0;">metrics.k8s.io/v1beta1</span></span>
<span class="line"><span style="color:#B392F0;">networking.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">node.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">node.k8s.io/v1beta1</span></span>
<span class="line"><span style="color:#B392F0;">policy/v1</span></span>
<span class="line"><span style="color:#B392F0;">policy/v1beta1</span></span>
<span class="line"><span style="color:#B392F0;">rbac.authorization.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">scheduling.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">storage.k8s.io/v1</span></span>
<span class="line"><span style="color:#B392F0;">storage.k8s.io/v1beta1</span></span>
<span class="line"><span style="color:#B392F0;">v1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@kube-master </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]# kubectl api-versions</span></span>
<span class="line"><span style="color:#6F42C1;">admissionregistration.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">apiextensions.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">apiregistration.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">apps/v1</span></span>
<span class="line"><span style="color:#6F42C1;">authentication.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">authorization.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">autoscaling/v1</span></span>
<span class="line"><span style="color:#6F42C1;">autoscaling/v2beta1</span></span>
<span class="line"><span style="color:#6F42C1;">autoscaling/v2beta2</span></span>
<span class="line"><span style="color:#6F42C1;">batch/v1</span></span>
<span class="line"><span style="color:#6F42C1;">batch/v1beta1</span></span>
<span class="line"><span style="color:#6F42C1;">certificates.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">coordination.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">crd.projectcalico.org/v1</span></span>
<span class="line"><span style="color:#6F42C1;">discovery.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">discovery.k8s.io/v1beta1</span></span>
<span class="line"><span style="color:#6F42C1;">events.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">events.k8s.io/v1beta1</span></span>
<span class="line"><span style="color:#6F42C1;">flowcontrol.apiserver.k8s.io/v1beta1</span></span>
<span class="line"><span style="color:#6F42C1;">metrics.k8s.io/v1beta1</span></span>
<span class="line"><span style="color:#6F42C1;">networking.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">node.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">node.k8s.io/v1beta1</span></span>
<span class="line"><span style="color:#6F42C1;">policy/v1</span></span>
<span class="line"><span style="color:#6F42C1;">policy/v1beta1</span></span>
<span class="line"><span style="color:#6F42C1;">rbac.authorization.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">scheduling.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">storage.k8s.io/v1</span></span>
<span class="line"><span style="color:#6F42C1;">storage.k8s.io/v1beta1</span></span>
<span class="line"><span style="color:#6F42C1;">v1</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@kube-master </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]# kubectl api-resources</span></span>
<span class="line"><span style="color:#B392F0;">NAME</span><span style="color:#E1E4E8;">                              </span><span style="color:#9ECBFF;">SHORTNAMES</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">APIVERSION</span><span style="color:#E1E4E8;">                             </span><span style="color:#9ECBFF;">NAMESPACED</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">KIND</span></span>
<span class="line"><span style="color:#B392F0;">bindings</span><span style="color:#E1E4E8;">                                       </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">Binding</span></span>
<span class="line"><span style="color:#B392F0;">componentstatuses</span><span style="color:#E1E4E8;">                 </span><span style="color:#9ECBFF;">cs</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">ComponentStatus</span></span>
<span class="line"><span style="color:#B392F0;">configmaps</span><span style="color:#E1E4E8;">                        </span><span style="color:#9ECBFF;">cm</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">ConfigMap</span></span>
<span class="line"><span style="color:#B392F0;">endpoints</span><span style="color:#E1E4E8;">                         </span><span style="color:#9ECBFF;">ep</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">Endpoints</span></span>
<span class="line"><span style="color:#B392F0;">events</span><span style="color:#E1E4E8;">                            </span><span style="color:#9ECBFF;">ev</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">Event</span></span>
<span class="line"><span style="color:#B392F0;">limitranges</span><span style="color:#E1E4E8;">                       </span><span style="color:#9ECBFF;">limits</span><span style="color:#E1E4E8;">       </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">LimitRange</span></span>
<span class="line"><span style="color:#B392F0;">namespaces</span><span style="color:#E1E4E8;">                        </span><span style="color:#9ECBFF;">ns</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">Namespace</span></span>
<span class="line"><span style="color:#B392F0;">nodes</span><span style="color:#E1E4E8;">                             </span><span style="color:#9ECBFF;">no</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">Node</span></span>
<span class="line"><span style="color:#B392F0;">persistentvolumeclaims</span><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">pvc</span><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">PersistentVolumeClaim</span></span>
<span class="line"><span style="color:#B392F0;">persistentvolumes</span><span style="color:#E1E4E8;">                 </span><span style="color:#9ECBFF;">pv</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">PersistentVolume</span></span>
<span class="line"><span style="color:#B392F0;">pods</span><span style="color:#E1E4E8;">                              </span><span style="color:#9ECBFF;">po</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">Pod</span></span>
<span class="line"><span style="color:#B392F0;">podtemplates</span><span style="color:#E1E4E8;">                                   </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">PodTemplate</span></span>
<span class="line"><span style="color:#B392F0;">replicationcontrollers</span><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">rc</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">ReplicationController</span></span>
<span class="line"><span style="color:#B392F0;">resourcequotas</span><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">quota</span><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">ResourceQuota</span></span>
<span class="line"><span style="color:#B392F0;">secrets</span><span style="color:#E1E4E8;">                                        </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">Secret</span></span>
<span class="line"><span style="color:#B392F0;">serviceaccounts</span><span style="color:#E1E4E8;">                   </span><span style="color:#9ECBFF;">sa</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">ServiceAccount</span></span>
<span class="line"><span style="color:#B392F0;">services</span><span style="color:#E1E4E8;">                          </span><span style="color:#9ECBFF;">svc</span><span style="color:#E1E4E8;">          </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">                                     </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">Service</span></span>
<span class="line"><span style="color:#B392F0;">mutatingwebhookconfigurations</span><span style="color:#E1E4E8;">                  </span><span style="color:#9ECBFF;">admissionregistration.k8s.io/v1</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">MutatingWebhookConfiguration</span></span>
<span class="line"><span style="color:#B392F0;">。。。。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@kube-master </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]# kubectl api-resources</span></span>
<span class="line"><span style="color:#6F42C1;">NAME</span><span style="color:#24292E;">                              </span><span style="color:#032F62;">SHORTNAMES</span><span style="color:#24292E;">   </span><span style="color:#032F62;">APIVERSION</span><span style="color:#24292E;">                             </span><span style="color:#032F62;">NAMESPACED</span><span style="color:#24292E;">   </span><span style="color:#032F62;">KIND</span></span>
<span class="line"><span style="color:#6F42C1;">bindings</span><span style="color:#24292E;">                                       </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">         </span><span style="color:#032F62;">Binding</span></span>
<span class="line"><span style="color:#6F42C1;">componentstatuses</span><span style="color:#24292E;">                 </span><span style="color:#032F62;">cs</span><span style="color:#24292E;">           </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">        </span><span style="color:#032F62;">ComponentStatus</span></span>
<span class="line"><span style="color:#6F42C1;">configmaps</span><span style="color:#24292E;">                        </span><span style="color:#032F62;">cm</span><span style="color:#24292E;">           </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">         </span><span style="color:#032F62;">ConfigMap</span></span>
<span class="line"><span style="color:#6F42C1;">endpoints</span><span style="color:#24292E;">                         </span><span style="color:#032F62;">ep</span><span style="color:#24292E;">           </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">         </span><span style="color:#032F62;">Endpoints</span></span>
<span class="line"><span style="color:#6F42C1;">events</span><span style="color:#24292E;">                            </span><span style="color:#032F62;">ev</span><span style="color:#24292E;">           </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">         </span><span style="color:#032F62;">Event</span></span>
<span class="line"><span style="color:#6F42C1;">limitranges</span><span style="color:#24292E;">                       </span><span style="color:#032F62;">limits</span><span style="color:#24292E;">       </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">         </span><span style="color:#032F62;">LimitRange</span></span>
<span class="line"><span style="color:#6F42C1;">namespaces</span><span style="color:#24292E;">                        </span><span style="color:#032F62;">ns</span><span style="color:#24292E;">           </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">        </span><span style="color:#032F62;">Namespace</span></span>
<span class="line"><span style="color:#6F42C1;">nodes</span><span style="color:#24292E;">                             </span><span style="color:#032F62;">no</span><span style="color:#24292E;">           </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">        </span><span style="color:#032F62;">Node</span></span>
<span class="line"><span style="color:#6F42C1;">persistentvolumeclaims</span><span style="color:#24292E;">            </span><span style="color:#032F62;">pvc</span><span style="color:#24292E;">          </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">         </span><span style="color:#032F62;">PersistentVolumeClaim</span></span>
<span class="line"><span style="color:#6F42C1;">persistentvolumes</span><span style="color:#24292E;">                 </span><span style="color:#032F62;">pv</span><span style="color:#24292E;">           </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">        </span><span style="color:#032F62;">PersistentVolume</span></span>
<span class="line"><span style="color:#6F42C1;">pods</span><span style="color:#24292E;">                              </span><span style="color:#032F62;">po</span><span style="color:#24292E;">           </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">         </span><span style="color:#032F62;">Pod</span></span>
<span class="line"><span style="color:#6F42C1;">podtemplates</span><span style="color:#24292E;">                                   </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">         </span><span style="color:#032F62;">PodTemplate</span></span>
<span class="line"><span style="color:#6F42C1;">replicationcontrollers</span><span style="color:#24292E;">            </span><span style="color:#032F62;">rc</span><span style="color:#24292E;">           </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">         </span><span style="color:#032F62;">ReplicationController</span></span>
<span class="line"><span style="color:#6F42C1;">resourcequotas</span><span style="color:#24292E;">                    </span><span style="color:#032F62;">quota</span><span style="color:#24292E;">        </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">         </span><span style="color:#032F62;">ResourceQuota</span></span>
<span class="line"><span style="color:#6F42C1;">secrets</span><span style="color:#24292E;">                                        </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">         </span><span style="color:#032F62;">Secret</span></span>
<span class="line"><span style="color:#6F42C1;">serviceaccounts</span><span style="color:#24292E;">                   </span><span style="color:#032F62;">sa</span><span style="color:#24292E;">           </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">         </span><span style="color:#032F62;">ServiceAccount</span></span>
<span class="line"><span style="color:#6F42C1;">services</span><span style="color:#24292E;">                          </span><span style="color:#032F62;">svc</span><span style="color:#24292E;">          </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">                                     </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">         </span><span style="color:#032F62;">Service</span></span>
<span class="line"><span style="color:#6F42C1;">mutatingwebhookconfigurations</span><span style="color:#24292E;">                  </span><span style="color:#032F62;">admissionregistration.k8s.io/v1</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">        </span><span style="color:#032F62;">MutatingWebhookConfiguration</span></span>
<span class="line"><span style="color:#6F42C1;">。。。。</span></span></code></pre></div><h1 id="_4-yaml基本语法" tabindex="-1">4.YAML基本语法 <a class="header-anchor" href="#_4-yaml基本语法" aria-label="Permalink to &quot;4.YAML基本语法&quot;">​</a></h1><ul><li><strong>缩进</strong>：使用空格进行缩进，不同级别的数据使用不同数量的空格进行区分。</li><li><strong>键值对</strong>：使用冒号:分隔键和值。</li><li><strong>列表</strong>：使用短横线-加上空格来开始列表中的项</li></ul><ul><li>开始用三个--- 开始，代表新的yaml资源开始</li><li>使用#标识注释</li></ul><blockquote><p>用空格做为缩进</p><p>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</p><p>低版本缩进时不允许使用Tab键，只允许使用空格</p></blockquote><h2 id="_4-1-yaml支持的数据结构" tabindex="-1">4.1 YAML支持的数据结构 <a class="header-anchor" href="#_4-1-yaml支持的数据结构" aria-label="Permalink to &quot;4.1 YAML支持的数据结构&quot;">​</a></h2><h3 id="对象" tabindex="-1">对象 <a class="header-anchor" href="#对象" aria-label="Permalink to &quot;对象&quot;">​</a></h3><ul><li>键值对的集合</li><li>又称为映射（mapping）/哈希（hashes）/字典（dictionary）</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">对象类型：对象的一组键值对，使用冒号结构表示</span></span>
<span class="line"><span style="color:#9ECBFF;">name:Tom</span></span>
<span class="line"><span style="color:#9ECBFF;">age:18</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">Yaml 也允许另一种写法，将所有键值对写成一个行内对象</span></span>
<span class="line"><span style="color:#9ECBFF;">hash:{name:Tom,age:18}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">对象类型：对象的一组键值对，使用冒号结构表示</span></span>
<span class="line"><span style="color:#032F62;">name:Tom</span></span>
<span class="line"><span style="color:#032F62;">age:18</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">Yaml 也允许另一种写法，将所有键值对写成一个行内对象</span></span>
<span class="line"><span style="color:#032F62;">hash:{name:Tom,age:18}</span></span></code></pre></div><h3 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-label="Permalink to &quot;数组&quot;">​</a></h3><ul><li>一组按次序排列的值</li><li>又称为序列（sequence）/列表（list）</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">数组类型：一组连词线开头的行，构成一个数组</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">People</span></span>
<span class="line"><span style="color:#E1E4E8;">-  </span><span style="color:#9ECBFF;">tom</span></span>
<span class="line"><span style="color:#E1E4E8;">-  </span><span style="color:#9ECBFF;">han</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">数组也可以采用行内表示法</span></span>
<span class="line"><span style="color:#85E89D;">People</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">tom</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">han</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">数组类型：一组连词线开头的行，构成一个数组</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">People</span></span>
<span class="line"><span style="color:#24292E;">-  </span><span style="color:#032F62;">tom</span></span>
<span class="line"><span style="color:#24292E;">-  </span><span style="color:#032F62;">han</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">数组也可以采用行内表示法</span></span>
<span class="line"><span style="color:#22863A;">People</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">tom</span><span style="color:#24292E;">,</span><span style="color:#032F62;">han</span><span style="color:#24292E;">]</span></span></code></pre></div><h2 id="_4-2-查看文档" tabindex="-1">4.2 查看文档 <a class="header-anchor" href="#_4-2-查看文档" aria-label="Permalink to &quot;4.2 查看文档&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">api-versions</span><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">#查看api版本</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">api-resources</span><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">#查看api资源</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">explain</span><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">资源类</span><span style="color:#E1E4E8;">型</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">查看yaml文件字段，用于参考</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">对于不知道具体意思的字段，可以去k8s官网进行查询</span></span>
<span class="line"><span style="color:#B392F0;">官网查询地址为：https://kubernetes.io/zh/docs/home/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#比如,查看pod</span></span>
<span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">explain</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pods</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">api-versions</span><span style="color:#24292E;">    </span><span style="color:#6A737D;">#查看api版本</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">api-resources</span><span style="color:#24292E;">    </span><span style="color:#6A737D;">#查看api资源</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">explain</span><span style="color:#24292E;">  </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">资源类</span><span style="color:#24292E;">型</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">  </span><span style="color:#032F62;">查看yaml文件字段，用于参考</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">对于不知道具体意思的字段，可以去k8s官网进行查询</span></span>
<span class="line"><span style="color:#6F42C1;">官网查询地址为：https://kubernetes.io/zh/docs/home/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#比如,查看pod</span></span>
<span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">explain</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pods</span></span></code></pre></div><h2 id="_4-3-案例" tabindex="-1">4.3 案例 <a class="header-anchor" href="#_4-3-案例" aria-label="Permalink to &quot;4.3 案例&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># cat nginx.yaml </span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Deployment</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">#类型，是deployment控制器，kubectl explain  Deployment</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">#API版本，# kubectl explain  Deployment.apiVersion</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#pod的元数据信息，kubectl explain  Deployment.metadata</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#自定义pod的标签，# kubectl explain  Deployment.metadata.labels</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">linux66-nginx-deployment-label</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#标签名称为app值为linux66-nginx-deployment-label，后面会用到此标签 </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">linux66-nginx-deployment</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#pod的名称</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">namespace</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">linux66</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#pod的namespace，默认是defaule</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#定义deployment中容器的详细信息，kubectl explain  Deployment.spec</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">replicas</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#创建出的pod的副本数，即多少个pod，默认值为1</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">selector</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#定义标签选择器</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">matchLabels</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#定义匹配的标签，必须要设置</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">linux66-nginx-selector</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#匹配的目标标签，</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#定义模板，必须定义，模板是起到描述要创建的pod的作用</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#定义模板元数据</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#定义模板label，Deployment.spec.template.metadata.labels</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">linux66-nginx-selector</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#定义标签，等于Deployment.spec.selector.matchLabels</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#定义pod信息</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">containers:#定义pod中容器列表，可以多个至少一个，pod不能动态增减容器</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">linux66-nginx-container</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#容器名称</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#镜像地址</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">#command: [&quot;/apps/tomcat/bin/run_tomcat.sh&quot;] #容器启动执行的命令或脚本</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">#imagePullPolicy: IfNotPresent  #如果本地有镜像，就使用本地镜像，如果没有就根据指定的镜像去下载镜像</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">imagePullPolicy</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Always</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#拉取镜像策略，每次重建容器，无论本地有没有镜像，都会重新下载镜像</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#定义容器端口列表</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">containerPort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#定义一个端口</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">protocol</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">TCP</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#端口协议</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">http</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#端口名称</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">containerPort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">443</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#定义一个端口</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">protocol</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">TCP</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#端口协议</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">https</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#端口名称</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">env</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#配置环境变量</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;password&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#变量名称。必须要用引号引起来</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">value</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;123456&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#当前变量的值</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#另一个变量名称</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">value</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;18&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#另一个变量的值</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">resources</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#对资源的请求设置和限制设置</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">limits</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#资源限制设置，上限</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">500m</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">#cpu的限制，单位为core数，可以写0.5或者500m等CPU压缩值</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">2Gi</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#内存限制，单位可以为Mib/Gib，将用于docker run --memory参数</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">requests</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#资源请求的设置</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">cpu</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">200m</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#cpu请求数，容器启动的初始可用数量,可以写0.5或者500m等CPU压缩值</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">memory</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">512Mi</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#内存请求大小，容器启动的初始可用数量，用于调度pod时候使用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">---</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Service</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#类型为service</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#service API版本， service.apiVersion</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#定义service元数据，service.metadata</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#自定义标签，service.metadata.labels</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">linux66-nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#定义service标签的内容</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">linux66-nginx-spec</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#定义service的名称，此名称会被DNS解析</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">namespace</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">linux66</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#该service隶属于的namespaces名称，即把service创建到哪个namespace里面</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#定义service的详细信息，service.spec</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">NodePort</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#service的类型，定义服务的访问方式，默认为ClusterIP， service.spec.type</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#定义访问端口， service.spec.ports</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">http</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#定义一个端口名称</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#service 80端口</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">protocol</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">TCP</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#协议类型</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">targetPort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#目标pod的端口</span></span>
<span class="line"><span style="color:#85E89D;">nodePort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">30001</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#node节点暴露的端口，是部署k8s时指定的端口范围内的端口</span></span>
<span class="line"><span style="color:#6A737D;">#请求转发过程：请求先转发给node，然后由node转发给service，由service转发给pod</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">https</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#SSL 端口</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">443</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#service 443端口</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">protocol</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">TCP</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#端口协议</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">targetPort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">443</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#目标pod端口</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">nodePort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">30043</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#node节点暴露的SSL端口，是部署k8s时指定的端口范围内的端口</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">selector</span><span style="color:#E1E4E8;">: </span><span style="color:#6A737D;">#service的标签选择器，定义要访问的目标pod</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">linux66-nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#将流量路到选择的pod上，须等于Deployment.spec.selector.matchLabels</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># cat nginx.yaml </span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Deployment</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">#类型，是deployment控制器，kubectl explain  Deployment</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">#API版本，# kubectl explain  Deployment.apiVersion</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#pod的元数据信息，kubectl explain  Deployment.metadata</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#自定义pod的标签，# kubectl explain  Deployment.metadata.labels</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">linux66-nginx-deployment-label</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#标签名称为app值为linux66-nginx-deployment-label，后面会用到此标签 </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">linux66-nginx-deployment</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#pod的名称</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">namespace</span><span style="color:#24292E;">: </span><span style="color:#032F62;">linux66</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#pod的namespace，默认是defaule</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#定义deployment中容器的详细信息，kubectl explain  Deployment.spec</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">replicas</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#创建出的pod的副本数，即多少个pod，默认值为1</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">selector</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#定义标签选择器</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">matchLabels</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#定义匹配的标签，必须要设置</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">linux66-nginx-selector</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#匹配的目标标签，</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">template</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#定义模板，必须定义，模板是起到描述要创建的pod的作用</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">metadata</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#定义模板元数据</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#定义模板label，Deployment.spec.template.metadata.labels</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">linux66-nginx-selector</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#定义标签，等于Deployment.spec.selector.matchLabels</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">spec</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#定义pod信息</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#032F62;">containers:#定义pod中容器列表，可以多个至少一个，pod不能动态增减容器</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">linux66-nginx-container</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#容器名称</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">nginx</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#镜像地址</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">#command: [&quot;/apps/tomcat/bin/run_tomcat.sh&quot;] #容器启动执行的命令或脚本</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">#imagePullPolicy: IfNotPresent  #如果本地有镜像，就使用本地镜像，如果没有就根据指定的镜像去下载镜像</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">imagePullPolicy</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Always</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#拉取镜像策略，每次重建容器，无论本地有没有镜像，都会重新下载镜像</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#定义容器端口列表</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">containerPort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">80</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#定义一个端口</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">protocol</span><span style="color:#24292E;">: </span><span style="color:#032F62;">TCP</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#端口协议</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">http</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#端口名称</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">containerPort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">443</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#定义一个端口</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">protocol</span><span style="color:#24292E;">: </span><span style="color:#032F62;">TCP</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#端口协议</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">https</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#端口名称</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">env</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#配置环境变量</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;password&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#变量名称。必须要用引号引起来</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">value</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;123456&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#当前变量的值</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#另一个变量名称</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">value</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;18&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#另一个变量的值</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">resources</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#对资源的请求设置和限制设置</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">limits</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#资源限制设置，上限</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">500m</span><span style="color:#24292E;">  </span><span style="color:#6A737D;">#cpu的限制，单位为core数，可以写0.5或者500m等CPU压缩值</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">2Gi</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#内存限制，单位可以为Mib/Gib，将用于docker run --memory参数</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">requests</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#资源请求的设置</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">cpu</span><span style="color:#24292E;">: </span><span style="color:#032F62;">200m</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#cpu请求数，容器启动的初始可用数量,可以写0.5或者500m等CPU压缩值</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">memory</span><span style="color:#24292E;">: </span><span style="color:#032F62;">512Mi</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#内存请求大小，容器启动的初始可用数量，用于调度pod时候使用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">---</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Service</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#类型为service</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#service API版本， service.apiVersion</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#定义service元数据，service.metadata</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#自定义标签，service.metadata.labels</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">linux66-nginx</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#定义service标签的内容</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">linux66-nginx-spec</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#定义service的名称，此名称会被DNS解析</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">namespace</span><span style="color:#24292E;">: </span><span style="color:#032F62;">linux66</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#该service隶属于的namespaces名称，即把service创建到哪个namespace里面</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#定义service的详细信息，service.spec</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">NodePort</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#service的类型，定义服务的访问方式，默认为ClusterIP， service.spec.type</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#定义访问端口， service.spec.ports</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">http</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#定义一个端口名称</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">80</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#service 80端口</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">protocol</span><span style="color:#24292E;">: </span><span style="color:#032F62;">TCP</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#协议类型</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">targetPort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">80</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#目标pod的端口</span></span>
<span class="line"><span style="color:#22863A;">nodePort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">30001</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#node节点暴露的端口，是部署k8s时指定的端口范围内的端口</span></span>
<span class="line"><span style="color:#6A737D;">#请求转发过程：请求先转发给node，然后由node转发给service，由service转发给pod</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">https</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#SSL 端口</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">443</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#service 443端口</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">protocol</span><span style="color:#24292E;">: </span><span style="color:#032F62;">TCP</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#端口协议</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">targetPort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">443</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#目标pod端口</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">nodePort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">30043</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#node节点暴露的SSL端口，是部署k8s时指定的端口范围内的端口</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">selector</span><span style="color:#24292E;">: </span><span style="color:#6A737D;">#service的标签选择器，定义要访问的目标pod</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">linux66-nginx</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#将流量路到选择的pod上，须等于Deployment.spec.selector.matchLabels</span></span></code></pre></div><h1 id="_5-资源分配" tabindex="-1">5. 资源分配 <a class="header-anchor" href="#_5-资源分配" aria-label="Permalink to &quot;5. 资源分配&quot;">​</a></h1><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">job/cronjob</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">0.3</span><span style="color:#9ECBFF;">/512Mi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">job/cronjob</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">0.3</span><span style="color:#032F62;">/512Mi</span></span></code></pre></div>`,30),e=[o];function c(t,r,y,E,i,F){return n(),a("div",null,e)}const u=s(p,[["render",c]]);export{C as __pageData,u as default};
