import{_ as s,o as n,c as a,R as l}from"./chunks/framework.zUbWieqp.js";const q=JSON.parse('{"title":"1.golang字符串","description":"","frontmatter":{},"headers":[],"relativePath":"guide/go/10-Go字符串.md","filePath":"guide/go/10-Go字符串.md","lastUpdated":1725357249000}'),p={name:"guide/go/10-Go字符串.md"},o=l(`<p><a href="https://www.cainiaojc.com/golang/go-scope-of-variables.html" target="_blank" rel="noreferrer">https://www.cainiaojc.com/golang/go-scope-of-variables.html</a></p><h1 id="_1-golang字符串" tabindex="-1">1.golang字符串 <a class="header-anchor" href="#_1-golang字符串" aria-label="Permalink to &quot;1.golang字符串&quot;">​</a></h1><p>一个Go语言字符串是一个任意<code>字节的常量序列</code>。[]byte</p><h2 id="_1-1go语言字符串字面量" tabindex="-1">1.1go语言字符串字面量 <a class="header-anchor" href="#_1-1go语言字符串字面量" aria-label="Permalink to &quot;1.1go语言字符串字面量&quot;">​</a></h2><p>Golang 支持两种类型的字符串字面量：</p><ul><li>解释型字符串</li><li>非解释型字符串</li></ul><p>所谓的解释型字符串就是用双引号括起来的字符串(&quot;&quot;)，其中的转义字符会被替换掉，这些转义字符包括：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">\\a    // 响铃     </span></span>
<span class="line"><span style="color:#e1e4e8;">\\b    // 退格</span></span>
<span class="line"><span style="color:#e1e4e8;">\\f    // 换页</span></span>
<span class="line"><span style="color:#e1e4e8;">\\n    // 换行</span></span>
<span class="line"><span style="color:#e1e4e8;">\\r    // 回车</span></span>
<span class="line"><span style="color:#e1e4e8;">\\t    // 制表符</span></span>
<span class="line"><span style="color:#e1e4e8;">\\u    // Unicode 字符</span></span>
<span class="line"><span style="color:#e1e4e8;">\\v    // 垂直制表符</span></span>
<span class="line"><span style="color:#e1e4e8;">\\&quot;    // 双引号</span></span>
<span class="line"><span style="color:#e1e4e8;">\\\\    // 反斜杠</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">\\a    // 响铃     </span></span>
<span class="line"><span style="color:#24292e;">\\b    // 退格</span></span>
<span class="line"><span style="color:#24292e;">\\f    // 换页</span></span>
<span class="line"><span style="color:#24292e;">\\n    // 换行</span></span>
<span class="line"><span style="color:#24292e;">\\r    // 回车</span></span>
<span class="line"><span style="color:#24292e;">\\t    // 制表符</span></span>
<span class="line"><span style="color:#24292e;">\\u    // Unicode 字符</span></span>
<span class="line"><span style="color:#24292e;">\\v    // 垂直制表符</span></span>
<span class="line"><span style="color:#24292e;">\\&quot;    // 双引号</span></span>
<span class="line"><span style="color:#24292e;">\\\\    // 反斜杠</span></span></code></pre></div><p>在Go语言中，字符串字面量使用双引号<code>&quot;&quot;</code>或者反引号\`\`来创建。</p><p>双引号用来可解释的字符串，支持转义，但不能用来引用多行；</p><p>反引号用来创建原生的字符串字面量，可能由多行组成，但不支持转义，并且可以包含除了反引号其他所有字符。</p><p>双引号创建可解析的字符串应用最广泛，反引号用来创建原生的字符串则多用于书写多行消息，html以及正则表达式。</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hello world&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> s1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hello word&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    s3 </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hello world&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;s: </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, s)</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;s1: </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, s1)</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;s3: </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, s3)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    s4 </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`</span></span>
<span class="line"><span style="color:#9ECBFF;">    	line1 </span></span>
<span class="line"><span style="color:#9ECBFF;">    	line2 </span></span>
<span class="line"><span style="color:#9ECBFF;">    	line3</span></span>
<span class="line"><span style="color:#9ECBFF;">    \`</span></span>
<span class="line"><span style="color:#E1E4E8;">     fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;s4: </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, s4)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello world&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> s1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello word&quot;</span></span>
<span class="line"><span style="color:#24292E;">    s3 </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello world&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;s: </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, s)</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;s1: </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, s1)</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;s3: </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, s3)</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    s4 </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`</span></span>
<span class="line"><span style="color:#032F62;">    	line1 </span></span>
<span class="line"><span style="color:#032F62;">    	line2 </span></span>
<span class="line"><span style="color:#032F62;">    	line3</span></span>
<span class="line"><span style="color:#032F62;">    \`</span></span>
<span class="line"><span style="color:#24292E;">     fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;s4: </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, s4)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="_1-2go语言字符串连接" tabindex="-1">1.2go语言字符串连接 <a class="header-anchor" href="#_1-2go语言字符串连接" aria-label="Permalink to &quot;1.2go语言字符串连接&quot;">​</a></h2><ul><li>使用加号</li></ul><p>虽然Go语言中的字符串是不可变的，但是字符串支持<code>+</code>级联操作和<code>+=</code>追加操作</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    name </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;tom&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    age </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;20&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    msg </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> age</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;msg: </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, msg)</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;------------------&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    msg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    msg </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> name</span></span>
<span class="line"><span style="color:#E1E4E8;">     msg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    msg </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> age</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;msg: </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, msg)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    name </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;tom&quot;</span></span>
<span class="line"><span style="color:#24292E;">    age </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;20&quot;</span></span>
<span class="line"><span style="color:#24292E;">    msg </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> age</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;msg: </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, msg)</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;------------------&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    msg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    msg </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> name</span></span>
<span class="line"><span style="color:#24292E;">     msg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    msg </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> age</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;msg: </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, msg)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="fmt-sprintf-函数" tabindex="-1">fmt.Sprintf()函数 <a class="header-anchor" href="#fmt-sprintf-函数" aria-label="Permalink to &quot;fmt.Sprintf()函数&quot;">​</a></h3><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	name </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;tom&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	age </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;20&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span></span>
<span class="line"><span style="color:#E1E4E8;">	msg </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> fmt.</span><span style="color:#79B8FF;">Sprintf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">, </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, name ,age)</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;msg: </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,msg)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	name </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;tom&quot;</span></span>
<span class="line"><span style="color:#24292E;">	age </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;20&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span></span>
<span class="line"><span style="color:#24292E;">	msg </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> fmt.</span><span style="color:#005CC5;">Sprintf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">, </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, name ,age)</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;msg: </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,msg)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>内部使用[]byte实现，不像直接运算符这种会产生很多临时的字符串，但是内部的逻辑比较复杂，有很多额外的判断，还用到了<code>interface</code>,所以性能也不是很好</p></blockquote><h3 id="string-join" tabindex="-1">string.Join() <a class="header-anchor" href="#string-join" aria-label="Permalink to &quot;string.Join()&quot;">​</a></h3><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">strings</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    name </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;tom&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    age </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;20&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    msg </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> strings.</span><span style="color:#79B8FF;">Join</span><span style="color:#E1E4E8;">([]</span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;">{name, age},</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;msg: </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, msg)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">strings</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    name </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;tom&quot;</span></span>
<span class="line"><span style="color:#24292E;">    age </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;20&quot;</span></span>
<span class="line"><span style="color:#24292E;">    msg </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> strings.</span><span style="color:#005CC5;">Join</span><span style="color:#24292E;">([]</span><span style="color:#D73A49;">string</span><span style="color:#24292E;">{name, age},</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;msg: </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, msg)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>join会先根据字符串数组的内容，计算出一个拼接之后的长度，然后申请对应大小的内存，一个一个字符串填入，在已有一个数组的情况下，这种效率会很高，但是本来没有，去构造这个数据的代价也不小</p></blockquote><p>buffer.WriteString()</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">bytes</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> buffer bytes.Buffer</span></span>
<span class="line"><span style="color:#E1E4E8;">    buffer.</span><span style="color:#79B8FF;">WriteString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;tom&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    buffer.</span><span style="color:#79B8FF;">WriteString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    buffer.</span><span style="color:#79B8FF;">WriteString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;20&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;buffer.String(): </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, buffer.</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">bytes</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> buffer bytes.Buffer</span></span>
<span class="line"><span style="color:#24292E;">    buffer.</span><span style="color:#005CC5;">WriteString</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;tom&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    buffer.</span><span style="color:#005CC5;">WriteString</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    buffer.</span><span style="color:#005CC5;">WriteString</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;20&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;buffer.String(): </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, buffer.</span><span style="color:#005CC5;">String</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>这个比较理想，可以当成可变字符串使用，对内存的增长也有优化，如果能预估字符串长度，还可以用<code>buffer.Grow()</code>接口来设置capacity</p></blockquote><h2 id="_1-3go语言字符串转义字符" tabindex="-1">1.3go语言字符串转义字符 <a class="header-anchor" href="#_1-3go语言字符串转义字符" aria-label="Permalink to &quot;1.3go语言字符串转义字符&quot;">​</a></h2><p>Go语言的字符串常见转义符包含回车、换行、单引号、制表符等</p><table><thead><tr><th>转义</th><th>说明</th></tr></thead><tbody><tr><td><code>\\r</code></td><td>回车符（返回行首）</td></tr><tr><td><code>\\n</code></td><td>换行符（直接跳到下一行的同列位置）</td></tr><tr><td><code>\\t</code></td><td>制表符</td></tr><tr><td><code>&#39;</code></td><td>单引号</td></tr><tr><td><code>&quot;</code></td><td>双引号</td></tr><tr><td><code>\\\\</code></td><td>反斜杠</td></tr></tbody></table><ul><li>实例</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">import</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;fmt&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hello </span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;"> world&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">import</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;fmt&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hello </span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;"> world&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="_1-4go语言字符串切片操作" tabindex="-1">1.4go语言字符串切片操作 <a class="header-anchor" href="#_1-4go语言字符串切片操作" aria-label="Permalink to &quot;1.4go语言字符串切片操作&quot;">​</a></h2><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    str </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hello world&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    n </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#E1E4E8;">    m </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(str[n])    </span><span style="color:#6A737D;">//获取字符串索引位置为n的原始字节</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(str[n:m])  </span><span style="color:#6A737D;">//截取的字符串索引位置 n 到 m-1的字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(str[n:])   </span><span style="color:#6A737D;">// 截取字符串索引位置为n 到 len(s)-1的字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(str[:m])   </span><span style="color:#6A737D;">// 截取的字符串索引位置0 到m-1的字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    str </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello world&quot;</span></span>
<span class="line"><span style="color:#24292E;">    n </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#24292E;">    m </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(str[n])    </span><span style="color:#6A737D;">//获取字符串索引位置为n的原始字节</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(str[n:m])  </span><span style="color:#6A737D;">//截取的字符串索引位置 n 到 m-1的字符串</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(str[n:])   </span><span style="color:#6A737D;">// 截取字符串索引位置为n 到 len(s)-1的字符串</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(str[:m])   </span><span style="color:#6A737D;">// 截取的字符串索引位置0 到m-1的字符串</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="_1-5go语言字符串常用方法" tabindex="-1">1.5go语言字符串常用方法 <a class="header-anchor" href="#_1-5go语言字符串常用方法" aria-label="Permalink to &quot;1.5go语言字符串常用方法&quot;">​</a></h2><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>len(str)</td><td>求长度</td></tr><tr><td>+或fmt.Sprintf</td><td>拼接字符串</td></tr><tr><td>strings.Split</td><td>分割</td></tr><tr><td>strings.contains</td><td>判断是否包含</td></tr><tr><td>strings.HasPrefix, strings.HasSuffix</td><td>前缀/后缀判断</td></tr><tr><td>strings.Index(), strings.LastIndex()</td><td>子串出现的位置</td></tr><tr><td>strings.Join(a[]string, sep string)</td><td>join操作</td></tr></tbody></table><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">strings</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    s </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hello world&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;len(s): </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(s))</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;strings.Split(s, </span><span style="color:#79B8FF;">\\&quot;\\&quot;</span><span style="color:#9ECBFF;">): </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, strings.</span><span style="color:#79B8FF;">Split</span><span style="color:#E1E4E8;">(s, </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;strings.Contains(s, </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">hello</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">): </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, strings.</span><span style="color:#79B8FF;">Contains</span><span style="color:#E1E4E8;">(s, </span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;strings.HasPrefix(s, </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">hello</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">): </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, strings.</span><span style="color:#79B8FF;">HasPrefix</span><span style="color:#E1E4E8;">(s, </span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;strings.HasSuffix(s,</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">word! </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">): </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, strings.</span><span style="color:#79B8FF;">HasSuffix</span><span style="color:#E1E4E8;">(s, </span><span style="color:#9ECBFF;">&quot;world! &quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;strings.Index(s,</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">1</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">): </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,strings.</span><span style="color:#79B8FF;">Index</span><span style="color:#E1E4E8;">(s, </span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;strings.LastIndex(s,</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">1</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">): </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,strings.</span><span style="color:#79B8FF;">LastIndex</span><span style="color:#E1E4E8;">(s,</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">strings</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    s </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello world&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;len(s): </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(s))</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;strings.Split(s, </span><span style="color:#005CC5;">\\&quot;\\&quot;</span><span style="color:#032F62;">): </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, strings.</span><span style="color:#005CC5;">Split</span><span style="color:#24292E;">(s, </span><span style="color:#032F62;">&quot; &quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;strings.Contains(s, </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">hello</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">): </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, strings.</span><span style="color:#005CC5;">Contains</span><span style="color:#24292E;">(s, </span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;strings.HasPrefix(s, </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">hello</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">): </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, strings.</span><span style="color:#005CC5;">HasPrefix</span><span style="color:#24292E;">(s, </span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;strings.HasSuffix(s,</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">word! </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">): </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, strings.</span><span style="color:#005CC5;">HasSuffix</span><span style="color:#24292E;">(s, </span><span style="color:#032F62;">&quot;world! &quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;strings.Index(s,</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">1</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">): </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,strings.</span><span style="color:#005CC5;">Index</span><span style="color:#24292E;">(s, </span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;strings.LastIndex(s,</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">1</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">): </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,strings.</span><span style="color:#005CC5;">LastIndex</span><span style="color:#24292E;">(s,</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="_1-6-字符和字符串的区别" tabindex="-1">1.6 字符和字符串的区别 <a class="header-anchor" href="#_1-6-字符和字符串的区别" aria-label="Permalink to &quot;1.6 字符和字符串的区别&quot;">​</a></h2><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> ch </span><span style="color:#F97583;">byte</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">//字符</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 1，字符用单引号表示。</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 2，字符，往往都只有一个字符，转义字符除外&#39;\\n&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	ch </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">a</span><span style="color:#9ECBFF;">&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;ch =&quot;</span><span style="color:#E1E4E8;">, ch)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 1，字符串用双引号表示。</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 2，字符串有一个或多个字符组成</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 3，字符串都隐藏了一个结束符，&#39;\\0&#39;，表示空字符</span></span>
<span class="line"><span style="color:#E1E4E8;">	str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;a&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;str =&quot;</span><span style="color:#E1E4E8;">, str)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">//如果只想操作某个字符，可用如下方式，0表示第一个</span></span>
<span class="line"><span style="color:#E1E4E8;">	str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hello go&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;str[0] = </span><span style="color:#79B8FF;">%c</span><span style="color:#9ECBFF;">, str[1] = </span><span style="color:#79B8FF;">%c</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, str[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">], str[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> ch </span><span style="color:#D73A49;">byte</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">//字符</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 1，字符用单引号表示。</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 2，字符，往往都只有一个字符，转义字符除外&#39;\\n&#39;</span></span>
<span class="line"><span style="color:#24292E;">	ch </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">a</span><span style="color:#032F62;">&#39;</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;ch =&quot;</span><span style="color:#24292E;">, ch)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 字符串</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 1，字符串用双引号表示。</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 2，字符串有一个或多个字符组成</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 3，字符串都隐藏了一个结束符，&#39;\\0&#39;，表示空字符</span></span>
<span class="line"><span style="color:#24292E;">	str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;a&quot;</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;str =&quot;</span><span style="color:#24292E;">, str)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">//如果只想操作某个字符，可用如下方式，0表示第一个</span></span>
<span class="line"><span style="color:#24292E;">	str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello go&quot;</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;str[0] = </span><span style="color:#005CC5;">%c</span><span style="color:#032F62;">, str[1] = </span><span style="color:#005CC5;">%c</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, str[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], str[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h1 id="_2-字符串常用" tabindex="-1">2. 字符串常用 <a class="header-anchor" href="#_2-字符串常用" aria-label="Permalink to &quot;2. 字符串常用&quot;">​</a></h1><p>strings</p><h2 id="_2-1-trim" tabindex="-1">2.1 trim <a class="header-anchor" href="#_2-1-trim" aria-label="Permalink to &quot;2.1 trim&quot;">​</a></h2><p>字符串修剪</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">strings</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 反引号和</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 字符串处理</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 1.字符串修剪</span></span>
<span class="line"><span style="color:#E1E4E8;">	s1 </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;  hello world ,&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;去掉逗号:&quot;</span><span style="color:#E1E4E8;">, strings.</span><span style="color:#79B8FF;">Trim</span><span style="color:#E1E4E8;">(s1, </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 2.字符串分割</span></span>
<span class="line"><span style="color:#E1E4E8;">	s2 </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hello,world,go&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;分割字符串:&quot;</span><span style="color:#E1E4E8;">, strings.</span><span style="color:#79B8FF;">Split</span><span style="color:#E1E4E8;">(s2, </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 3.字符串连接</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 4.字符串替换</span></span>
<span class="line"><span style="color:#E1E4E8;">	s4 </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;字符串替换:&quot;</span><span style="color:#E1E4E8;">, strings.</span><span style="color:#79B8FF;">Replace</span><span style="color:#E1E4E8;">(s4, </span><span style="color:#9ECBFF;">&quot;j&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;J&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 5.字符串查找</span></span>
<span class="line"><span style="color:#E1E4E8;">	s5 </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;字符串查找:&quot;</span><span style="color:#E1E4E8;">, strings.</span><span style="color:#79B8FF;">Contains</span><span style="color:#E1E4E8;">(s5, </span><span style="color:#9ECBFF;">&quot;jen&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 6.字符串统计</span></span>
<span class="line"><span style="color:#E1E4E8;">	s6 </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;字符统计:&quot;</span><span style="color:#E1E4E8;">, strings.</span><span style="color:#79B8FF;">Count</span><span style="color:#E1E4E8;">(s6, </span><span style="color:#9ECBFF;">&quot;j&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 7.字符串截取</span></span>
<span class="line"><span style="color:#E1E4E8;">	s7 </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;字符串截取:&quot;</span><span style="color:#E1E4E8;">, s7[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 8.字符串转换</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 小写变大写</span></span>
<span class="line"><span style="color:#E1E4E8;">	s8 </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;字符串转换:&quot;</span><span style="color:#E1E4E8;">, strings.</span><span style="color:#79B8FF;">ToUpper</span><span style="color:#E1E4E8;">(s8))</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 大写变小写</span></span>
<span class="line"><span style="color:#E1E4E8;">	s99 </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;JENKINS&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;字符串转换:&quot;</span><span style="color:#E1E4E8;">, strings.</span><span style="color:#79B8FF;">ToLower</span><span style="color:#E1E4E8;">(s99))</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 9.字符串比较</span></span>
<span class="line"><span style="color:#E1E4E8;">	s9 </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	s10 </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;字符串比较:&quot;</span><span style="color:#E1E4E8;">, s9 </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> s10)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 10.字符串格式化</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">strings</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 反引号和</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 字符串处理</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 1.字符串修剪</span></span>
<span class="line"><span style="color:#24292E;">	s1 </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;  hello world ,&quot;</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;去掉逗号:&quot;</span><span style="color:#24292E;">, strings.</span><span style="color:#005CC5;">Trim</span><span style="color:#24292E;">(s1, </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 2.字符串分割</span></span>
<span class="line"><span style="color:#24292E;">	s2 </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello,world,go&quot;</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;分割字符串:&quot;</span><span style="color:#24292E;">, strings.</span><span style="color:#005CC5;">Split</span><span style="color:#24292E;">(s2, </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 3.字符串连接</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 4.字符串替换</span></span>
<span class="line"><span style="color:#24292E;">	s4 </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;字符串替换:&quot;</span><span style="color:#24292E;">, strings.</span><span style="color:#005CC5;">Replace</span><span style="color:#24292E;">(s4, </span><span style="color:#032F62;">&quot;j&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;J&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 5.字符串查找</span></span>
<span class="line"><span style="color:#24292E;">	s5 </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;字符串查找:&quot;</span><span style="color:#24292E;">, strings.</span><span style="color:#005CC5;">Contains</span><span style="color:#24292E;">(s5, </span><span style="color:#032F62;">&quot;jen&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 6.字符串统计</span></span>
<span class="line"><span style="color:#24292E;">	s6 </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;字符统计:&quot;</span><span style="color:#24292E;">, strings.</span><span style="color:#005CC5;">Count</span><span style="color:#24292E;">(s6, </span><span style="color:#032F62;">&quot;j&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 7.字符串截取</span></span>
<span class="line"><span style="color:#24292E;">	s7 </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;字符串截取:&quot;</span><span style="color:#24292E;">, s7[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 8.字符串转换</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 小写变大写</span></span>
<span class="line"><span style="color:#24292E;">	s8 </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;字符串转换:&quot;</span><span style="color:#24292E;">, strings.</span><span style="color:#005CC5;">ToUpper</span><span style="color:#24292E;">(s8))</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 大写变小写</span></span>
<span class="line"><span style="color:#24292E;">	s99 </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;JENKINS&quot;</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;字符串转换:&quot;</span><span style="color:#24292E;">, strings.</span><span style="color:#005CC5;">ToLower</span><span style="color:#24292E;">(s99))</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 9.字符串比较</span></span>
<span class="line"><span style="color:#24292E;">	s9 </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#24292E;">	s10 </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;字符串比较:&quot;</span><span style="color:#24292E;">, s9 </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> s10)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 10.字符串格式化</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,43),t=[o];function e(c,r,y,E,i,F){return n(),a("div",null,t)}const C=s(p,[["render",e]]);export{q as __pageData,C as default};
