import{_ as s,o as n,c as a,R as o}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/docker/9-case.md","filePath":"guide/container/docker/9-case.md","lastUpdated":1729160572000}'),l={name:"guide/container/docker/9-case.md"},p=o(`<p>Tini是一个最小化到 init 系统，运行在容器内部，用于启动一个子进程，并等待进程退出时清理僵尸和执行信号转发。 这是一个替代庞大复杂的systemd体系的解决方案，已经集成到Docker 1.13中，并包含在Docker CE的所有版本</p><p>Tini的优点:</p><ul><li>可以避免应用程序生成僵尸进程</li><li>可以处理Docker进程中运行的程序的信号，例如，通过Tini， SIGTERM 可以终止进程，不需要你明确安装一个信号处理器</li></ul><p>要激活Tini，在 docker run 命令中传递 --init 参数就可以</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"> docker run --init -it centos bash</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"> docker run --init -it centos bash</span></span></code></pre></div><p><strong>使用Tini可以让Docker容器更优雅的退出. 正常情况下, 当Docker容器退出时, 容器内的1号进程将会收到SIGTERM信号来优雅的退出, 但当容器内还有其他子进程时, 其他的子进程收到的信号是SIGKILL, 而不是SIGTERM. 这就导致了哪怕子进程中对SIGTERM信号进行了捕获处理, 最终也不会收到该信号. 而收到了强制杀死(kill -9)的信号</strong></p><p>很早之前的版本通过以下方式</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># Add Tini</span></span>
<span class="line"><span style="color:#B392F0;">ENV</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">TINI_VERSION</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v0.19.0</span></span>
<span class="line"><span style="color:#B392F0;">ADD</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/krallin/tini/releases/download/</span><span style="color:#E1E4E8;">\${TINI_VERSION}</span><span style="color:#9ECBFF;">/tini</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/tini</span></span>
<span class="line"><span style="color:#B392F0;">RUN</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">chmod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+x</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/tini</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">ENTRYPOINT</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;/usr/local/bin/tini&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;--&quot;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/docker-entrypoint.sh&quot;]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># Add Tini</span></span>
<span class="line"><span style="color:#6F42C1;">ENV</span><span style="color:#24292E;"> </span><span style="color:#032F62;">TINI_VERSION</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v0.19.0</span></span>
<span class="line"><span style="color:#6F42C1;">ADD</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/krallin/tini/releases/download/</span><span style="color:#24292E;">\${TINI_VERSION}</span><span style="color:#032F62;">/tini</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/tini</span></span>
<span class="line"><span style="color:#6F42C1;">RUN</span><span style="color:#24292E;"> </span><span style="color:#032F62;">chmod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+x</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/tini</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">ENTRYPOINT</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;/usr/local/bin/tini&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;--&quot;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/docker-entrypoint.sh&quot;]</span></span></code></pre></div>`,8),e=[p];function t(c,r,i,E,y,d){return n(),a("div",null,e)}const h=s(l,[["render",t]]);export{u as __pageData,h as default};
