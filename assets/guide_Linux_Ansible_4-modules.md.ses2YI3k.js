import{_ as s,o as a,c as t,R as l}from"./chunks/framework.zUbWieqp.js";const h=JSON.parse('{"title":"1. Ansible 模块","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/Ansible/4-modules.md","filePath":"guide/Linux/Ansible/4-modules.md","lastUpdated":1734517339000}'),n={name:"guide/Linux/Ansible/4-modules.md"},e=l(`<h1 id="_1-ansible-模块" tabindex="-1">1. Ansible 模块 <a class="header-anchor" href="#_1-ansible-模块" aria-label="Permalink to &quot;1. Ansible 模块&quot;">​</a></h1><h2 id="_1-什么是ansible模块" tabindex="-1">1. 什么是Ansible模块？ <a class="header-anchor" href="#_1-什么是ansible模块" aria-label="Permalink to &quot;1. 什么是Ansible模块？&quot;">​</a></h2><p>bash无论在命令行上执行，还是bash脚本中，都需要调用cd、ls、copy、yum等命令；模块就是Ansible的“命令”，模块是ansible命令行和脚本中都需要调用的。常用的Ansible模块有yum、copy、template等</p><h2 id="_2-ansible命令及参数" tabindex="-1">2. Ansible命令及参数 <a class="header-anchor" href="#_2-ansible命令及参数" aria-label="Permalink to &quot;2. Ansible命令及参数&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 语法格式：</span></span>
<span class="line"><span style="color:#B392F0;">ansible</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">pattern_goes_her</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">module_nam</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-a</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">argument</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;"># 也就是:</span></span>
<span class="line"><span style="color:#B392F0;">ansible</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">匹配模式</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">模块</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">-a</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;需要执行的内容&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 解释说明:</span></span>
<span class="line"><span style="color:#B392F0;">匹配模式：即哪些机器生效</span><span style="color:#E1E4E8;"> (可以是某一台, </span><span style="color:#9ECBFF;">或某一组,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">或all</span><span style="color:#E1E4E8;">) , 默认模块为command , 执行常规的shell命令.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 参数:</span></span>
<span class="line"><span style="color:#B392F0;">-v，--verbose：输出更详细的执行过程信息，-vvv可得到执行过程所有信息。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-i，PATH，--inventory（清单）</span><span style="color:#E1E4E8;">=PATH：指定inventory（清单）信息，默认/etc/ansible/hosts</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">NUM，--forks=NUM：并发线程数，默认5个线程。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">--private-key</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">PRIVATE_KEY_FILE：指定密钥文件。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">NMAE，--module-name=NAME：指定执行使用的模块。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-M</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">DIRECTORY，--module-path=DIRECTORY：指定模块存放路径，默认/usr/share/ansible,也可以通过ANSIBLE_LIBRARY设定默认路径。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">‘ARGUMENTS’，--args=‘ARGUMENTS’：模块参数。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-k，--ask-pass</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">SSH：认证密码</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-K，--ask-sudo-pass</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sudo：用户的密码（--sudo时使用）。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-o，--one-line：标准输出至一行。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-s，--sudo：相当于Linux系统下的sudo命令。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">DIRECTORY，--tree=DIRECTORY：输出信息至DIRECTORY目录下，结果文件以远程主机命名。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-T</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">SECONDS，--timeout=SECONDS：指定连接远程主机的最大超时，单位是秒。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-B</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">NUM，--background=NUM：后台执行命令，超NUM秒后中止正在执行的任务。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-P</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">NUM，--poll=NUM：定期返回后台任务进度。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-u</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">USERNAME，--user=USERNAME：指定远程主机以USERNAME运行命令。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-U</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">SUDO_USERNAME，--sudo-user=SUDO_USERNAME：使用sudo，相当于LInux下的sudo命令。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">CONNECTION，--connection=CONNECTION：指定连接方式，可用选项paramiko（SSH）、ssh、local，local方式常用于crontab和kickstarts。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-l</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">SUBSET，--limit=SUBSET：指定运行主机。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">-l</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~REGEX，--limit=~REGEX：指定运行主机（正则）。</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">--list-hosts：列出符合条件的主机列表，不执行任何命令。</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 执行的状态返回信息：</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">--绿色：执行成功并且不需要做改变的动作</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">--黄色：执行成功并且对目标主机做变更</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#B392F0;">--红色：执行失败</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 语法格式：</span></span>
<span class="line"><span style="color:#6F42C1;">ansible</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">pattern_goes_her</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">module_nam</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-a</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">argument</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;"># 也就是:</span></span>
<span class="line"><span style="color:#6F42C1;">ansible</span><span style="color:#24292E;">  </span><span style="color:#032F62;">匹配模式</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;">  </span><span style="color:#032F62;">模块</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">-a</span><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;需要执行的内容&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 解释说明:</span></span>
<span class="line"><span style="color:#6F42C1;">匹配模式：即哪些机器生效</span><span style="color:#24292E;"> (可以是某一台, </span><span style="color:#032F62;">或某一组,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">或all</span><span style="color:#24292E;">) , 默认模块为command , 执行常规的shell命令.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 参数:</span></span>
<span class="line"><span style="color:#6F42C1;">-v，--verbose：输出更详细的执行过程信息，-vvv可得到执行过程所有信息。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-i，PATH，--inventory（清单）</span><span style="color:#24292E;">=PATH：指定inventory（清单）信息，默认/etc/ansible/hosts</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">NUM，--forks=NUM：并发线程数，默认5个线程。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">--private-key</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">PRIVATE_KEY_FILE：指定密钥文件。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">NMAE，--module-name=NAME：指定执行使用的模块。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-M</span><span style="color:#24292E;"> </span><span style="color:#032F62;">DIRECTORY，--module-path=DIRECTORY：指定模块存放路径，默认/usr/share/ansible,也可以通过ANSIBLE_LIBRARY设定默认路径。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">‘ARGUMENTS’，--args=‘ARGUMENTS’：模块参数。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-k，--ask-pass</span><span style="color:#24292E;"> </span><span style="color:#032F62;">SSH：认证密码</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-K，--ask-sudo-pass</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sudo：用户的密码（--sudo时使用）。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-o，--one-line：标准输出至一行。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-s，--sudo：相当于Linux系统下的sudo命令。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">DIRECTORY，--tree=DIRECTORY：输出信息至DIRECTORY目录下，结果文件以远程主机命名。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-T</span><span style="color:#24292E;"> </span><span style="color:#032F62;">SECONDS，--timeout=SECONDS：指定连接远程主机的最大超时，单位是秒。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-B</span><span style="color:#24292E;"> </span><span style="color:#032F62;">NUM，--background=NUM：后台执行命令，超NUM秒后中止正在执行的任务。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-P</span><span style="color:#24292E;"> </span><span style="color:#032F62;">NUM，--poll=NUM：定期返回后台任务进度。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-u</span><span style="color:#24292E;"> </span><span style="color:#032F62;">USERNAME，--user=USERNAME：指定远程主机以USERNAME运行命令。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-U</span><span style="color:#24292E;"> </span><span style="color:#032F62;">SUDO_USERNAME，--sudo-user=SUDO_USERNAME：使用sudo，相当于LInux下的sudo命令。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">CONNECTION，--connection=CONNECTION：指定连接方式，可用选项paramiko（SSH）、ssh、local，local方式常用于crontab和kickstarts。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-l</span><span style="color:#24292E;">  </span><span style="color:#032F62;">SUBSET，--limit=SUBSET：指定运行主机。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">-l</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~REGEX，--limit=~REGEX：指定运行主机（正则）。</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">--list-hosts：列出符合条件的主机列表，不执行任何命令。</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 执行的状态返回信息：</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">--绿色：执行成功并且不需要做改变的动作</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">--黄色：执行成功并且对目标主机做变更</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6F42C1;">--红色：执行失败</span></span></code></pre></div><h2 id="_3-ansible模块" tabindex="-1">3. Ansible模块 <a class="header-anchor" href="#_3-ansible模块" aria-label="Permalink to &quot;3. Ansible模块&quot;">​</a></h2><ul><li>文件模块： <ul><li>copy：将本地文件复制到受控主机</li><li>file：创建或者和删除远程主机上的文件或者目录</li><li>lineinfile：替换文件中的内容，添加内容到指定文件位置</li><li>synchronize：使用rsync同步内容</li></ul></li><li>软件包模块 <ul><li>package：使用操作系统本机的自动检测软件包管理器管理软件包</li><li>yum：使用yum软件包管理器管理软件包</li><li>apt：使用apt软件包管理器管理软件包</li><li>dnf：使用dnf软件包管理器管理软件包</li><li>pip：从PyPI管理Python软件包</li></ul></li><li>系统模块 <ul><li>firewalld：使用firewalld管理任意端口和服务</li><li>reboot：重新启动计算机</li><li>service：管理服务</li><li>user：添加、删除和管理用户账户</li></ul></li><li>Net Tools模块 <ul><li>get_url：通过http、https或者ftp下载文件</li><li>nmcli：管理网络</li><li>uri：与WEB服务交互</li></ul></li></ul><h2 id="_4-ansible-常用模块" tabindex="-1">4. Ansible 常用模块 <a class="header-anchor" href="#_4-ansible-常用模块" aria-label="Permalink to &quot;4. Ansible 常用模块&quot;">​</a></h2><h4 id="user模块" tabindex="-1">user模块 <a class="header-anchor" href="#user模块" aria-label="Permalink to &quot;user模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">name</td><td style="text-align:left;">要创建、修改、移除的用户名</td></tr><tr><td style="text-align:left;">password</td><td style="text-align:left;">设置用户密码。此处只能使用加密密码作为值</td></tr><tr><td style="text-align:left;">system</td><td style="text-align:left;">设置为yes表示创建一个系统用户，只能用于创建不能用于修改已有用户为系统用户</td></tr><tr><td style="text-align:left;">state</td><td style="text-align:left;">创建用户(present)还是删除用户(absent)。 默认为present</td></tr><tr><td style="text-align:left;">createhome</td><td style="text-align:left;">创建家目录，或者已有的用户但家目录不存在也会创建。设置为no则不创建家目录</td></tr><tr><td style="text-align:left;">home</td><td style="text-align:left;">指定要创建的家目录路径</td></tr><tr><td style="text-align:left;">move_home</td><td style="text-align:left;">如果设置为yes,则&quot;home=&quot;则表示将家目录移动到此选项指定的路径下</td></tr><tr><td style="text-align:left;">uid</td><td style="text-align:left;">设置用户的uid</td></tr><tr><td style="text-align:left;">group</td><td style="text-align:left;">设置用户的primary group</td></tr><tr><td style="text-align:left;">groups</td><td style="text-align:left;">将用户加入到辅助组列表中。如果设置&quot;groups=&quot;, 则会将此用户从所有辅助组中移除</td></tr><tr><td style="text-align:left;">shell</td><td style="text-align:left;">设置用户的shell</td></tr><tr><td style="text-align:left;">force</td><td style="text-align:left;">配合’state=absent’时，等价于’userdel --force’, 即强制删除用户、家目录和邮件列表</td></tr><tr><td style="text-align:left;">remove</td><td style="text-align:left;">配合’state=absent’时， 等价于’userdel --remove’, 即删除家目录和邮件列表</td></tr><tr><td style="text-align:left;">update_password</td><td style="text-align:left;">user是幂 等模块，&quot;always&quot;将总是修改密码。&quot;on_.create&quot;将只在创建用户时设置密码</td></tr></tbody></table><p>案例</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 临时命令使用user模块来确保newbie用户存在于node1上，并且其UID为4000</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m user -a </span><span style="color:#9ECBFF;">&#39;name=newbie uid=4000 state=present&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node1 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]#id newbie</span></span>
<span class="line"><span style="color:#E1E4E8;">uid</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">4000</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">newbie</span><span style="color:#E1E4E8;">) gid</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">4000</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">newbie</span><span style="color:#E1E4E8;">) </span><span style="color:#B392F0;">组</span><span style="color:#E1E4E8;">=4000(newbie)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 设置newbie用户密码</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m user -a </span><span style="color:#9ECBFF;">&#39;name=newbie password=$1$x5dsadpB$PqzHJZD//CqCaxOZoZcj71&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 创建无家目录，不能登录的用户</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m user -a </span><span style="color:#9ECBFF;">&#39;name=zhao create_home=no shell=/sbin/nologin state=present&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 临时命令使用user模块来确保newbie用户存在于node1上，并且其UID为4000</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m user -a </span><span style="color:#032F62;">&#39;name=newbie uid=4000 state=present&#39;</span></span>
<span class="line"><span style="color:#24292E;">[root@node1 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]#id newbie</span></span>
<span class="line"><span style="color:#24292E;">uid</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">4000</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">newbie</span><span style="color:#24292E;">) gid</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">4000</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">newbie</span><span style="color:#24292E;">) </span><span style="color:#6F42C1;">组</span><span style="color:#24292E;">=4000(newbie)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 设置newbie用户密码</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m user -a </span><span style="color:#032F62;">&#39;name=newbie password=$1$x5dsadpB$PqzHJZD//CqCaxOZoZcj71&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 创建无家目录，不能登录的用户</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m user -a </span><span style="color:#032F62;">&#39;name=zhao create_home=no shell=/sbin/nologin state=present&#39;</span></span></code></pre></div><h4 id="shell模块" tabindex="-1">shell模块 <a class="header-anchor" href="#shell模块" aria-label="Permalink to &quot;shell模块&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 语法：</span></span>
<span class="line"><span style="color:#B392F0;">ansible</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">主机清单</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">shell</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-a</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;执行命令&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 示例：</span></span>
<span class="line"><span style="color:#B392F0;">--临时命令使用shell模块来删除node1.example.com节点中的用户newbie</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m shell -a </span><span style="color:#9ECBFF;">&#39;userdel -r newbie&#39;</span></span>
<span class="line"><span style="color:#B392F0;">node1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CHANGED</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> rc</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 语法：</span></span>
<span class="line"><span style="color:#6F42C1;">ansible</span><span style="color:#24292E;"> </span><span style="color:#032F62;">主机清单</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;">  </span><span style="color:#032F62;">shell</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-a</span><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;执行命令&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 示例：</span></span>
<span class="line"><span style="color:#6F42C1;">--临时命令使用shell模块来删除node1.example.com节点中的用户newbie</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m shell -a </span><span style="color:#032F62;">&#39;userdel -r newbie&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">node1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CHANGED</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> rc</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;&gt;</span></span></code></pre></div><h4 id="copy模块" tabindex="-1">copy模块 <a class="header-anchor" href="#copy模块" aria-label="Permalink to &quot;copy模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">模块</th></tr></thead><tbody><tr><td style="text-align:left;">backup=[yes|no]</td><td style="text-align:left;">拷贝的同时也创建一个包含时间戳信息的备份文件，默认为no</td></tr><tr><td style="text-align:left;">dest</td><td style="text-align:left;">目标路径，只能是绝对路径，如果拷贝的文件是目录，则目标路径必须也是目录</td></tr><tr><td style="text-align:left;">content</td><td style="text-align:left;">直接以content给定的字符串或变量值作为文件内容保存到远程主机上，它会替代src选项</td></tr><tr><td style="text-align:left;">directory_mode</td><td style="text-align:left;">当对目录做递归拷贝时，设置了directory_mode将会使得只拷贝新建文件</td></tr><tr><td style="text-align:left;">follow=[yes|no]</td><td style="text-align:left;">是否追踪到链接的源文件</td></tr><tr><td style="text-align:left;">force=[yes|no]</td><td style="text-align:left;">设置为yes(默认)时， 将覆盖远程同名文件。设置为no时，忽略同名文件的拷贝</td></tr><tr><td style="text-align:left;">group</td><td style="text-align:left;">设置远程文件的所属组</td></tr><tr><td style="text-align:left;">owner</td><td style="text-align:left;">设置远程文件的所有者</td></tr><tr><td style="text-align:left;">mode</td><td style="text-align:left;">设置远程文件的权限。使用数值表示时不能省略第一位，如0644。 也可以使用’u+rwx’或’u=rw,g=r,0=r’等方式设置</td></tr><tr><td style="text-align:left;">src</td><td style="text-align:left;">拷贝本地源文件到远程，可使用绝对路径或相对路径。如果路径是目录，且目录后加了 斜杠&quot;/&quot;,则只会拷贝目录中的内容到远程，如果目录后不加斜杠，则拷贝目录本身和 目录内的内容到远程。</td></tr></tbody></table><p>案例</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 将源文件，copy到被控端</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m copy -a </span><span style="color:#9ECBFF;">&#39;src=/etc/fstab dest=/var/tmp/fstab&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 将源文件，copy到被控端</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m copy -a </span><span style="color:#032F62;">&#39;src=/etc/fstab dest=/var/tmp/fstab&#39;</span></span></code></pre></div><h4 id="template模块" tabindex="-1">template模块 <a class="header-anchor" href="#template模块" aria-label="Permalink to &quot;template模块&quot;">​</a></h4><p><a href="https://docs.ansible.com/ansible/latest/collections/ansible/builtin/template_module.html" target="_blank" rel="noreferrer">https://docs.ansible.com/ansible/latest/collections/ansible/builtin/template_module.html</a></p><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">backup</td><td style="text-align:left;">拷贝的同时也创建一个包含时间戳信息的备份文件，默认为no</td></tr><tr><td style="text-align:left;">dest</td><td style="text-align:left;">目标路径</td></tr><tr><td style="text-align:left;">force</td><td style="text-align:left;">设置为yes (默认)时，将覆盖远程同名文件。设置为no时，忽略同名文件的拷贝</td></tr><tr><td style="text-align:left;">group</td><td style="text-align:left;">设置远程文件的所属组</td></tr><tr><td style="text-align:left;">owner</td><td style="text-align:left;">设置远程文件的所有者</td></tr><tr><td style="text-align:left;">mode</td><td style="text-align:left;">设置远程文件的权限。使用数值表示时不能省略第一位，如0644。 也可以使用’u+rwx’ or &#39;u=rw,g=r,0=r’等 方式设置</td></tr><tr><td style="text-align:left;">src</td><td style="text-align:left;">ansible控制器上Jinja2格式的模板所在位置，可以是相对或绝对路径</td></tr><tr><td style="text-align:left;">validate</td><td style="text-align:left;">在复制到目标主机后但放到目标位置之前，执行此选项指定的命令。 一般用于检查配置文件语法，语法正确则保存到目标位置。 如果要引用目标文件名，则使用%s， 下面的示例 中的s%即表示目标机器上的/etc/nginx/nginx.conf.</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m template -a </span><span style="color:#9ECBFF;">&#39;src=/usr/share/doc/httpd/httpd-vhosts.conf dest=/etc/httpd/conf.d/httpd-vhosts.conf group=root owner=root mode=0644&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m template -a </span><span style="color:#032F62;">&#39;src=/usr/share/doc/httpd/httpd-vhosts.conf dest=/etc/httpd/conf.d/httpd-vhosts.conf group=root owner=root mode=0644&#39;</span></span></code></pre></div><h4 id="file模块" tabindex="-1">file模块 <a class="header-anchor" href="#file模块" aria-label="Permalink to &quot;file模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">group</td><td style="text-align:left;">设置文件的所属组</td></tr><tr><td style="text-align:left;">owner</td><td style="text-align:left;">设置文件的所有组</td></tr><tr><td style="text-align:left;">mode</td><td style="text-align:left;">修改权限</td></tr><tr><td style="text-align:left;">path</td><td style="text-align:left;">指定代操作的文件</td></tr><tr><td style="text-align:left;">recurse</td><td style="text-align:left;">递归修改文件属性，要求state=directory</td></tr><tr><td style="text-align:left;">src</td><td style="text-align:left;">原文件名</td></tr><tr><td style="text-align:left;">state</td><td style="text-align:left;">directory：如果目录不存在则递归创建 file：文件不存在时，不会被创建(默认值) touch：创建新文件 link：修改或创建软链接 hard：修改或创建硬链接 absent：目录和其中的文件会被递归删除，文件或链接将取消链接状态</td></tr></tbody></table><p>案例</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 修改文件的权限属性和context值</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m file -a </span><span style="color:#9ECBFF;">&#39;path=/var/tmp/fstab mode=g+w mode=o+w group=galaxy owner=galaxy setype=samba_share_t&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 新建文件</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m file -a </span><span style="color:#9ECBFF;">&#39;path=/var/tmp/bbb state=touch&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 新建目录</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m file -a </span><span style="color:#9ECBFF;">&#39;path=/var/tmp/cc state=directory&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 删除文件或者目录</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m file -a </span><span style="color:#9ECBFF;">&#39;path=/var/tmp/cc state=absent&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 创建软链接</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m file -a </span><span style="color:#9ECBFF;">&#39;dest=/var/tmp/chenyu src=/var/tmp/bbb state=link&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 创建硬链接</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m file -a </span><span style="color:#9ECBFF;">&#39;dest=/var/tmp/chenyu1 src=/var/tmp/aaa state=hard&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 修改文件的权限属性和context值</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m file -a </span><span style="color:#032F62;">&#39;path=/var/tmp/fstab mode=g+w mode=o+w group=galaxy owner=galaxy setype=samba_share_t&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 新建文件</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m file -a </span><span style="color:#032F62;">&#39;path=/var/tmp/bbb state=touch&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 新建目录</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m file -a </span><span style="color:#032F62;">&#39;path=/var/tmp/cc state=directory&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 删除文件或者目录</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m file -a </span><span style="color:#032F62;">&#39;path=/var/tmp/cc state=absent&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 创建软链接</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m file -a </span><span style="color:#032F62;">&#39;dest=/var/tmp/chenyu src=/var/tmp/bbb state=link&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 创建硬链接</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m file -a </span><span style="color:#032F62;">&#39;dest=/var/tmp/chenyu1 src=/var/tmp/aaa state=hard&#39;</span></span></code></pre></div><h4 id="lineinfile模块" tabindex="-1">lineinfile模块 <a class="header-anchor" href="#lineinfile模块" aria-label="Permalink to &quot;lineinfile模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">path</td><td style="text-align:left;">必须参数，指定要操作的文件路径</td></tr><tr><td style="text-align:left;">line</td><td style="text-align:left;">必须参数，指定要替换的文本内容</td></tr><tr><td style="text-align:left;">regexp</td><td style="text-align:left;">匹配正则语句，与要过滤的关键字</td></tr><tr><td style="text-align:left;">state</td><td style="text-align:left;">状态语句：state=absent则是删除，state=present默认</td></tr><tr><td style="text-align:left;">backrefs</td><td style="text-align:left;">表示是否开启反向引用，默认no</td></tr><tr><td style="text-align:left;">create</td><td style="text-align:left;">当文件不存在时，是否创建对应的文件</td></tr><tr><td style="text-align:left;">backup</td><td style="text-align:left;">是否在修改文件之前对文件进行备份</td></tr><tr><td style="text-align:left;">insertafter</td><td style="text-align:left;">借助insertafter参数可以将文本插入到&quot;指定的行&quot;之后</td></tr><tr><td style="text-align:left;">insertbefore</td><td style="text-align:left;">借助insertbefore参数可以将文本插入到&quot;指定的行&quot;之前</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 通过正则匹配查找/etc/selinux/config 文本中开头是SELINUX=的行,并替换成SELINUX=disabled</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m lineinfile -a </span><span style="color:#9ECBFF;">&#39;path=/etc/selinux/config regexp=&quot;^SELINUX=&quot; line=&quot;SELINUX=disabled&quot;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 通过正则匹配查找/etc/selinux/config文本,并在文本末尾插入一行www.alone.com</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m lineinfile -a </span><span style="color:#9ECBFF;">&#39;path=/etc/selinux/config regexp=&quot;EOF&quot; line=&quot;www.alone.com&quot;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 通过正则匹配查找/etc/selinux/config文本,并在文本行首插入一行www.alone.com</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m lineinfile -a </span><span style="color:#9ECBFF;">&#39;path=/etc/selinux/config regexp=&quot;BOF&quot; line=&quot;www.alone.com&quot;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 4.通过正则匹配查找/etc/selinux/config文本,删除所有的www.alone.com字段.</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m lineinfile -a </span><span style="color:#9ECBFF;">&#39;path=/etc/selinux/config regexp=&quot;^www.alone.com&quot; state=absent&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 5.通过正则匹配查找/etc/selinux/config文本中在开头是SELINUX=disabled行的行后插入一段话www.alone.com</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m lineinfile -a </span><span style="color:#9ECBFF;">&#39;path=/etc/selinux/config insertafter=&quot;^SELINUX=&quot; line=&quot;www.alone.com&quot;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 6.通过正则匹配查找/etc/selinux/config文本中在开头是SELINUX=disabled行的行前插入一段话www.alone.com</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m lineinfile -a </span><span style="color:#9ECBFF;">&#39;path=/etc/selinux/config insertbefore=&quot;^SELINUX=&quot; line=&quot;www.alone.com&quot;&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 通过正则匹配查找/etc/selinux/config 文本中开头是SELINUX=的行,并替换成SELINUX=disabled</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m lineinfile -a </span><span style="color:#032F62;">&#39;path=/etc/selinux/config regexp=&quot;^SELINUX=&quot; line=&quot;SELINUX=disabled&quot;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 通过正则匹配查找/etc/selinux/config文本,并在文本末尾插入一行www.alone.com</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m lineinfile -a </span><span style="color:#032F62;">&#39;path=/etc/selinux/config regexp=&quot;EOF&quot; line=&quot;www.alone.com&quot;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 通过正则匹配查找/etc/selinux/config文本,并在文本行首插入一行www.alone.com</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m lineinfile -a </span><span style="color:#032F62;">&#39;path=/etc/selinux/config regexp=&quot;BOF&quot; line=&quot;www.alone.com&quot;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 4.通过正则匹配查找/etc/selinux/config文本,删除所有的www.alone.com字段.</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m lineinfile -a </span><span style="color:#032F62;">&#39;path=/etc/selinux/config regexp=&quot;^www.alone.com&quot; state=absent&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 5.通过正则匹配查找/etc/selinux/config文本中在开头是SELINUX=disabled行的行后插入一段话www.alone.com</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m lineinfile -a </span><span style="color:#032F62;">&#39;path=/etc/selinux/config insertafter=&quot;^SELINUX=&quot; line=&quot;www.alone.com&quot;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 6.通过正则匹配查找/etc/selinux/config文本中在开头是SELINUX=disabled行的行前插入一段话www.alone.com</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m lineinfile -a </span><span style="color:#032F62;">&#39;path=/etc/selinux/config insertbefore=&quot;^SELINUX=&quot; line=&quot;www.alone.com&quot;&#39;</span></span></code></pre></div><h4 id="yum-repository模块" tabindex="-1">yum_repository模块 <a class="header-anchor" href="#yum-repository模块" aria-label="Permalink to &quot;yum_repository模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">baseurl</td><td style="text-align:left;">地址</td></tr><tr><td style="text-align:left;">mirrorlist</td><td style="text-align:left;">设置mirrorlist地址</td></tr><tr><td style="text-align:left;">description</td><td style="text-align:left;">描述信息</td></tr><tr><td style="text-align:left;">enabled</td><td style="text-align:left;">是否启用该仓库</td></tr><tr><td style="text-align:left;">file</td><td style="text-align:left;">保存此仓库的文件，不设置该项的话则默认以name选项中的名称命名</td></tr><tr><td style="text-align:left;">gpgcheck</td><td style="text-align:left;">是否要进行gpgcheck</td></tr><tr><td style="text-align:left;">name</td><td style="text-align:left;">仓库的名称</td></tr><tr><td style="text-align:left;">reposdir</td><td style="text-align:left;">保存.repo文件的目录</td></tr><tr><td style="text-align:left;">state</td><td style="text-align:left;">repo文件的状态，present/absent</td></tr></tbody></table><p>案例</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 配置yum仓库</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible done1 -m yum_repository -a </span><span style="color:#9ECBFF;">&#39;file=server name=BaseOS description=BaseOS baseurl=file:///mnt/BaseOS enabled=yes gpgcheck=no&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible done1 -m yum_repository -a </span><span style="color:#9ECBFF;">&#39;file=server name=AppStream description=AppStream baseurl=file:///mnt/AppStream enabled=yes gpgcheck=no&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 配置yum仓库</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible done1 -m yum_repository -a </span><span style="color:#032F62;">&#39;file=server name=BaseOS description=BaseOS baseurl=file:///mnt/BaseOS enabled=yes gpgcheck=no&#39;</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible done1 -m yum_repository -a </span><span style="color:#032F62;">&#39;file=server name=AppStream description=AppStream baseurl=file:///mnt/AppStream enabled=yes gpgcheck=no&#39;</span></span></code></pre></div><h4 id="yum模块" tabindex="-1">yum模块 <a class="header-anchor" href="#yum模块" aria-label="Permalink to &quot;yum模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">name</td><td style="text-align:left;">用于指定安装包的包名</td></tr><tr><td style="text-align:left;">state</td><td style="text-align:left;">用于指定软件包的状态，默认值为present</td></tr><tr><td style="text-align:left;">disable_gpg_check</td><td style="text-align:left;">用于禁用对 rpm 包的公钥 gpg 验证,默认值为 no</td></tr><tr><td style="text-align:left;">enablerepo</td><td style="text-align:left;">用于指定安装软件包时临时启用的 yum 源</td></tr><tr><td style="text-align:left;">disablerepo</td><td style="text-align:left;">用于指定安装软件包时临时禁用的 yum 源</td></tr><tr><td style="text-align:left;">exclude</td><td style="text-align:left;">排除哪些包不安装，仅在state=present或latest时生效</td></tr><tr><td style="text-align:left;">list</td><td style="text-align:left;">类似于yum list</td></tr><tr><td style="text-align:left;">update_cache</td><td style="text-align:left;">强制更新yum的cache</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 安装软件：通过Yum模块批量的安装httpd服务到指定主机上.</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m yum -a </span><span style="color:#9ECBFF;">&quot;name=httpd state=installed&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 卸载软件：通过Yum模块批量的卸载httpd服务主机.</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m yum -a </span><span style="color:#9ECBFF;">&quot;name=httpd state=removed&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 安装软件：通过Yum模块批量的安装httpd服务到指定主机上.</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m yum -a </span><span style="color:#032F62;">&quot;name=httpd state=installed&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 卸载软件：通过Yum模块批量的卸载httpd服务主机.</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m yum -a </span><span style="color:#032F62;">&quot;name=httpd state=removed&quot;</span></span></code></pre></div><h4 id="service模块" tabindex="-1">service模块 <a class="header-anchor" href="#service模块" aria-label="Permalink to &quot;service模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">name</td><td style="text-align:left;">此参数用于指定需要操作的服务名称</td></tr><tr><td style="text-align:left;">state</td><td style="text-align:left;">此参数用于指定服务的状态,started、stopped、restarted、reloaded</td></tr><tr><td style="text-align:left;">enabled</td><td style="text-align:left;">此参数用于指定是否将服务设置为开机 启动项</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 设置服务开机自启动,设置httpd服务开机自启动.</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m service -a </span><span style="color:#9ECBFF;">&quot;name=httpd state=started enabled=yes&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 关闭服务开机自启动,关闭httpd服务开机自启动.</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m service -a </span><span style="color:#9ECBFF;">&quot;name=httpd state=stopped enabled=no&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 设置服务开机自启动,设置httpd服务开机自启动.</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m service -a </span><span style="color:#032F62;">&quot;name=httpd state=started enabled=yes&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 关闭服务开机自启动,关闭httpd服务开机自启动.</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m service -a </span><span style="color:#032F62;">&quot;name=httpd state=stopped enabled=no&quot;</span></span></code></pre></div><h4 id="fetch模块" tabindex="-1">fetch模块 <a class="header-anchor" href="#fetch模块" aria-label="Permalink to &quot;fetch模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">dest</td><td style="text-align:left;">目标绝对路径</td></tr><tr><td style="text-align:left;">src</td><td style="text-align:left;">复制的源文件路径，源文件只能是文件</td></tr><tr><td style="text-align:left;">flat</td><td style="text-align:left;">改变拉取后的路径存储方式。如果设置为yes, 且当dest以&quot;/&quot;结尾时， 将直接把源文件的basename存储在dest下。显然，应该考虑多个主机拉取时的文件覆盖情况。</td></tr><tr><td style="text-align:left;">fail on missing</td><td style="text-align:left;">当设置为yes时，如果拉取的源文件不存在，则此任务失败。默认为no.</td></tr><tr><td style="text-align:left;">validate_checksum</td><td style="text-align:left;">远程主机上的源文件。只能是文件，不支持目录。在未来的版本中可能会支持目录递归拉取。</td></tr></tbody></table><p>案例</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 将远程主机的/etc/fstab文件拉取到本地来，存储的名字为/tmp/node1/etc/fstab</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1-m fetch -a </span><span style="color:#9ECBFF;">&#39;src=/etc/fstab dest=/tmp&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 将某台远程主机的/etc/fstab文件拉取到本地来，存储的名字为/tmp/fstab</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m fetch -a </span><span style="color:#9ECBFF;">&#39;src=/etc/fstab dest=/tmp/ flat=yes&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 将远程主机的/etc/fstab文件拉取到本地来，存储的名字为/tmp/fstab-node1</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m fetch -a </span><span style="color:#9ECBFF;">&#39;src=/etc/fstab dest=/tmp/fstab-{{inventory_hostname}} flat=yes&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 将远程主机的/etc/fstab文件拉取到本地来，存储的名字为/tmp/node1/etc/fstab</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1-m fetch -a </span><span style="color:#032F62;">&#39;src=/etc/fstab dest=/tmp&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 将某台远程主机的/etc/fstab文件拉取到本地来，存储的名字为/tmp/fstab</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m fetch -a </span><span style="color:#032F62;">&#39;src=/etc/fstab dest=/tmp/ flat=yes&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 将远程主机的/etc/fstab文件拉取到本地来，存储的名字为/tmp/fstab-node1</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m fetch -a </span><span style="color:#032F62;">&#39;src=/etc/fstab dest=/tmp/fstab-{{inventory_hostname}} flat=yes&#39;</span></span></code></pre></div><h4 id="firewalld模块" tabindex="-1">firewalld模块 <a class="header-anchor" href="#firewalld模块" aria-label="Permalink to &quot;firewalld模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">icmp_block</td><td style="text-align:left;">在防火墙中添加或者移除的ICMP块</td></tr><tr><td style="text-align:left;">icmp_bolck_inversion</td><td style="text-align:left;">开启/关闭防火墙区域ICMP报文反转功能</td></tr><tr><td style="text-align:left;">immediate</td><td style="text-align:left;">如果将此配置设置为永久性，则应立即应用此配置，yes or no，默认no</td></tr><tr><td style="text-align:left;">interface</td><td style="text-align:left;">在防火墙中添加或移除interface</td></tr><tr><td style="text-align:left;">masquerade</td><td style="text-align:left;">在在防火墙中开启或关闭masquerade功能</td></tr><tr><td style="text-align:left;">offline</td><td style="text-align:left;">是否在防火墙离线时运行此模块，yes or no</td></tr><tr><td style="text-align:left;">permanent</td><td style="text-align:left;">该配置是否在运行的防火墙配置中，或者在重新启动时仍然存在。注意，如果这是no, immediate被假定为yes。</td></tr><tr><td style="text-align:left;">port</td><td style="text-align:left;">在防火墙中添加或移除端口名称或端口范围。端口范围必须为PORT/PROTOCOL或PORT-PORT/PROTOCOL格式</td></tr><tr><td style="text-align:left;">rich_rule</td><td style="text-align:left;">rich_rule添加或删除到防火墙</td></tr><tr><td style="text-align:left;">service</td><td style="text-align:left;">在防火墙中添加或移除服务名称该服务必须在<code>firewall-cmd --get-services</code>的输出中列出</td></tr><tr><td style="text-align:left;">source</td><td style="text-align:left;">在防火墙中添加或移除某个来源的网络</td></tr><tr><td style="text-align:left;">state</td><td style="text-align:left;">启用或禁用一项设置。对于端口:该端口是否接受(enabled)或拒绝(disabled)连接。状态的(present)和(absent)只能在区域级别操作中使用(即，当除了zone和state没有设置其他参数时)。</td></tr><tr><td style="text-align:left;">timeout</td><td style="text-align:left;">该规则应在非永久性时生效的时间，默认0</td></tr><tr><td style="text-align:left;">zone</td><td style="text-align:left;">添加或移除的防火墙区域。注意，可以为每个系统配置默认的区域，可能的值有<code>block</code>, <code>dmz</code>, <code>drop</code>, <code>external</code>, <code>home</code>, <code>internal</code>, <code>public</code>, <code>trusted</code>, <code>work</code>,<code>public</code></td></tr></tbody></table><p>案例</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 允许http流量的传入</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m firewalld -a </span><span style="color:#9ECBFF;">&#39;service=http   permanent=yes state=enabled immediate=yes&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 副规则 允许192.168.111.0/24主机http流量的传入</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m firewalld -a ‘zone=public rich_rule=</span><span style="color:#9ECBFF;">&quot;rule family=ipv4 source address=192.168.111.0/24 service name=http accept&quot;</span><span style="color:#E1E4E8;"> permanent=yes state=enabled immediate=yes</span><span style="color:#9ECBFF;">&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 允许http流量的传入</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m firewalld -a </span><span style="color:#032F62;">&#39;service=http   permanent=yes state=enabled immediate=yes&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 副规则 允许192.168.111.0/24主机http流量的传入</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m firewalld -a ‘zone=public rich_rule=</span><span style="color:#032F62;">&quot;rule family=ipv4 source address=192.168.111.0/24 service name=http accept&quot;</span><span style="color:#24292E;"> permanent=yes state=enabled immediate=yes</span><span style="color:#032F62;">&#39;</span></span></code></pre></div><h4 id="replace模块" tabindex="-1">replace模块 <a class="header-anchor" href="#replace模块" aria-label="Permalink to &quot;replace模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">path</td><td style="text-align:left;">必须参数,指定要操作的文件名称</td></tr><tr><td style="text-align:left;">regexp</td><td style="text-align:left;">必须参数,指定一个正则表达式</td></tr><tr><td style="text-align:left;">replace</td><td style="text-align:left;">指定最终要替换成的文本</td></tr><tr><td style="text-align:left;">backup</td><td style="text-align:left;">在修改文件之前对文件进行备份,yes/no</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 将/tmp/zsl文件中的“abc”替换成“yyy”</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m replace -a </span><span style="color:#9ECBFF;">&#39;path=/tmp/zsl regexp=&quot;abc&quot; replace=&quot;yyy&quot;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 将/tmp/zsl文件中的“yyy”替换成“iii”，且把替换前的/tmp/zsl文件备份</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m replace -a </span><span style="color:#9ECBFF;">&#39;path=/tmp/zsl regexp=&quot;yyy&quot; replace=&quot;iii&quot; backup=yes&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 将/tmp/zsl文件中的“abc”替换成“yyy”</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m replace -a </span><span style="color:#032F62;">&#39;path=/tmp/zsl regexp=&quot;abc&quot; replace=&quot;yyy&quot;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 将/tmp/zsl文件中的“yyy”替换成“iii”，且把替换前的/tmp/zsl文件备份</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m replace -a </span><span style="color:#032F62;">&#39;path=/tmp/zsl regexp=&quot;yyy&quot; replace=&quot;iii&quot; backup=yes&#39;</span></span></code></pre></div><h4 id="parted模块" tabindex="-1">parted模块 <a class="header-anchor" href="#parted模块" aria-label="Permalink to &quot;parted模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">device</td><td style="text-align:left;">指定硬盘设备路径 比如 /dev/vdb</td></tr><tr><td style="text-align:left;">label</td><td style="text-align:left;">指定分区表类型 gpt mbr</td></tr><tr><td style="text-align:left;">number</td><td style="text-align:left;">指定分区序号</td></tr><tr><td style="text-align:left;">part_start</td><td style="text-align:left;">分区起始位置</td></tr><tr><td style="text-align:left;">part_end</td><td style="text-align:left;">分区结束位置</td></tr><tr><td style="text-align:left;">state</td><td style="text-align:left;">指定操作方式 创建(present) 、删除(absent) 、查信息(info)</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 新建扩展分区</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m parted -a </span><span style="color:#9ECBFF;">&#39;device=/dev/sda number=4 part_type=extended part_start=46GiB part_end=49.8GiB state=present&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 新建逻辑分区</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m parted -a </span><span style="color:#9ECBFF;">&#39;device=/dev/sda number=5 part_type=logical part_start=46.1GiB part_end=48.2GiB state=present&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 新建扩展分区</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m parted -a </span><span style="color:#032F62;">&#39;device=/dev/sda number=4 part_type=extended part_start=46GiB part_end=49.8GiB state=present&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 新建逻辑分区</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m parted -a </span><span style="color:#032F62;">&#39;device=/dev/sda number=5 part_type=logical part_start=46.1GiB part_end=48.2GiB state=present&#39;</span></span></code></pre></div><h4 id="filesystem模块" tabindex="-1">filesystem模块 <a class="header-anchor" href="#filesystem模块" aria-label="Permalink to &quot;filesystem模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">dev</td><td style="text-align:left;">要格式化的分区</td></tr><tr><td style="text-align:left;">fstype</td><td style="text-align:left;">文件系统类型 比如 ext4 xfs</td></tr><tr><td style="text-align:left;">force</td><td style="text-align:left;">强制格式化,如果以前分区中有数据</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 给/dev/sda5格式化,类型是xfs</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m filesystem -a </span><span style="color:#9ECBFF;">&#39;fstype=xfs dev=/dev/sda5&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 给/dev/sda5格式化,类型是xfs</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m filesystem -a </span><span style="color:#032F62;">&#39;fstype=xfs dev=/dev/sda5&#39;</span></span></code></pre></div><h4 id="mount模块" tabindex="-1">mount模块 <a class="header-anchor" href="#mount模块" aria-label="Permalink to &quot;mount模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">path</td><td style="text-align:left;">挂载点</td></tr><tr><td style="text-align:left;">src</td><td style="text-align:left;">挂载的文件</td></tr><tr><td style="text-align:left;">fstype</td><td style="text-align:left;">挂载的硬盘类型 比如iso9660、ext4、xfs、nfs、 cifs samba的共享文件系统 ntfs windows磁盘文件系统</td></tr><tr><td style="text-align:left;">opts</td><td style="text-align:left;">传递给mount命令的参数</td></tr><tr><td style="text-align:left;">state</td><td style="text-align:left;">present 开机挂载，仅将挂载配置写入/etc/fstab并不会真的挂载 mounted 挂载设备，并将配置写入/etc/fstab unmounted 卸载设备，不会清除/etc/fstab写入的配置 absent 卸载设备，并清理/etc/fstab写入的配置</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 新建挂载点/common</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m file -a </span><span style="color:#9ECBFF;">&#39;path=/common state=directory&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 查看/dev/sda5的UUID</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m shell -a </span><span style="color:#9ECBFF;">&#39;blkid /dev/sda5&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 将分区/dev/sda5挂载到/common目录</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m mount -a </span><span style="color:#9ECBFF;">&#39;path=/common src=&quot;UUID=d162b8b9-2326-4ee4-a559-80861461c4f0&quot; fstype=xfs state=mounted&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 卸载</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m mount -a </span><span style="color:#9ECBFF;">&#39;path=/common src=&quot;UUID=d162b8b9-2326-4ee4-a559-80861461c4f0&quot; fstype=xfs state=absent&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 新建挂载点/common</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m file -a </span><span style="color:#032F62;">&#39;path=/common state=directory&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 查看/dev/sda5的UUID</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m shell -a </span><span style="color:#032F62;">&#39;blkid /dev/sda5&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 将分区/dev/sda5挂载到/common目录</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m mount -a </span><span style="color:#032F62;">&#39;path=/common src=&quot;UUID=d162b8b9-2326-4ee4-a559-80861461c4f0&quot; fstype=xfs state=mounted&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 卸载</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m mount -a </span><span style="color:#032F62;">&#39;path=/common src=&quot;UUID=d162b8b9-2326-4ee4-a559-80861461c4f0&quot; fstype=xfs state=absent&#39;</span></span></code></pre></div><h4 id="lvg模块" tabindex="-1">lvg模块 <a class="header-anchor" href="#lvg模块" aria-label="Permalink to &quot;lvg模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">vg</td><td style="text-align:left;">卷组名称</td></tr><tr><td style="text-align:left;">state</td><td style="text-align:left;">present创建(默认) 或者 absent删除</td></tr><tr><td style="text-align:left;">force</td><td style="text-align:left;">可以在删除时使用</td></tr><tr><td style="text-align:left;">pvs</td><td style="text-align:left;">指定物理卷</td></tr><tr><td style="text-align:left;">pesize</td><td style="text-align:left;">设定pe大小</td></tr></tbody></table><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 新建卷组vg0</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m lvg -a </span><span style="color:#9ECBFF;">&#39;vg=vg0 pesize=16M pvs=/dev/sda5</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 新建卷组vg0</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m lvg -a </span><span style="color:#032F62;">&#39;vg=vg0 pesize=16M pvs=/dev/sda5</span></span></code></pre></div><h4 id="lvol模块" tabindex="-1">lvol模块 <a class="header-anchor" href="#lvol模块" aria-label="Permalink to &quot;lvol模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">lv</td><td style="text-align:left;">定义逻辑卷名称</td></tr><tr><td style="text-align:left;">size</td><td style="text-align:left;">定义逻辑卷大小</td></tr><tr><td style="text-align:left;">vg</td><td style="text-align:left;">逻辑卷的空间来自哪个vg</td></tr><tr><td style="text-align:left;">state</td><td style="text-align:left;">present创建(默认) 或者 absent删除</td></tr><tr><td style="text-align:left;">force</td><td style="text-align:left;">强制删除或者调整逻辑卷大小</td></tr></tbody></table><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 新建逻辑卷lv0</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m lvol -a </span><span style="color:#9ECBFF;">&#39;lv=lv0 size=1000M vg=vg0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 在线扩容逻辑卷</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m lvol -a </span><span style="color:#9ECBFF;">&#39;lv=lv0 size=1600M vg=vg0 resizefs=yes&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 新建逻辑卷lv0</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m lvol -a </span><span style="color:#032F62;">&#39;lv=lv0 size=1000M vg=vg0&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 在线扩容逻辑卷</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m lvol -a </span><span style="color:#032F62;">&#39;lv=lv0 size=1600M vg=vg0 resizefs=yes&#39;</span></span></code></pre></div><h4 id="sefcontext模块" tabindex="-1">sefcontext模块 <a class="header-anchor" href="#sefcontext模块" aria-label="Permalink to &quot;sefcontext模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">target</td><td style="text-align:left;">指定目标目录</td></tr><tr><td style="text-align:left;">setype</td><td style="text-align:left;">设置安全性本文</td></tr><tr><td style="text-align:left;">state</td><td style="text-align:left;">模块状态：present代表增加目录的安全性本文；absent代表删除目录的安全性本文</td></tr></tbody></table><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 修改context值</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m sefcontext -a </span><span style="color:#9ECBFF;">&#39;target=&quot;/share(/.*)?&quot; setype=samba_share_t state=present&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 应用新的selinux 文件的context值</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m command -a </span><span style="color:#9ECBFF;">&#39;restorecon -Rv /share&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 修改context值</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m sefcontext -a </span><span style="color:#032F62;">&#39;target=&quot;/share(/.*)?&quot; setype=samba_share_t state=present&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 应用新的selinux 文件的context值</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m command -a </span><span style="color:#032F62;">&#39;restorecon -Rv /share&#39;</span></span></code></pre></div><h4 id="debug模块" tabindex="-1">debug模块 <a class="header-anchor" href="#debug模块" aria-label="Permalink to &quot;debug模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">msg</td><td style="text-align:left;">调试输出的消息</td></tr><tr><td style="text-align:left;">var</td><td style="text-align:left;">将某个任务执行的输出作为变量传递给debug模块，debug会直接将其打印输出</td></tr><tr><td style="text-align:left;">verbosity</td><td style="text-align:left;">debug的级别（默认是0级，全部显示）</td></tr></tbody></table><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 输出Alone</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m debug -a </span><span style="color:#9ECBFF;">&#39;msg=Alone&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 输出Alone</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m debug -a </span><span style="color:#032F62;">&#39;msg=Alone&#39;</span></span></code></pre></div><h4 id="cron模块" tabindex="-1">cron模块 <a class="header-anchor" href="#cron模块" aria-label="Permalink to &quot;cron模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">user</td><td style="text-align:left;">用于设置当前计划任务属于哪个用户,当不使用此参数时,默认为管理员用户</td></tr><tr><td style="text-align:left;">job</td><td style="text-align:left;">指定计划的任务中需要实际执行的命令或者脚本</td></tr><tr><td style="text-align:left;">name</td><td style="text-align:left;">用于设置计划任务的名称,计划任务的名称会在注释中显示</td></tr><tr><td style="text-align:left;">state</td><td style="text-align:left;">相关状态信息，当删除计划任务时,需要将 state 的值设置为 absent，用于创建present（默认）|用于移除absent</td></tr><tr><td style="text-align:left;">disabled</td><td style="text-align:left;">当计划任务有名称时,我们可以根据名称使对应的任务失效</td></tr><tr><td style="text-align:left;">backup</td><td style="text-align:left;">此参数的值设置为yes,那么当修改或者删除对应的计划任务时,会对计划任务备份</td></tr><tr><td style="text-align:left;">$time</td><td style="text-align:left;">指定具体的执行时间、minute分、hour时、day天、month月、weekday、0-7 代表周</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 创建计划任务,任务名称为mkdirs test 任务于每天1点5分,执行输出一段话echo hello lyshark</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m cron -a </span><span style="color:#9ECBFF;">&quot;name=&#39;mkdirs test&#39; minute=5 hour=1 job=&#39;echo hello lyshark&#39;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 删除计划任务mkdirs test,删除前做好备份.</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node1 -m cron -a </span><span style="color:#9ECBFF;">&quot;name=&#39;mkdirs test&#39; state=absent backup=yes&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 创建计划任务,任务名称为mkdirs test 任务于每天1点5分,执行输出一段话echo hello lyshark</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m cron -a </span><span style="color:#032F62;">&quot;name=&#39;mkdirs test&#39; minute=5 hour=1 job=&#39;echo hello lyshark&#39;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 删除计划任务mkdirs test,删除前做好备份.</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node1 -m cron -a </span><span style="color:#032F62;">&quot;name=&#39;mkdirs test&#39; state=absent backup=yes&quot;</span></span></code></pre></div><h4 id="get-url模块" tabindex="-1">get_url模块 <a class="header-anchor" href="#get-url模块" aria-label="Permalink to &quot;get_url模块&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">参数</th><th style="text-align:left;">解释</th></tr></thead><tbody><tr><td style="text-align:left;">dest</td><td style="text-align:left;">文件下载到远程的那个目录下 如果dest是一个目录，则使用url的base name作为文件名 如果dest是一个目录，则’force’选项不生效 如果dest是一个目录，则总是会下载目标文件，但只在已存在的文件变化了才会替换旧文件 如果设置为yes, 且dest不是一个目录时，则总是会下载文件，但只在已存在的文件变化了才会替换旧文件 如果设置为no(默认)，则只会在目录路径下不存在该文件时才会进行下载</td></tr><tr><td style="text-align:left;">force</td><td style="text-align:left;">是否强制覆盖yes/no</td></tr><tr><td style="text-align:left;">url</td><td style="text-align:left;">指定一个URL地址</td></tr><tr><td style="text-align:left;">backup</td><td style="text-align:left;">下载文件时间时创建一个名称中包含时问戳的备份文件</td></tr><tr><td style="text-align:left;">tmp_dest</td><td style="text-align:left;">下载时临时存放目录，在任务执行完成前会删除下载的临时文件</td></tr><tr><td style="text-align:left;">group</td><td style="text-align:left;">文件/目录的所属组</td></tr><tr><td style="text-align:left;">owner</td><td style="text-align:left;">文件/目录的所有者</td></tr><tr><td style="text-align:left;">timeout</td><td style="text-align:left;">请求ur1时的超时时间，默认10秒钟</td></tr></tbody></table><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 下载一个指定文件到远程主机</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@ansible </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">/ansible]$ansible node -m get_url -a </span><span style="color:#9ECBFF;">&quot;url=http://mirrors.aliyun.com/repo/Centos-7.repo dest=/root&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 下载一个指定文件到远程主机</span></span>
<span class="line"><span style="color:#24292E;">[root@ansible </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">/ansible]$ansible node -m get_url -a </span><span style="color:#032F62;">&quot;url=http://mirrors.aliyun.com/repo/Centos-7.repo dest=/root&quot;</span></span></code></pre></div><h4 id="debug模块-1" tabindex="-1">debug模块 <a class="header-anchor" href="#debug模块-1" aria-label="Permalink to &quot;debug模块&quot;">​</a></h4><p><a href="https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_debugger.html#playbook-debugger" target="_blank" rel="noreferrer">https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_debugger.html#playbook-debugger</a></p>`,79),p=[e];function o(r,c,i,d,y,E){return a(),t("div",null,p)}const g=s(n,[["render",o]]);export{h as __pageData,g as default};
