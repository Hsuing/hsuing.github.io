import{_ as s,o as n,c as a,R as l}from"./chunks/framework.zUbWieqp.js";const C=JSON.parse('{"title":"1. Lark Notice介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/CICD/base_jenkins/3-feishu.md","filePath":"guide/container/k8s/CICD/base_jenkins/3-feishu.md","lastUpdated":1723709691000}'),p={name:"guide/container/k8s/CICD/base_jenkins/3-feishu.md"},o=l(`<h1 id="_1-lark-notice介绍" tabindex="-1">1. Lark Notice介绍 <a class="header-anchor" href="#_1-lark-notice介绍" aria-label="Permalink to &quot;1. Lark Notice介绍&quot;">​</a></h1><p>Lark Notice Plugin 是一个用于 Jenkins 的构建通知插件，可以将 Jenkins构建过程以及结果通知推送到 Lark、飞书、钉钉 协作平台。 可配置多个的通知时机，包括 构建启动时、构建中断、构建失败、构建成功时、构建不稳定 等。 支持多种不同类型的消息，包括 文本消息、图片消息， 群名片消息、富文本消息、卡片消息； 同时该插件还提供了自定义模板和变量的功能，使您能够根据自己的需求来定制通知消息的内容和格式</p><h1 id="_2-安装插件" tabindex="-1">2. 安装插件 <a class="header-anchor" href="#_2-安装插件" aria-label="Permalink to &quot;2. 安装插件&quot;">​</a></h1><p>版本依赖,jenkins-2.414.x</p><p>Lark Notice（通过上传文件的方式安装）<a href="https://721806280.github.io/lark-notice-plugin-doc/" target="_blank" rel="noreferrer">https://721806280.github.io/lark-notice-plugin-doc/</a></p><p>从 Jenkins 首页开始，点击 <code>系统管理</code> -&gt; <code>插件管理</code> , 找到 <code>Deploy Plugin</code> 选项后输入插件地址后点击 <code>deploy</code> 即可</p><blockquote><p>下载地址,<a href="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/lark-notice.hpi" target="_blank" rel="noreferrer">https://nnaigos.oss-cn-hangzhou.aliyuncs.com/lark-notice.hpi</a></p></blockquote><h1 id="_3-机器人配置" tabindex="-1">3. 机器人配置 <a class="header-anchor" href="#_3-机器人配置" aria-label="Permalink to &quot;3. 机器人配置&quot;">​</a></h1><h2 id="_3-2-申请机器人" tabindex="-1">3.2 申请机器人 <a class="header-anchor" href="#_3-2-申请机器人" aria-label="Permalink to &quot;3.2 申请机器人&quot;">​</a></h2><p>准备工作，在飞书群新建一个机器人（<a href="https://open.feishu.cn/document/client-docs/bot-v3/add-custom-bot%EF%BC%89" target="_blank" rel="noreferrer">https://open.feishu.cn/document/client-docs/bot-v3/add-custom-bot）</a></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202408061523702.png" alt="image-20240806152312416"></p><ul><li>配置关键字</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202408061524981.png" alt="image-20240806152402605"></p><p>之后保存即可</p><h2 id="_3-2-配置" tabindex="-1">3.2 配置 <a class="header-anchor" href="#_3-2-配置" aria-label="Permalink to &quot;3.2 配置&quot;">​</a></h2><p>打开 <code>Manage Jenkins</code> 页面，找到 <code>Lark Notice</code> 配置项，如下图所示：</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202408061511407.png" alt="image-20240806151104482"></p><p>点进去</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202408061519220.png" alt="image-20240806151920843"></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202408061521054.png" alt="image-20240806152150780"></p><ul><li>测试</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202408061524917.png" alt="image-20240806152439213"></p><ul><li>效果</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202408061525825.png" alt="image-20240806152507635"></p><ul><li>重启jenkins服务</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">http://url/safeRestart</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">http://url/safeRestart</span></span></code></pre></div><h1 id="_4-线上案例" tabindex="-1">4. 线上案例 <a class="header-anchor" href="#_4-线上案例" aria-label="Permalink to &quot;4. 线上案例&quot;">​</a></h1><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git_address</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;http://house.freehan.ink/root/springdemo.git&quot;</span></span>
<span class="line"><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git_auth</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;02d72dd6-0eab-4261-b0c0-12824e083421&quot;</span></span>
<span class="line"><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tag</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;latest&quot;</span></span>
<span class="line"><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">harbor_url</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;registry.cn-zhangjiakou.aliyuncs.com&quot;</span></span>
<span class="line"><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">harbor_project_name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;spring&quot;</span></span>
<span class="line"><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">harbor_auth</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;1e7ee468-9da7-469b-a43a-56556b56f308&quot;</span></span>
<span class="line"><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Date</span><span style="color:#E1E4E8;">()</span><span style="color:#9ECBFF;">.format</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">&#39;yyyy-MM-dd HH:mm:ss&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">通知机器人配置</span></span>
<span class="line"><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lark_robot_id</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;55d84e77-d1c5-4b1c-9e0f-ea1630b4e236&#39;&quot;</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">飞书机器人ID</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">podTemplate(label:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;jenkins-slave-java&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cloud:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;kubernetes&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">containers:</span><span style="color:#E1E4E8;"> [ </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">containerTemplate(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">name:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;jnlp&#39;,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">image:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;registry.cn-zhangjiakou.aliyuncs.com/hsuing/jenkins-slave-maven:v1&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">ttyEnabled:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">    ),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">containerTemplate(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">name:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;docker&#39;,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">image:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;registry.cn-zhangjiakou.aliyuncs.com/hsuing/docker:stable&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">ttyEnabled:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">command</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;cat&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">volumes:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">hostPathVolume(mountPath:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/var/run/docker.sock&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hostPath:&#39;/var/run/docker.sock&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">node(</span><span style="color:#B392F0;">&quot;jenkins-slave-java&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">try</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">stage(</span><span style="color:#B392F0;">&#39;拉取代码&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">checkout([$class:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;GitSCM&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">branches:</span><span style="color:#E1E4E8;"> [[name: </span><span style="color:#9ECBFF;">&#39;*/main&#39;]],</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">extensions:</span><span style="color:#E1E4E8;"> [], userRemoteConfigs: [[credentialsId: git_auth, url: git_address]]])</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">//定义全局newTag</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">newTag</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sh</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">returnStdout:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,script:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;echo \`date +&quot;%Y%m%d%H%M&quot;_\`\`git describe --tags --always\`&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#9ECBFF;">.trim</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#B392F0;">stage(</span><span style="color:#B392F0;">&#39;编译描述&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">自定义设置构建历史显示的名称和描述信息</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">不同的部署方式设置构建历史显示的名称和描述信息方式不一样，根据自己的部署方式自行百度找到设置方法</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#B392F0;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">					</span><span style="color:#B392F0;">//设置buildName</span></span>
<span class="line"><span style="color:#E1E4E8;">					</span><span style="color:#B392F0;">wrap([$class:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;BuildUser&#39;]</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">						</span><span style="color:#B392F0;">//修改Description</span></span>
<span class="line"><span style="color:#E1E4E8;">						</span><span style="color:#B392F0;">buildDescription</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;\${</span><span style="color:#E1E4E8;">BUILD_USER</span><span style="color:#9ECBFF;">} &gt; \${</span><span style="color:#E1E4E8;">project_name</span><span style="color:#9ECBFF;">} &gt; \${</span><span style="color:#E1E4E8;">branch</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">					}</span></span>
<span class="line"><span style="color:#E1E4E8;">				}</span></span>
<span class="line"><span style="color:#E1E4E8;">			}</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">stage(</span><span style="color:#B392F0;">&#39;代码编译&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">selectedProjects</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">project_name.split</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">&#39;,&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">selectedProjects.each</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">currentProjectName</span><span style="color:#E1E4E8;"> -</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">imageName</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;\${</span><span style="color:#E1E4E8;">currentProjectName</span><span style="color:#9ECBFF;">}:\${</span><span style="color:#E1E4E8;">tag</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">//def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">newTag</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sh</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">returnStdout:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">script:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;echo \`date +&quot;%Y%m%d%H%M&quot;_\`\`git describe --tags --always\`&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#9ECBFF;">.trim</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">sh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;mvn clean package -Dmaven.test.skip=true&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">stage(</span><span style="color:#B392F0;">&#39;构建镜像&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">selectedProjects</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">project_name.split</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">&#39;,&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">container(</span><span style="color:#B392F0;">&#39;docker&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">selectedProjects.each</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">currentProjectName</span><span style="color:#E1E4E8;"> -</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">imageName</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;\${</span><span style="color:#E1E4E8;">currentProjectName</span><span style="color:#9ECBFF;">}:\${</span><span style="color:#E1E4E8;">tag</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#B392F0;">//def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">newTag</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sh</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">returnStdout:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">script:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;echo \`date +&quot;%Y%m%d%H%M&quot;_\`\`git describe --tags --always\`&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#9ECBFF;">.trim</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#B392F0;">sh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;docker build -t \${</span><span style="color:#E1E4E8;">imageName</span><span style="color:#9ECBFF;">} .&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#B392F0;">sh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;docker tag \${</span><span style="color:#E1E4E8;">imageName</span><span style="color:#9ECBFF;">} \${</span><span style="color:#E1E4E8;">harbor_url</span><span style="color:#9ECBFF;">}/hsuing/\${</span><span style="color:#E1E4E8;">harbor_project_name</span><span style="color:#9ECBFF;">}:\${</span><span style="color:#E1E4E8;">newTag</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#B392F0;">withCredentials([usernamePassword(credentialsId:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">harbor_auth,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">passwordVariable:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;password&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">usernameVariable:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;username&#39;</span><span style="color:#E1E4E8;">)]) {</span></span>
<span class="line"><span style="color:#E1E4E8;">							</span><span style="color:#B392F0;">//登录</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#B392F0;">sh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;docker login -u \${</span><span style="color:#E1E4E8;">username</span><span style="color:#9ECBFF;">} -p \${</span><span style="color:#E1E4E8;">password</span><span style="color:#9ECBFF;">} \${</span><span style="color:#E1E4E8;">harbor_url</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#B392F0;">//上传镜像</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#B392F0;">sh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;docker push \${</span><span style="color:#E1E4E8;">harbor_url</span><span style="color:#9ECBFF;">}/hsuing/\${</span><span style="color:#E1E4E8;">harbor_project_name</span><span style="color:#9ECBFF;">}:\${</span><span style="color:#E1E4E8;">newTag</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        }</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#B392F0;">//删除本地镜像</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#B392F0;">sh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;docker rmi -f \${</span><span style="color:#E1E4E8;">imageName</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#B392F0;">sh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;docker rmi -f \${</span><span style="color:#E1E4E8;">harbor_url</span><span style="color:#9ECBFF;">}/hsuing/\${</span><span style="color:#E1E4E8;">harbor_project_name</span><span style="color:#9ECBFF;">}:\${</span><span style="color:#E1E4E8;">newTag</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">stage(</span><span style="color:#B392F0;">&#39;部署到k8s平台&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">selectedProjects</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">project_name.split</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">&#39;,&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">selectedProjects.each</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">currentProjectName</span><span style="color:#E1E4E8;"> -</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">//def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">newTag</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sh</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">returnStdout:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">script:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;echo \`date +&quot;%Y%m%d%H%M&quot;_\`\`git describe --tags --always\`&#39;</span><span style="color:#E1E4E8;">)</span><span style="color:#9ECBFF;">.trim</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">deploy_image_name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;\${</span><span style="color:#E1E4E8;">harbor_url</span><span style="color:#9ECBFF;">}/hsuing/\${</span><span style="color:#E1E4E8;">harbor_project_name</span><span style="color:#9ECBFF;">}:\${</span><span style="color:#E1E4E8;">newTag</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">sh</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">                        sed -i &#39;s#</span><span style="color:#79B8FF;">\\$</span><span style="color:#9ECBFF;">IMAGE_NAME#\${</span><span style="color:#E1E4E8;">deploy_image_name</span><span style="color:#9ECBFF;">}#&#39; deployment.yaml</span></span>
<span class="line"><span style="color:#9ECBFF;">                        sed -i &#39;s#</span><span style="color:#79B8FF;">\\$</span><span style="color:#9ECBFF;">APP_NAME#\${</span><span style="color:#E1E4E8;">currentProjectName</span><span style="color:#9ECBFF;">}#&#39;  deployment.yaml</span></span>
<span class="line"><span style="color:#9ECBFF;">                        sed -i &#39;s#</span><span style="color:#79B8FF;">\\$</span><span style="color:#9ECBFF;">APP_REPLICAS#\${</span><span style="color:#E1E4E8;">replicas</span><span style="color:#9ECBFF;">}#&#39; deployment.yaml</span></span>
<span class="line"><span style="color:#9ECBFF;">                        sed -i &#39;s#</span><span style="color:#79B8FF;">\\$</span><span style="color:#9ECBFF;">NAMESPACE#\${</span><span style="color:#E1E4E8;">namespaces</span><span style="color:#9ECBFF;">}#&#39; deployment.yaml</span></span>
<span class="line"><span style="color:#9ECBFF;">                        sed -i &#39;s#</span><span style="color:#79B8FF;">\\$</span><span style="color:#9ECBFF;">SPRINGENV#\${</span><span style="color:#E1E4E8;">springProfilesActive</span><span style="color:#9ECBFF;">}#&#39; deployment.yaml</span></span>
<span class="line"><span style="color:#9ECBFF;">                        sed -i &#39;s#</span><span style="color:#79B8FF;">\\$</span><span style="color:#9ECBFF;">PODMEMORY#\${</span><span style="color:#E1E4E8;">podsMem</span><span style="color:#9ECBFF;">}#&#39; deployment.yaml</span></span>
<span class="line"><span style="color:#9ECBFF;">                        sed -i &#39;s#</span><span style="color:#79B8FF;">\\$</span><span style="color:#9ECBFF;">PODCPU#\${</span><span style="color:#E1E4E8;">podsCpu</span><span style="color:#9ECBFF;">}#&#39; deployment.yaml</span></span>
<span class="line"><span style="color:#9ECBFF;">                        cat deployment.yaml</span></span>
<span class="line"><span style="color:#9ECBFF;">                    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">kubernetesDeploy(kubeconfigId:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;55a88b59-fd12-4bf0-ba57-8a664fed2f71&quot;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">configs:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;deployment.yaml&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">stage(</span><span style="color:#B392F0;">&#39;发送飞书通知&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">获取执行用户</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">wrap([$class:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;BuildUser&#39;]</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">发送飞书通知</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#B392F0;">lark</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#B392F0;">robot:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$lark_robot_id</span><span style="color:#9ECBFF;">&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;CARD&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#B392F0;">title:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;📢  Jenkins 镜像构建成功&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#B392F0;">text:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#B392F0;">&quot;📋 **任务名称**：[\${</span><span style="color:#E1E4E8;">JOB_NAME</span><span style="color:#B392F0;">}](\${</span><span style="color:#E1E4E8;">JOB_URL</span><span style="color:#B392F0;">})&quot;</span><span style="color:#B392F0;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#B392F0;">&quot;🔢 **任务编号**：[\${</span><span style="color:#E1E4E8;">BUILD_DISPLAY_NAME</span><span style="color:#B392F0;">}](\${</span><span style="color:#E1E4E8;">BUILD_URL</span><span style="color:#B392F0;">})&quot;</span><span style="color:#B392F0;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#B392F0;">&quot;🌟 **构建状态**: &lt;font color=&#39;green&#39;&gt;成功&lt;/font&gt;&quot;</span><span style="color:#B392F0;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#B392F0;">&quot;🤩 **镜像版本**: \${</span><span style="color:#E1E4E8;">newTag</span><span style="color:#B392F0;">}&quot;</span><span style="color:#B392F0;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#B392F0;">&quot;😎 **镜像仓库**: \${</span><span style="color:#E1E4E8;">harbor_url</span><span style="color:#B392F0;">}/hsuing/\${</span><span style="color:#E1E4E8;">harbor_project_name</span><span style="color:#B392F0;">}&quot;</span><span style="color:#B392F0;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#B392F0;">&quot;🕐 **构建用时**: \${</span><span style="color:#E1E4E8;">currentBuild</span><span style="color:#B392F0;">.</span><span style="color:#E1E4E8;">duration</span><span style="color:#B392F0;">} ms&quot;</span><span style="color:#B392F0;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#B392F0;">&quot;👤 **执行者**: \${</span><span style="color:#E1E4E8;">env</span><span style="color:#B392F0;">.</span><span style="color:#E1E4E8;">BUILD_USER</span><span style="color:#B392F0;">}&quot;</span><span style="color:#B392F0;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                            </span><span style="color:#B392F0;">&quot;&lt;at id=all&gt;&lt;/at&gt;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                        ],</span></span>
<span class="line"><span style="color:#E1E4E8;">                        </span><span style="color:#B392F0;">buttons:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">                            [</span></span>
<span class="line"><span style="color:#E1E4E8;">                                title: </span><span style="color:#9ECBFF;">&quot;更改记录&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                url: </span><span style="color:#9ECBFF;">&quot;\${</span><span style="color:#E1E4E8;">BUILD_URL</span><span style="color:#9ECBFF;">}changes&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                            ]</span><span style="color:#B392F0;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                            [</span></span>
<span class="line"><span style="color:#E1E4E8;">                                title: </span><span style="color:#9ECBFF;">&quot;控制台&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                type: </span><span style="color:#9ECBFF;">&quot;danger&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                                url: </span><span style="color:#9ECBFF;">&quot;\${</span><span style="color:#E1E4E8;">BUILD_URL</span><span style="color:#9ECBFF;">}console&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                            ]</span></span>
<span class="line"><span style="color:#E1E4E8;">                        ]</span></span>
<span class="line"><span style="color:#E1E4E8;">                    )</span></span>
<span class="line"><span style="color:#E1E4E8;">                }</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        } catch (</span><span style="color:#B392F0;">Exception</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">currentBuild.result</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;FAILURE&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Pipeline failed: \${</span><span style="color:#E1E4E8;">e</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">message</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git_address</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;http://house.freehan.ink/root/springdemo.git&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git_auth</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;02d72dd6-0eab-4261-b0c0-12824e083421&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tag</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;latest&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">harbor_url</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;registry.cn-zhangjiakou.aliyuncs.com&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">harbor_project_name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;spring&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">harbor_auth</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;1e7ee468-9da7-469b-a43a-56556b56f308&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Date</span><span style="color:#24292E;">()</span><span style="color:#032F62;">.format</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">&#39;yyyy-MM-dd HH:mm:ss&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">通知机器人配置</span></span>
<span class="line"><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lark_robot_id</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;55d84e77-d1c5-4b1c-9e0f-ea1630b4e236&#39;&quot;</span><span style="color:#24292E;">  </span><span style="color:#032F62;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">飞书机器人ID</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">podTemplate(label:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;jenkins-slave-java&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cloud:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;kubernetes&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">containers:</span><span style="color:#24292E;"> [ </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">containerTemplate(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">name:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;jnlp&#39;,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">image:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;registry.cn-zhangjiakou.aliyuncs.com/hsuing/jenkins-slave-maven:v1&quot;,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">ttyEnabled:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">    ),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">containerTemplate(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">name:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;docker&#39;,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">image:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;registry.cn-zhangjiakou.aliyuncs.com/hsuing/docker:stable&quot;,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">ttyEnabled:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">command</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;cat&#39;</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">volumes:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">hostPathVolume(mountPath:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/var/run/docker.sock&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hostPath:&#39;/var/run/docker.sock&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">node(</span><span style="color:#6F42C1;">&quot;jenkins-slave-java&quot;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">try</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">stage(</span><span style="color:#6F42C1;">&#39;拉取代码&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">checkout([$class:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;GitSCM&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">branches:</span><span style="color:#24292E;"> [[name: </span><span style="color:#032F62;">&#39;*/main&#39;]],</span><span style="color:#24292E;"> </span><span style="color:#032F62;">extensions:</span><span style="color:#24292E;"> [], userRemoteConfigs: [[credentialsId: git_auth, url: git_address]]])</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">//定义全局newTag</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">newTag</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sh</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">returnStdout:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,script:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;echo \`date +&quot;%Y%m%d%H%M&quot;_\`\`git describe --tags --always\`&#39;</span><span style="color:#24292E;">)</span><span style="color:#032F62;">.trim</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#6F42C1;">stage(</span><span style="color:#6F42C1;">&#39;编译描述&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">自定义设置构建历史显示的名称和描述信息</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">不同的部署方式设置构建历史显示的名称和描述信息方式不一样，根据自己的部署方式自行百度找到设置方法</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#6F42C1;">script</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span></span>
<span class="line"><span style="color:#24292E;">					</span><span style="color:#6F42C1;">//设置buildName</span></span>
<span class="line"><span style="color:#24292E;">					</span><span style="color:#6F42C1;">wrap([$class:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;BuildUser&#39;]</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">						</span><span style="color:#6F42C1;">//修改Description</span></span>
<span class="line"><span style="color:#24292E;">						</span><span style="color:#6F42C1;">buildDescription</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;\${</span><span style="color:#24292E;">BUILD_USER</span><span style="color:#032F62;">} &gt; \${</span><span style="color:#24292E;">project_name</span><span style="color:#032F62;">} &gt; \${</span><span style="color:#24292E;">branch</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#24292E;">					}</span></span>
<span class="line"><span style="color:#24292E;">				}</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">stage(</span><span style="color:#6F42C1;">&#39;代码编译&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">selectedProjects</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">project_name.split</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">&#39;,&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">selectedProjects.each</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">currentProjectName</span><span style="color:#24292E;"> -</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">imageName</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;\${</span><span style="color:#24292E;">currentProjectName</span><span style="color:#032F62;">}:\${</span><span style="color:#24292E;">tag</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">//def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">newTag</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sh</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">returnStdout:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">script:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;echo \`date +&quot;%Y%m%d%H%M&quot;_\`\`git describe --tags --always\`&#39;</span><span style="color:#24292E;">)</span><span style="color:#032F62;">.trim</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">sh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;mvn clean package -Dmaven.test.skip=true&quot;</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">			</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">stage(</span><span style="color:#6F42C1;">&#39;构建镜像&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">selectedProjects</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">project_name.split</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">&#39;,&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">container(</span><span style="color:#6F42C1;">&#39;docker&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">selectedProjects.each</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">currentProjectName</span><span style="color:#24292E;"> -</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">imageName</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;\${</span><span style="color:#24292E;">currentProjectName</span><span style="color:#032F62;">}:\${</span><span style="color:#24292E;">tag</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">//def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">newTag</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sh</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">returnStdout:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">script:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;echo \`date +&quot;%Y%m%d%H%M&quot;_\`\`git describe --tags --always\`&#39;</span><span style="color:#24292E;">)</span><span style="color:#032F62;">.trim</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">sh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;docker build -t \${</span><span style="color:#24292E;">imageName</span><span style="color:#032F62;">} .&quot;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">sh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;docker tag \${</span><span style="color:#24292E;">imageName</span><span style="color:#032F62;">} \${</span><span style="color:#24292E;">harbor_url</span><span style="color:#032F62;">}/hsuing/\${</span><span style="color:#24292E;">harbor_project_name</span><span style="color:#032F62;">}:\${</span><span style="color:#24292E;">newTag</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">withCredentials([usernamePassword(credentialsId:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">harbor_auth,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">passwordVariable:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;password&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">usernameVariable:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;username&#39;</span><span style="color:#24292E;">)]) {</span></span>
<span class="line"><span style="color:#24292E;">							</span><span style="color:#6F42C1;">//登录</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6F42C1;">sh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;docker login -u \${</span><span style="color:#24292E;">username</span><span style="color:#032F62;">} -p \${</span><span style="color:#24292E;">password</span><span style="color:#032F62;">} \${</span><span style="color:#24292E;">harbor_url</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6F42C1;">//上传镜像</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6F42C1;">sh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;docker push \${</span><span style="color:#24292E;">harbor_url</span><span style="color:#032F62;">}/hsuing/\${</span><span style="color:#24292E;">harbor_project_name</span><span style="color:#032F62;">}:\${</span><span style="color:#24292E;">newTag</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#24292E;">                        }</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">//删除本地镜像</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">sh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;docker rmi -f \${</span><span style="color:#24292E;">imageName</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">sh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;docker rmi -f \${</span><span style="color:#24292E;">harbor_url</span><span style="color:#032F62;">}/hsuing/\${</span><span style="color:#24292E;">harbor_project_name</span><span style="color:#032F62;">}:\${</span><span style="color:#24292E;">newTag</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#24292E;">                    }</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">stage(</span><span style="color:#6F42C1;">&#39;部署到k8s平台&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">selectedProjects</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">project_name.split</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">&#39;,&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">selectedProjects.each</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{</span><span style="color:#24292E;"> </span><span style="color:#032F62;">currentProjectName</span><span style="color:#24292E;"> -</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">//def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">newTag</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sh</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">returnStdout:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">script:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;echo \`date +&quot;%Y%m%d%H%M&quot;_\`\`git describe --tags --always\`&#39;</span><span style="color:#24292E;">)</span><span style="color:#032F62;">.trim</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">def</span><span style="color:#24292E;"> </span><span style="color:#032F62;">deploy_image_name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;\${</span><span style="color:#24292E;">harbor_url</span><span style="color:#032F62;">}/hsuing/\${</span><span style="color:#24292E;">harbor_project_name</span><span style="color:#032F62;">}:\${</span><span style="color:#24292E;">newTag</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">sh</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">                        sed -i &#39;s#</span><span style="color:#005CC5;">\\$</span><span style="color:#032F62;">IMAGE_NAME#\${</span><span style="color:#24292E;">deploy_image_name</span><span style="color:#032F62;">}#&#39; deployment.yaml</span></span>
<span class="line"><span style="color:#032F62;">                        sed -i &#39;s#</span><span style="color:#005CC5;">\\$</span><span style="color:#032F62;">APP_NAME#\${</span><span style="color:#24292E;">currentProjectName</span><span style="color:#032F62;">}#&#39;  deployment.yaml</span></span>
<span class="line"><span style="color:#032F62;">                        sed -i &#39;s#</span><span style="color:#005CC5;">\\$</span><span style="color:#032F62;">APP_REPLICAS#\${</span><span style="color:#24292E;">replicas</span><span style="color:#032F62;">}#&#39; deployment.yaml</span></span>
<span class="line"><span style="color:#032F62;">                        sed -i &#39;s#</span><span style="color:#005CC5;">\\$</span><span style="color:#032F62;">NAMESPACE#\${</span><span style="color:#24292E;">namespaces</span><span style="color:#032F62;">}#&#39; deployment.yaml</span></span>
<span class="line"><span style="color:#032F62;">                        sed -i &#39;s#</span><span style="color:#005CC5;">\\$</span><span style="color:#032F62;">SPRINGENV#\${</span><span style="color:#24292E;">springProfilesActive</span><span style="color:#032F62;">}#&#39; deployment.yaml</span></span>
<span class="line"><span style="color:#032F62;">                        sed -i &#39;s#</span><span style="color:#005CC5;">\\$</span><span style="color:#032F62;">PODMEMORY#\${</span><span style="color:#24292E;">podsMem</span><span style="color:#032F62;">}#&#39; deployment.yaml</span></span>
<span class="line"><span style="color:#032F62;">                        sed -i &#39;s#</span><span style="color:#005CC5;">\\$</span><span style="color:#032F62;">PODCPU#\${</span><span style="color:#24292E;">podsCpu</span><span style="color:#032F62;">}#&#39; deployment.yaml</span></span>
<span class="line"><span style="color:#032F62;">                        cat deployment.yaml</span></span>
<span class="line"><span style="color:#032F62;">                    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">kubernetesDeploy(kubeconfigId:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;55a88b59-fd12-4bf0-ba57-8a664fed2f71&quot;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">configs:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;deployment.yaml&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">stage(</span><span style="color:#6F42C1;">&#39;发送飞书通知&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">获取执行用户</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">wrap([$class:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;BuildUser&#39;]</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> </span><span style="color:#032F62;">发送飞书通知</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6F42C1;">lark</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">robot:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$lark_robot_id</span><span style="color:#032F62;">&quot;,</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;CARD&quot;,</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">title:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;📢  Jenkins 镜像构建成功&quot;,</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">text:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6F42C1;">&quot;📋 **任务名称**：[\${</span><span style="color:#24292E;">JOB_NAME</span><span style="color:#6F42C1;">}](\${</span><span style="color:#24292E;">JOB_URL</span><span style="color:#6F42C1;">})&quot;</span><span style="color:#6F42C1;">,</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6F42C1;">&quot;🔢 **任务编号**：[\${</span><span style="color:#24292E;">BUILD_DISPLAY_NAME</span><span style="color:#6F42C1;">}](\${</span><span style="color:#24292E;">BUILD_URL</span><span style="color:#6F42C1;">})&quot;</span><span style="color:#6F42C1;">,</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6F42C1;">&quot;🌟 **构建状态**: &lt;font color=&#39;green&#39;&gt;成功&lt;/font&gt;&quot;</span><span style="color:#6F42C1;">,</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6F42C1;">&quot;🤩 **镜像版本**: \${</span><span style="color:#24292E;">newTag</span><span style="color:#6F42C1;">}&quot;</span><span style="color:#6F42C1;">,</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6F42C1;">&quot;😎 **镜像仓库**: \${</span><span style="color:#24292E;">harbor_url</span><span style="color:#6F42C1;">}/hsuing/\${</span><span style="color:#24292E;">harbor_project_name</span><span style="color:#6F42C1;">}&quot;</span><span style="color:#6F42C1;">,</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6F42C1;">&quot;🕐 **构建用时**: \${</span><span style="color:#24292E;">currentBuild</span><span style="color:#6F42C1;">.</span><span style="color:#24292E;">duration</span><span style="color:#6F42C1;">} ms&quot;</span><span style="color:#6F42C1;">,</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6F42C1;">&quot;👤 **执行者**: \${</span><span style="color:#24292E;">env</span><span style="color:#6F42C1;">.</span><span style="color:#24292E;">BUILD_USER</span><span style="color:#6F42C1;">}&quot;</span><span style="color:#6F42C1;">,</span></span>
<span class="line"><span style="color:#24292E;">                            </span><span style="color:#6F42C1;">&quot;&lt;at id=all&gt;&lt;/at&gt;&quot;</span></span>
<span class="line"><span style="color:#24292E;">                        ],</span></span>
<span class="line"><span style="color:#24292E;">                        </span><span style="color:#6F42C1;">buttons:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">                            [</span></span>
<span class="line"><span style="color:#24292E;">                                title: </span><span style="color:#032F62;">&quot;更改记录&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                url: </span><span style="color:#032F62;">&quot;\${</span><span style="color:#24292E;">BUILD_URL</span><span style="color:#032F62;">}changes&quot;</span></span>
<span class="line"><span style="color:#24292E;">                            ]</span><span style="color:#6F42C1;">,</span></span>
<span class="line"><span style="color:#24292E;">                            [</span></span>
<span class="line"><span style="color:#24292E;">                                title: </span><span style="color:#032F62;">&quot;控制台&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                type: </span><span style="color:#032F62;">&quot;danger&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                                url: </span><span style="color:#032F62;">&quot;\${</span><span style="color:#24292E;">BUILD_URL</span><span style="color:#032F62;">}console&quot;</span></span>
<span class="line"><span style="color:#24292E;">                            ]</span></span>
<span class="line"><span style="color:#24292E;">                        ]</span></span>
<span class="line"><span style="color:#24292E;">                    )</span></span>
<span class="line"><span style="color:#24292E;">                }</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        } catch (</span><span style="color:#6F42C1;">Exception</span><span style="color:#24292E;"> </span><span style="color:#032F62;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">currentBuild.result</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;FAILURE&#39;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">error</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Pipeline failed: \${</span><span style="color:#24292E;">e</span><span style="color:#032F62;">.</span><span style="color:#24292E;">message</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>效果</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202408151504521.png" alt="image-20240815150401558"></p><ul><li>报警效果</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202408151505149.png" alt="image-20240815150447789"></p>`,32),e=[o];function t(c,r,E,y,F,i){return n(),a("div",null,e)}const B=s(p,[["render",t]]);export{C as __pageData,B as default};
