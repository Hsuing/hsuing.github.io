import{_ as s,o,c as n,R as a}from"./chunks/framework.zUbWieqp.js";const F=JSON.parse('{"title":"1. 日志驱动","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/docker/10-log.md","filePath":"guide/container/docker/10-log.md","lastUpdated":1732012163000}'),e={name:"guide/container/docker/10-log.md"},l=a(`<h1 id="_1-日志驱动" tabindex="-1">1. 日志驱动 <a class="header-anchor" href="#_1-日志驱动" aria-label="Permalink to &quot;1. 日志驱动&quot;">​</a></h1><p>Docker包括多种容器日志记录方式，这个机制又叫做logging drivers。logging driver经常在配置在Docker 守护进程级别，默认的logging driver是json-file. 还支持以下几种级别</p><table><thead><tr><th><a href="https://docs.docker.com/engine/logging/configure/" target="_blank" rel="noreferrer">Driver</a></th><th>Description</th></tr></thead><tbody><tr><td><code>none</code></td><td>No logs are available for the container and <code>docker logs</code> does not return any output.</td></tr><tr><td><a href="https://docs.docker.com/engine/logging/drivers/local/" target="_blank" rel="noreferrer"><code>local</code></a></td><td>Logs are stored in a custom format designed for minimal overhead.</td></tr><tr><td><a href="https://docs.docker.com/engine/logging/drivers/json-file/" target="_blank" rel="noreferrer"><code>json-file</code></a></td><td>The logs are formatted as JSON. The default logging driver for Docker.</td></tr><tr><td><a href="https://docs.docker.com/engine/logging/drivers/syslog/" target="_blank" rel="noreferrer"><code>syslog</code></a></td><td>Writes logging messages to the <code>syslog</code> facility. The <code>syslog</code> daemon must be running on the host machine.</td></tr><tr><td><a href="https://docs.docker.com/engine/logging/drivers/journald/" target="_blank" rel="noreferrer"><code>journald</code></a></td><td>Writes log messages to <code>journald</code>. The <code>journald</code> daemon must be running on the host machine.</td></tr><tr><td><a href="https://docs.docker.com/engine/logging/drivers/gelf/" target="_blank" rel="noreferrer"><code>gelf</code></a></td><td>Writes log messages to a Graylog Extended Log Format (GELF) endpoint such as Graylog or Logstash.</td></tr></tbody></table><h2 id="_1-1-查看" tabindex="-1">1.1 查看 <a class="header-anchor" href="#_1-1-查看" aria-label="Permalink to &quot;1.1 查看&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#查看全局</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">info</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--format</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{{.LoggingDriver}}&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#查看单独</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">inspect</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{{.HostConfig.LogConfig.Type}}&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">CONTAINER</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">#查看全局</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">info</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--format</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{{.LoggingDriver}}&#39;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;">#查看单独</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">inspect</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{{.HostConfig.LogConfig.Type}}&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">CONTAINER</span></span></code></pre></div><h2 id="_1-2-模式" tabindex="-1">1.2 模式 <a class="header-anchor" href="#_1-2-模式" aria-label="Permalink to &quot;1.2 模式&quot;">​</a></h2><h3 id="_1-none" tabindex="-1">1.none <a class="header-anchor" href="#_1-none" aria-label="Permalink to &quot;1.none&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">container</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">none_logging_driver</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-it</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--log-driver</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">none</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">busybox</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sh</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;for N in 1 2 3; do echo &quot;Hello $N&quot;; done&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/var/lib/docker/containers/$(</span><span style="color:#B392F0;">docker</span><span style="color:#9ECBFF;"> ps </span><span style="color:#79B8FF;">--no-trunc</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-aqf</span><span style="color:#9ECBFF;"> &quot;name=none_logging_driver&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">none_logging_driver</span></span>
<span class="line"><span style="color:#B392F0;">Error</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">response</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">daemon:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">configured</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">logging</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">driver</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">does</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">support</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">reading</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">container</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">none_logging_driver</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-it</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--log-driver</span><span style="color:#24292E;"> </span><span style="color:#032F62;">none</span><span style="color:#24292E;"> </span><span style="color:#032F62;">busybox</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sh</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;for N in 1 2 3; do echo &quot;Hello $N&quot;; done&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/var/lib/docker/containers/$(</span><span style="color:#6F42C1;">docker</span><span style="color:#032F62;"> ps </span><span style="color:#005CC5;">--no-trunc</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-aqf</span><span style="color:#032F62;"> &quot;name=none_logging_driver&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">logs</span><span style="color:#24292E;"> </span><span style="color:#032F62;">none_logging_driver</span></span>
<span class="line"><span style="color:#6F42C1;">Error</span><span style="color:#24292E;"> </span><span style="color:#032F62;">response</span><span style="color:#24292E;"> </span><span style="color:#032F62;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">daemon:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">configured</span><span style="color:#24292E;"> </span><span style="color:#032F62;">logging</span><span style="color:#24292E;"> </span><span style="color:#032F62;">driver</span><span style="color:#24292E;"> </span><span style="color:#032F62;">does</span><span style="color:#24292E;"> </span><span style="color:#032F62;">not</span><span style="color:#24292E;"> </span><span style="color:#032F62;">support</span><span style="color:#24292E;"> </span><span style="color:#032F62;">reading</span></span></code></pre></div><p><a href="https://docs.docker.com/reference/cli/docker/container/logs/" target="_blank" rel="noreferrer">官当</a></p>`,9),p=[l];function r(t,c,d,y,E,i){return o(),n("div",null,p)}const h=s(e,[["render",r]]);export{F as __pageData,h as default};
