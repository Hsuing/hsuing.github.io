import{_ as e,o as a,c as s,R as n}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/web/nginx/modules/15-Rewrite.md","filePath":"guide/Linux/web/nginx/modules/15-Rewrite.md","lastUpdated":1701684699000}'),t={name:"guide/Linux/web/nginx/modules/15-Rewrite.md"},p=n(`<p>**简介：**Rewrite是Nginx服务器提供的一个重要的功能，它可以实现URL重定向功能</p><h2 id="_1-理解地址重写-与-地址转发的含义" tabindex="-1">1.理解地址重写 与 地址转发的含义 <a class="header-anchor" href="#_1-理解地址重写-与-地址转发的含义" aria-label="Permalink to &quot;1.理解地址重写 与 地址转发的含义&quot;">​</a></h2><p><strong>地址重写</strong>与<strong>地址转发</strong>是两个不同的概念。</p><p><strong>地址重写</strong> 是为了实现地址的标准化，比如我们可以在地址栏中中输入 www.baidu.com. 我们也可以输入 www.baidu.cn. 最后都会被重写到 www.baidu.com 上。浏览器的地址栏也会显示www.baidu.com。</p><p><strong>地址转发</strong>：它是指在网络数据传输过程中数据分组到达路由器或桥接器后，该设备通过检查分组地址并将数据转发到最近的局域网的过程。</p><p><strong>因此地址重写和地址转发有以下不同点：</strong></p><ol><li>地址重写会改变浏览器中的地址，使之变成重写成浏览器最新的地址。而地址转发他是不会改变浏览器的地址的。</li><li>地址重写会产生两次请求，而地址转发只会有一次请求。</li><li>地址转发一般发生在同一站点项目内部，而地址重写且不受限制。</li><li>地址转发的速度比地址重定向快。</li></ol><h2 id="_2-理解-rewrite指令-使用" tabindex="-1">2.理解 Rewrite指令 使用 <a class="header-anchor" href="#_2-理解-rewrite指令-使用" aria-label="Permalink to &quot;2.理解 Rewrite指令 使用&quot;">​</a></h2><p>该指令是通过正则表达式的使用来改变URI。可以同时存在一个或多个指令。需要按照顺序依次对URL进行匹配和处理。</p><p>该指令可以在server块或location块中配置，其基本语法结构如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">rewrite regex replacement [flag];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">rewrite regex replacement [flag];</span></span></code></pre></div><p><strong>rewrite</strong>的含义：该指令是实现URL重写的指令。</p><p><strong>regex</strong>的含义：用于匹配URI的正则表达式。</p><p><strong>replacement</strong>：将regex正则匹配到的内容替换成 replacement。</p><p><strong>flag: flag</strong>标记。</p><p>flag有如下值：</p><p><strong>last:</strong> 本条规则匹配完成后，继续向下匹配新的location URI 规则。(不常用)</p><p><strong>break:</strong> 本条规则匹配完成即终止，不再匹配后面的任何规则(不常用)。</p><p><strong>redirect:</strong> 返回302临时重定向，浏览器地址会显示跳转新的URL地址。</p><p><strong>permanent:</strong> 返回301永久重定向。浏览器地址会显示跳转新的URL地址</p><p>比如如下列子：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">rewrite ^/(.*) http://www.baidu.com/$1 permanent;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">rewrite ^/(.*) http://www.baidu.com/$1 permanent;</span></span></code></pre></div><p>说明： <strong>rewrite</strong> 为固定关键字，表示开始进行rewrite匹配规则。</p><p><strong>regex</strong> 为 ^/(.*)。 这是一个正则表达式，匹配完整的域名和后面的路径地址。</p><p><strong>replacement</strong>就是 <a href="http://www.baidu.com/1%E8%BF%99%E5%9D%97%E4%BA%86%EF%BC%8C%E5%85%B6%E4%B8%AD1%E8%BF%99%E5%9D%97%E4%BA%86%EF%BC%8C%E5%85%B6%E4%B8%AD1%E6%98%AF%E5%8F%96regex%E9%83%A8%E5%88%86()%E9%87%8C%E9%9D%A2%E7%9A%84%E5%86%85%E5%AE%B9%E3%80%82%E5%A6%82%E6%9E%9C%E5%8C%B9%E9%85%8D%E6%88%90%E5%8A%9F%E5%90%8E%E8%B7%B3%E8%BD%AC%E5%88%B0%E7%9A%84URL%E3%80%82" target="_blank" rel="noreferrer">http://www.baidu.com/1这块了，其中1这块了，其中1是取regex部分()里面的内容。如果匹配成功后跳转到的URL。</a></p><p><strong>flag</strong> 就是 permanent，代表永久重定向的含义，即跳转到 <a href="http://www.baidu.com/$1" target="_blank" rel="noreferrer">http://www.baidu.com/$1</a> 地址上</p><h3 id="_2-1重定向状态码" tabindex="-1">2.1重定向状态码 <a class="header-anchor" href="#_2-1重定向状态码" aria-label="Permalink to &quot;2.1重定向状态码&quot;">​</a></h3><p>301：代表永久性转移(Permanently Moved)：旧地址A的资源已经被永久地移除了（这个资源不可访问了），搜索引擎在抓取新内容的同时也将旧的网址交换为重定向之后的网址；</p><p>302：代表暂时性转移(Temporarily Moved)：旧地址A的资源还在（仍然可以访问），这个重定向只是临时地从旧地址A跳转到地址B，搜索引擎会抓取新的内容而保存旧的网址。</p><p>301和302状态码都表示重定向，表示浏览器在拿到服务器返回的这个状态码后会自动跳转到一个新的URL地址，这个地址可以从响应的Location首部中获取（客户端输入的地址A瞬间变成了另一个地址B）。</p><h2 id="_3-案例" tabindex="-1">3.案例 <a class="header-anchor" href="#_3-案例" aria-label="Permalink to &quot;3.案例&quot;">​</a></h2><ul><li>把访问xxx.com/app_share ---&gt; 变成，xxx.com/apps/ib-bcwex</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">location ~ ^/(app_share) {</span></span>
<span class="line"><span style="color:#e1e4e8;">    rewrite ^/.* http://$server_name/apps/ib-bcwex redirect;</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">permanent---&gt;301</span></span>
<span class="line"><span style="color:#e1e4e8;">redirect ---&gt;302</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">location ~ ^/(app_share) {</span></span>
<span class="line"><span style="color:#24292e;">    rewrite ^/.* http://$server_name/apps/ib-bcwex redirect;</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">permanent---&gt;301</span></span>
<span class="line"><span style="color:#24292e;">redirect ---&gt;302</span></span></code></pre></div><ul><li>为<code>test.com\\index</code>，<code>test.com\\home</code>，<code>test.com\\main</code>变成-----&gt;<code>test.com\\index.php</code></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">location ~ ^/(index|home|main) {</span></span>
<span class="line"><span style="color:#e1e4e8;">    rewrite ^/.* http://$server_name/index.php permanent;</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">location ~ ^/(index|home|main) {</span></span>
<span class="line"><span style="color:#24292e;">    rewrite ^/.* http://$server_name/index.php permanent;</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div>`,35),r=[p];function o(l,i,c,d,g,h){return a(),s("div",null,r)}const w=e(t,[["render",o]]);export{u as __pageData,w as default};
