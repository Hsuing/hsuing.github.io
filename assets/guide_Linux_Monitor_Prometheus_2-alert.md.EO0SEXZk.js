import{_ as s,o as a,c as n,R as l}from"./chunks/framework.zUbWieqp.js";const F=JSON.parse('{"title":"1. 告警模板","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/Monitor/Prometheus/2-alert.md","filePath":"guide/Linux/Monitor/Prometheus/2-alert.md","lastUpdated":1739960402000}'),p={name:"guide/Linux/Monitor/Prometheus/2-alert.md"},o=l(`<h1 id="_1-告警模板" tabindex="-1">1. 告警模板 <a class="header-anchor" href="#_1-告警模板" aria-label="Permalink to &quot;1. 告警模板&quot;">​</a></h1><p><a href="https://github.com/prometheus/alertmanager/blob/main/template/default.tmpl" target="_blank" rel="noreferrer">https://github.com/prometheus/alertmanager/blob/main/template/default.tmpl</a></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">* </span><span style="color:#9ECBFF;">告警模板是指在告警中的标签和注解上引用时间序列的标签和样本值的方法;</span></span>
<span class="line"><span style="color:#E1E4E8;">* </span><span style="color:#9ECBFF;">它使用标准的Go模板语法，并暴露一些包含时间序列标签和值的变量;</span></span>
<span class="line"><span style="color:#E1E4E8;">  * </span><span style="color:#85E89D;">标签引用</span><span style="color:#E1E4E8;">: {{ </span><span style="color:#9ECBFF;">$labels.&lt;label_name&gt;</span><span style="color:#E1E4E8;"> }}</span></span>
<span class="line"><span style="color:#E1E4E8;">  * </span><span style="color:#85E89D;">指标样本值引用</span><span style="color:#E1E4E8;">: {{ </span><span style="color:#9ECBFF;">$value</span><span style="color:#E1E4E8;"> }}</span></span>
<span class="line"><span style="color:#E1E4E8;">* </span><span style="color:#9ECBFF;">若要在description注解中引用触发告警的时间序列上的instance和job标签的值，可分别使用{{ $labels.instance }}和{{ $labels.job }};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">* </span><span style="color:#032F62;">告警模板是指在告警中的标签和注解上引用时间序列的标签和样本值的方法;</span></span>
<span class="line"><span style="color:#24292E;">* </span><span style="color:#032F62;">它使用标准的Go模板语法，并暴露一些包含时间序列标签和值的变量;</span></span>
<span class="line"><span style="color:#24292E;">  * </span><span style="color:#22863A;">标签引用</span><span style="color:#24292E;">: {{ </span><span style="color:#032F62;">$labels.&lt;label_name&gt;</span><span style="color:#24292E;"> }}</span></span>
<span class="line"><span style="color:#24292E;">  * </span><span style="color:#22863A;">指标样本值引用</span><span style="color:#24292E;">: {{ </span><span style="color:#032F62;">$value</span><span style="color:#24292E;"> }}</span></span>
<span class="line"><span style="color:#24292E;">* </span><span style="color:#032F62;">若要在description注解中引用触发告警的时间序列上的instance和job标签的值，可分别使用{{ $labels.instance }}和{{ $labels.job }};</span></span></code></pre></div><h1 id="_2-告警规则状态" tabindex="-1">2. 告警规则状态 <a class="header-anchor" href="#_2-告警规则状态" aria-label="Permalink to &quot;2. 告警规则状态&quot;">​</a></h1><p>告警规则分为三种</p><ul><li>inactive：无任何报警，一切正常</li><li>pending：已触发阈值，但未满足告警持续时间，也就是在告警规则中写的for，在for规定的时间内触发都不会发送给AlertManager，当for持续时间一过会立即发送给AlertManager</li><li>firing：已触发阈值且满足告警持续时间，告警发送给接收者</li></ul><h1 id="_3-持久化规则" tabindex="-1">3.持久化规则 <a class="header-anchor" href="#_3-持久化规则" aria-label="Permalink to &quot;3.持久化规则&quot;">​</a></h1><p><a href="https://prometheus.io/docs/prometheus/latest/configuration/template_examples/" target="_blank" rel="noreferrer">官当</a></p><h2 id="_3-1-添加" tabindex="-1">3.1 添加 <a class="header-anchor" href="#_3-1-添加" aria-label="Permalink to &quot;3.1 添加&quot;">​</a></h2><ul><li>1.修改配置文件</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@prometheus-server </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]# vim /etc/prometheus/prometheus.yml </span></span>
<span class="line"><span style="color:#B392F0;">rule_files:</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;rules/node_rules.yml&quot;</span><span style="color:#E1E4E8;">			</span><span style="color:#6A737D;">#指定持久化文件所在路径即可</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@prometheus-server </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]# vim /etc/prometheus/prometheus.yml </span></span>
<span class="line"><span style="color:#6F42C1;">rule_files:</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;rules/node_rules.yml&quot;</span><span style="color:#24292E;">			</span><span style="color:#6A737D;">#指定持久化文件所在路径即可</span></span></code></pre></div><ul><li>2.刷新配置文件</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$curl -XPOST 127.0.0.1:9090/-/reload</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$curl -XPOST 127.0.0.1:9090/-/reload</span></span></code></pre></div><h2 id="_3-2-语法" tabindex="-1">3.2 语法 <a class="header-anchor" href="#_3-2-语法" aria-label="Permalink to &quot;3.2 语法&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">groups</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">- </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">node_rules                                    //持久化查询的名称</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">interval</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10s                                       //10s刷新一次，如果不设置就是就是全局中的 evaluation_interval 时间</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">rules</span><span style="color:#E1E4E8;">:                                              </span><span style="color:#9ECBFF;">//记录规则清单，一个rules下面可以写多个记录规则</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">record</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">instance:node_cpu:avg_rate5m              //持久化记录查询名称</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">expr</span><span style="color:#E1E4E8;">:                                             </span><span style="color:#9ECBFF;">//取值表达式</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:                                           </span><span style="color:#9ECBFF;">//定义一个标签</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">summary</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;标题&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;告警内容&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">groups</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">- </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">node_rules                                    //持久化查询的名称</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">interval</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10s                                       //10s刷新一次，如果不设置就是就是全局中的 evaluation_interval 时间</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">rules</span><span style="color:#24292E;">:                                              </span><span style="color:#032F62;">//记录规则清单，一个rules下面可以写多个记录规则</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">record</span><span style="color:#24292E;">: </span><span style="color:#032F62;">instance:node_cpu:avg_rate5m              //持久化记录查询名称</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">expr</span><span style="color:#24292E;">:                                             </span><span style="color:#032F62;">//取值表达式</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:                                           </span><span style="color:#032F62;">//定义一个标签</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">summary</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;标题&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;告警内容&quot;</span></span></code></pre></div><ul><li>expr语法</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&lt;metric_name&gt;{&lt;label_name&gt;=&quot;&lt;label_value&gt;&quot;, ...} &lt;operator&gt; &lt;value&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#解释</span></span>
<span class="line"><span style="color:#9ECBFF;">&lt;metric_name&gt; 是正在查询的指标的名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&lt;label_name&gt;=“&lt;label_value&gt;”， ...</span><span style="color:#E1E4E8;">} </span><span style="color:#9ECBFF;">是查询的可选部分，用于指定应用于筛选指标的标签</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&lt;operator&gt; 是一个数学运算符，例如 &gt;、&lt;、== 等</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&lt;value&gt; 是使用指定运算符必须将指标与该值进行比较的值</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&lt;metric_name&gt;{&lt;label_name&gt;=&quot;&lt;label_value&gt;&quot;, ...} &lt;operator&gt; &lt;value&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#解释</span></span>
<span class="line"><span style="color:#032F62;">&lt;metric_name&gt; 是正在查询的指标的名称</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&lt;label_name&gt;=“&lt;label_value&gt;”， ...</span><span style="color:#24292E;">} </span><span style="color:#032F62;">是查询的可选部分，用于指定应用于筛选指标的标签</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&lt;operator&gt; 是一个数学运算符，例如 &gt;、&lt;、== 等</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&lt;value&gt; 是使用指定运算符必须将指标与该值进行比较的值</span></span></code></pre></div><p>文档：</p><p><a href="https://prometheus.io/docs/prometheus/latest/querying/basics/" target="_blank" rel="noreferrer">PromQL (Prometheus Query Language)</a></p><p><a href="https://prometheus.io/docs/prometheus/latest/querying/functions/" target="_blank" rel="noreferrer">functions</a></p><p><a href="https://prometheus.io/docs/prometheus/latest/querying/operators/#logical-set-binary-operators" target="_blank" rel="noreferrer">Logical operators</a></p><h3 id="_1-检查语法" tabindex="-1">1.检查语法 <a class="header-anchor" href="#_1-检查语法" aria-label="Permalink to &quot;1.检查语法&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">promtool</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">check</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/prometheus/prometheus.yml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">promtool</span><span style="color:#24292E;"> </span><span style="color:#032F62;">check</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/prometheus/prometheus.yml</span></span></code></pre></div><h3 id="_2-热加载" tabindex="-1">2.热加载 <a class="header-anchor" href="#_2-热加载" aria-label="Permalink to &quot;2.热加载&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-XPOST</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">127.0</span><span style="color:#9ECBFF;">.0.1:9090/-/reload</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-XPOST</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">127.0</span><span style="color:#032F62;">.0.1:9090/-/reload</span></span></code></pre></div><h2 id="_3-3-案例" tabindex="-1">3.3 案例 <a class="header-anchor" href="#_3-3-案例" aria-label="Permalink to &quot;3.3 案例&quot;">​</a></h2><h3 id="_1-cpu" tabindex="-1">1.cpu <a class="header-anchor" href="#_1-cpu" aria-label="Permalink to &quot;1.cpu&quot;">​</a></h3><p>1.创建持久化文件</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/prometheus/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rules</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">vim</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rules/node_rules.yml</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">groups:</span></span>
<span class="line"><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">name:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node_rules</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">interval:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#9ECBFF;">s</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">rules:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">record:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">instance:node_cpu:avg_rate5m</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">expr:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">avg</span><span style="color:#E1E4E8;"> (irate(node_cpu_seconds_total{job</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;centos7-node&quot;,mode=&quot;idle&quot;}[</span><span style="color:#79B8FF;">5</span><span style="color:#9ECBFF;">m]</span><span style="color:#E1E4E8;">)) </span><span style="color:#B392F0;">by</span><span style="color:#E1E4E8;"> (instance) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> 100</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">labels:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">metric_type:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">aggregation</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/prometheus/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rules</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">vim</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rules/node_rules.yml</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">groups:</span></span>
<span class="line"><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node_rules</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">interval:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#032F62;">s</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">rules:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">record:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">instance:node_cpu:avg_rate5m</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">expr:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;"> </span><span style="color:#032F62;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">avg</span><span style="color:#24292E;"> (irate(node_cpu_seconds_total{job</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;centos7-node&quot;,mode=&quot;idle&quot;}[</span><span style="color:#005CC5;">5</span><span style="color:#032F62;">m]</span><span style="color:#24292E;">)) </span><span style="color:#6F42C1;">by</span><span style="color:#24292E;"> (instance) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> 100</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">labels:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">metric_type:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">aggregation</span></span></code></pre></div><ul><li>解释</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">groups</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">- </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">node_rules                                    //持久化查询的名称</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">interval</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10s                                       //10s刷新一次，如果不设置就是就是全局中的 evaluation_interval 时间</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">rules</span><span style="color:#E1E4E8;">:                                              </span><span style="color:#9ECBFF;">//记录规则清单，一个rules下面可以写多个记录规则</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">record</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">instance:node_cpu:avg_rate5m              //持久化记录查询名称</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">expr</span><span style="color:#E1E4E8;">:                                             </span><span style="color:#9ECBFF;">//取值表达式</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:                                           </span><span style="color:#9ECBFF;">//定义一个标签</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">groups</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">- </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">node_rules                                    //持久化查询的名称</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">interval</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10s                                       //10s刷新一次，如果不设置就是就是全局中的 evaluation_interval 时间</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">rules</span><span style="color:#24292E;">:                                              </span><span style="color:#032F62;">//记录规则清单，一个rules下面可以写多个记录规则</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">record</span><span style="color:#24292E;">: </span><span style="color:#032F62;">instance:node_cpu:avg_rate5m              //持久化记录查询名称</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">expr</span><span style="color:#24292E;">:                                             </span><span style="color:#032F62;">//取值表达式</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:                                           </span><span style="color:#032F62;">//定义一个标签</span></span></code></pre></div><p><code>record</code> 规则中的定义，<code>Prometheus</code> 会在后台完成 <code>expr</code> 中定义的 <code>PromQL</code> 表达式周期性运算（每隔10s一次），以 <code>instance</code> 为维度使用 <code>avg</code> 聚合运算符，计算函数 <code>irate</code> 对 <code>node_cpu_seconds_total</code> 指标区间 <code>5m</code> 内的CPU使用率，并且将计算结果保存到新的时间序列 <code>instance:node_cpu:avg_rate5m</code> 中， 同时还可以通过 <code>labels</code> 为样本数据添加额外的自定义标签，但是要注意的是这个 <code>Lables</code> 一定存在当前表达式 <code>Metrics</code> 中</p><h3 id="_2-mem" tabindex="-1">2.mem <a class="header-anchor" href="#_2-mem" aria-label="Permalink to &quot;2.mem&quot;">​</a></h3><p>1.增加内存持久化配置</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">vim rules/node_rules.yml</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#85E89D;">groups</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">- </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">node_rules</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">interval</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">10s</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">rules</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">record</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">instance:node_cpu:avg_rate5m</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">expr</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">100 - avg(irate(node_cpu_seconds_total{job=&quot;centos7-node&quot;}[5m])) by (instance) * 100</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">metric_type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">aggregation</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">record</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">instance:node_mem:avg_rate5m</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">expr</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">(node_memory_MemTotal_bytes-(node_memory_MemFree_bytes+node_memory_Buffers_bytes+node_memory_Cached_bytes))/node_memory_MemTotal_bytes * 100</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">metric_type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">aggregation</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">vim rules/node_rules.yml</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#22863A;">groups</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">- </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">node_rules</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">interval</span><span style="color:#24292E;">: </span><span style="color:#032F62;">10s</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">rules</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">record</span><span style="color:#24292E;">: </span><span style="color:#032F62;">instance:node_cpu:avg_rate5m</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">expr</span><span style="color:#24292E;">: </span><span style="color:#032F62;">100 - avg(irate(node_cpu_seconds_total{job=&quot;centos7-node&quot;}[5m])) by (instance) * 100</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">metric_type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">aggregation</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">record</span><span style="color:#24292E;">: </span><span style="color:#032F62;">instance:node_mem:avg_rate5m</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">expr</span><span style="color:#24292E;">: </span><span style="color:#032F62;">(node_memory_MemTotal_bytes-(node_memory_MemFree_bytes+node_memory_Buffers_bytes+node_memory_Cached_bytes))/node_memory_MemTotal_bytes * 100</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">metric_type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">aggregation</span></span></code></pre></div><p>2.加载配置</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-XPOST</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">127.0</span><span style="color:#9ECBFF;">.0.1:9090/-/reload</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-XPOST</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">127.0</span><span style="color:#032F62;">.0.1:9090/-/reload</span></span></code></pre></div><h3 id="_3-down" tabindex="-1">3.down <a class="header-anchor" href="#_3-down" aria-label="Permalink to &quot;3.down&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">groups</span><span style="color:#E1E4E8;">:                                              </span><span style="color:#9ECBFF;">//定义一个告警规则组</span></span>
<span class="line"><span style="color:#E1E4E8;">- </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">general.rules                                //组名，可以将同一类型的报警放到一个分组中</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">rules</span><span style="color:#E1E4E8;">:                                             </span><span style="color:#9ECBFF;">//定义告警规则，可以有多个</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">alert</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">主机宕机                                   //告警名称，也就是告警信息的标题，一个alert代表一个告警规则</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">expr</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">up == 0                                    //表达式，根据表达式的值进行匹配</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">for</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">5m                                          //报警收到后多长时间后发送报警信息</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:                                          </span><span style="color:#9ECBFF;">//定义标签</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">serverity</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">error                               //告警级别，有warning、error，critical等</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:                                     </span><span style="color:#9ECBFF;">//定义告警内容</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">summary</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;主机 {{ $labels.instance }} 停止工作&quot;</span><span style="color:#E1E4E8;">       </span><span style="color:#9ECBFF;">//消息内容，$labels.instance就是监控项中的标签变量</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">description</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;{{ $labels.instance }} job {{ $labels.job }} 已经宕机5分钟以上!&quot;</span><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">//详细描述</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">groups</span><span style="color:#24292E;">:                                              </span><span style="color:#032F62;">//定义一个告警规则组</span></span>
<span class="line"><span style="color:#24292E;">- </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">general.rules                                //组名，可以将同一类型的报警放到一个分组中</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">rules</span><span style="color:#24292E;">:                                             </span><span style="color:#032F62;">//定义告警规则，可以有多个</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">alert</span><span style="color:#24292E;">: </span><span style="color:#032F62;">主机宕机                                   //告警名称，也就是告警信息的标题，一个alert代表一个告警规则</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">expr</span><span style="color:#24292E;">: </span><span style="color:#032F62;">up == 0                                    //表达式，根据表达式的值进行匹配</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">for</span><span style="color:#24292E;">: </span><span style="color:#032F62;">5m                                          //报警收到后多长时间后发送报警信息</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:                                          </span><span style="color:#032F62;">//定义标签</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">serverity</span><span style="color:#24292E;">: </span><span style="color:#032F62;">error                               //告警级别，有warning、error，critical等</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:                                     </span><span style="color:#032F62;">//定义告警内容</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">summary</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;主机 {{ $labels.instance }} 停止工作&quot;</span><span style="color:#24292E;">       </span><span style="color:#032F62;">//消息内容，$labels.instance就是监控项中的标签变量</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">description</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;{{ $labels.instance }} job {{ $labels.job }} 已经宕机5分钟以上!&quot;</span><span style="color:#24292E;">     </span><span style="color:#032F62;">//详细描述</span></span></code></pre></div><h1 id="_4-规则文件默认结构" tabindex="-1">4.规则文件默认结构 <a class="header-anchor" href="#_4-规则文件默认结构" aria-label="Permalink to &quot;4.规则文件默认结构&quot;">​</a></h1><h2 id="_4-1-结构" tabindex="-1">4.1 结构 <a class="header-anchor" href="#_4-1-结构" aria-label="Permalink to &quot;4.1 结构&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">groups</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;group_name&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">rules</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">alert</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;alert_name&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">expr</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;PromQL_expression&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">for</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;duration&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">&lt;label_name&gt;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;label_value&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">&lt;annotation_name&gt;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&lt;annotation_value&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">groups</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;group_name&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">rules</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">alert</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;alert_name&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">expr</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;PromQL_expression&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">for</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;duration&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">&lt;label_name&gt;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;label_value&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">&lt;annotation_name&gt;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&lt;annotation_value&gt;</span></span></code></pre></div><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><strong>groups</strong></td><td>它包含一个或多个规则组。规则组允许您按逻辑组织警报规则</td></tr><tr><td>name</td><td>指定规则组的名称</td></tr><tr><td>rules</td><td>它包含在组中定义的一个或多个警报规则</td></tr><tr><td><strong>alert</strong></td><td>定义警报的名称。每个警报规则在规则文件中必须具有唯一的名称</td></tr><tr><td><strong>expr</strong></td><td>它表示评估触发警报的条件的 PromQL 表达式。PromQL（Prometheus Query Language，Prometheus 查询语言）用于查询和分析 Prometheus 采集的时间序列数据</td></tr><tr><td><strong>for</strong></td><td>它指定在触发警报之前，PromQL 表达式定义的条件必须为 true 的持续时间</td></tr><tr><td><strong>labels</strong></td><td>它包括附加到警报的其他元数据，例如严重性、服务或实例</td></tr><tr><td><strong>annotations</strong></td><td>它包含有关警报的描述性信息，例如摘要或描述。注释有助于为警报系统提供更多上下文，并有助于更好地理解和处理警报</td></tr></tbody></table><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202502191754368.png" alt="image.png"></p><p>可以参考：</p><p><a href="https://samber.github.io/awesome-prometheus-alerts/rules#kubernetes" target="_blank" rel="noreferrer">告警规则</a></p><p><a href="https://p.wpseco.cn/wiki/doc/62a29e9b68a4a821270e798f" target="_blank" rel="noreferrer">https://p.wpseco.cn/wiki/doc/62a29e9b68a4a821270e798f</a></p>`,47),e=[o];function t(r,c,E,y,i,d){return a(),n("div",null,e)}const h=s(p,[["render",t]]);export{F as __pageData,h as default};
