import{_ as a,o as s,c as e,R as n}from"./chunks/framework.zUbWieqp.js";const h=JSON.parse('{"title":"1.备份元数据","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Database/rabbitmq/3-backup.md","filePath":"guide/Database/rabbitmq/3-backup.md","lastUpdated":1716287268000}'),t={name:"guide/Database/rabbitmq/3-backup.md"},l=n(`<h1 id="_1-备份元数据" tabindex="-1">1.备份元数据 <a class="header-anchor" href="#_1-备份元数据" aria-label="Permalink to &quot;1.备份元数据&quot;">​</a></h1><p>在服务B上搭建rabbitmq服务，注意，主机名最好和A上的MQ保持一致。避免后面的数据存储节点名不一致，导致启动失败</p><ul><li>通过图形备份元数据</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405181306506.jpg" alt=""></p><ul><li>导入新机器上面</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405181306454.jpg" alt=""></p><ul><li><h3 id="验证数据" tabindex="-1">验证数据 <a class="header-anchor" href="#验证数据" aria-label="Permalink to &quot;验证数据&quot;">​</a></h3></li></ul><p>刷新页面，查看用户、队列、vhost 等信息是否存在</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405181306250.jpg" alt=""></p><div class="warning custom-block"><p class="custom-block-title">💡 说明</p><p>内部节点数据库在某些记录中存储节点的名称，如果节点名称发生更改，则必须首先使用以下rabbitmqctl命令更新数据库以便更改：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">rabbitmqctl rename_cluster_node &lt;oldnode&gt; &lt;newnode&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">rabbitmqctl rename_cluster_node &lt;oldnode&gt; &lt;newnode&gt;</span></span></code></pre></div><p>当新节点以备份目录和匹配的节点名称启动时，它会根据需要执行升级步骤并继续引导</p></div><h1 id="_2-备份消息数据" tabindex="-1">2.备份消息数据 <a class="header-anchor" href="#_2-备份消息数据" aria-label="Permalink to &quot;2.备份消息数据&quot;">​</a></h1><h2 id="_1-备份-rabbitmq-配置" tabindex="-1">1.备份 rabbitmq 配置 <a class="header-anchor" href="#_1-备份-rabbitmq-配置" aria-label="Permalink to &quot;1.备份 rabbitmq 配置&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[root@beta ~]# rabbitmqadmin export rabbitmq_back.json</span></span>
<span class="line"><span style="color:#e1e4e8;">Exported definitions for localhost to &quot;rabbitmq_back.json&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#有密码方式</span></span>
<span class="line"><span style="color:#e1e4e8;">/sbin/rabbitmqadmin -H \${mq_server_ip} -P \${mqadmin_port} -u \${mqadmin_user} -p \${mqadmin_pw} export \${mq_config_backup_file} &gt; /dev/null 2&gt;&amp;1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[root@beta ~]# rabbitmqadmin export rabbitmq_back.json</span></span>
<span class="line"><span style="color:#24292e;">Exported definitions for localhost to &quot;rabbitmq_back.json&quot;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#有密码方式</span></span>
<span class="line"><span style="color:#24292e;">/sbin/rabbitmqadmin -H \${mq_server_ip} -P \${mqadmin_port} -u \${mqadmin_user} -p \${mqadmin_pw} export \${mq_config_backup_file} &gt; /dev/null 2&gt;&amp;1</span></span></code></pre></div><h2 id="_2-恢复配置" tabindex="-1">2.恢复配置 <a class="header-anchor" href="#_2-恢复配置" aria-label="Permalink to &quot;2.恢复配置&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[root@beta ~]# rabbitmqadmin import   rabbitmq_back.json  Imported definitions for localhost from &quot;rabbitmq_back.json&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[root@beta ~]# rabbitmqadmin import   rabbitmq_back.json  Imported definitions for localhost from &quot;rabbitmq_back.json&quot;</span></span></code></pre></div><h2 id="_3-获取-rabbitmq-数据目录" tabindex="-1">3.获取 rabbitmq 数据目录 <a class="header-anchor" href="#_3-获取-rabbitmq-数据目录" aria-label="Permalink to &quot;3.获取 rabbitmq 数据目录&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#获取数据目录执行如下命令</span></span>
<span class="line"><span style="color:#e1e4e8;">[root@beta ~]# rabbitmqctl eval &#39;rabbit_mnesia:dir().&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">&quot;/data/ajime/ajime_data/rabbitmq_data/mnesia/rabbit&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#获取数据目录执行如下命令</span></span>
<span class="line"><span style="color:#24292e;">[root@beta ~]# rabbitmqctl eval &#39;rabbit_mnesia:dir().&#39;</span></span>
<span class="line"><span style="color:#24292e;">&quot;/data/ajime/ajime_data/rabbitmq_data/mnesia/rabbit&quot;</span></span></code></pre></div><h2 id="_4-备份" tabindex="-1">4.备份 <a class="header-anchor" href="#_4-备份" aria-label="Permalink to &quot;4.备份&quot;">​</a></h2><p>为保证数据一致，可以先停止 rabbitmq</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[root@beta mnesia]# pwd</span></span>
<span class="line"><span style="color:#e1e4e8;">/data/ajime/ajime_data/rabbitmq_data/mnesia</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">tar -zcf rabbitmq_backup.tar.gz rabbit</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[root@beta mnesia]# pwd</span></span>
<span class="line"><span style="color:#24292e;">/data/ajime/ajime_data/rabbitmq_data/mnesia</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">tar -zcf rabbitmq_backup.tar.gz rabbit</span></span></code></pre></div><h2 id="_5-数据恢复" tabindex="-1">5.数据恢复 <a class="header-anchor" href="#_5-数据恢复" aria-label="Permalink to &quot;5.数据恢复&quot;">​</a></h2><p>恢复数据比较简单，把压缩档解压至数据目录中即可。恢复到另一节点则不适用，备份同一台机器，然后重启同一台机器</p><p>参考地址</p><ul><li><a href="https://www.rabbitmq.com/backup.html" target="_blank" rel="noreferrer">https://www.rabbitmq.com/backup.html</a></li><li><a href="https://www.rabbitmq.com/upgrade.html" target="_blank" rel="noreferrer">https://www.rabbitmq.com/upgrade.html</a></li><li><a href="https://www.rabbitmq.com/blue-green-upgrade.html" target="_blank" rel="noreferrer">https://www.rabbitmq.com/blue-green-upgrade.html</a></li></ul><h1 id="_3-删除数据" tabindex="-1">3.删除数据 <a class="header-anchor" href="#_3-删除数据" aria-label="Permalink to &quot;3.删除数据&quot;">​</a></h1><h2 id="_1-清空指定queue队列的数据" tabindex="-1">1. 清空指定queue队列的数据 <a class="header-anchor" href="#_1-清空指定queue队列的数据" aria-label="Permalink to &quot;1. 清空指定queue队列的数据&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#查看队列</span></span>
<span class="line"><span style="color:#e1e4e8;">rabbitmqctl list_queues</span></span>
<span class="line"><span style="color:#e1e4e8;">#清空指定队列</span></span>
<span class="line"><span style="color:#e1e4e8;">rabbitmqctl -q purge_queue queue_name</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#查看队列</span></span>
<span class="line"><span style="color:#24292e;">rabbitmqctl list_queues</span></span>
<span class="line"><span style="color:#24292e;">#清空指定队列</span></span>
<span class="line"><span style="color:#24292e;">rabbitmqctl -q purge_queue queue_name</span></span></code></pre></div><h2 id="_2-rabbitmqadmin清空队列" tabindex="-1">2. rabbitmqadmin清空队列 <a class="header-anchor" href="#_2-rabbitmqadmin清空队列" aria-label="Permalink to &quot;2. rabbitmqadmin清空队列&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#查看队列</span></span>
<span class="line"><span style="color:#e1e4e8;">rabbitmqadmin list queues</span></span>
<span class="line"><span style="color:#e1e4e8;">#清空指定队列</span></span>
<span class="line"><span style="color:#e1e4e8;">rabbitmqadmin delete queue name=queue_name</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#查看队列</span></span>
<span class="line"><span style="color:#24292e;">rabbitmqadmin list queues</span></span>
<span class="line"><span style="color:#24292e;">#清空指定队列</span></span>
<span class="line"><span style="color:#24292e;">rabbitmqadmin delete queue name=queue_name</span></span></code></pre></div><h2 id="_3-清空全部队列" tabindex="-1">3. 清空全部队列 <a class="header-anchor" href="#_3-清空全部队列" aria-label="Permalink to &quot;3. 清空全部队列&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">rabbitmqctl stop_app</span></span>
<span class="line"><span style="color:#e1e4e8;">rabbitmqctl reset    </span></span>
<span class="line"><span style="color:#e1e4e8;">rabbitmqctl start_app</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">rabbitmqctl stop_app</span></span>
<span class="line"><span style="color:#24292e;">rabbitmqctl reset    </span></span>
<span class="line"><span style="color:#24292e;">rabbitmqctl start_app</span></span></code></pre></div><h2 id="_4-管理端操作" tabindex="-1">4. 管理端操作 <a class="header-anchor" href="#_4-管理端操作" aria-label="Permalink to &quot;4. 管理端操作&quot;">​</a></h2><p>在web管理端可以进行操作,选择到要操作的队列,下拉里面有一个Purge(不要选到delete)</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405181306288.png" alt=""></p>`,34),p=[l];function i(o,r,c,b,d,m){return s(),e("div",null,p)}const q=a(t,[["render",i]]);export{h as __pageData,q as default};
