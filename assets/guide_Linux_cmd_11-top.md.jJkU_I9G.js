import{_ as s,o as a,c as n,R as p}from"./chunks/framework.zUbWieqp.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/cmd/11-top.md","filePath":"guide/Linux/cmd/11-top.md","lastUpdated":1710991424000}'),e={name:"guide/Linux/cmd/11-top.md"},l=p(`<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ps</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">aux</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--sort=-rss</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">head</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-10</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ps</span><span style="color:#24292E;"> </span><span style="color:#032F62;">aux</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--sort=-rss</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">head</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-10</span></span></code></pre></div><p>VSZ是虚拟内存并不是实际占用的内存，RSS虽然是实际的内存，但是包括了共享的部分。而top命令中看到进程内存的百分比就是RSS内存占用总内存的百分比。</p><p>所以查看PostgreSQL进程占用的内存，正确的姿势应该是把共享的那部分内存给扣除掉，但是用<code>ps</code>命令没有办法扣除掉这部分内存。而实际上我们可以看/proc/pid/smaps文件中查看Pss内存，Pss表示的内存是把共享内存平分到各个进程上的内存，这实际上是这个进程占用的实际内存：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[root@pg01 ~]# cat /proc/12047/smaps |more</span></span>
<span class="line"><span style="color:#e1e4e8;">00400000-00ad1000 r-xp 00000000 fd:01 42123205                           /usr/pgsql-11.7/bin/postgres</span></span>
<span class="line"><span style="color:#e1e4e8;">Size:               6980 kB</span></span>
<span class="line"><span style="color:#e1e4e8;">Rss:                 528 kB</span></span>
<span class="line"><span style="color:#e1e4e8;">Pss:                  67 kB</span></span>
<span class="line"><span style="color:#e1e4e8;">Shared_Clean:        512 kB</span></span>
<span class="line"><span style="color:#e1e4e8;">Shared_Dirty:          0 kB</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[root@pg01 ~]# cat /proc/12047/smaps |more</span></span>
<span class="line"><span style="color:#24292e;">00400000-00ad1000 r-xp 00000000 fd:01 42123205                           /usr/pgsql-11.7/bin/postgres</span></span>
<span class="line"><span style="color:#24292e;">Size:               6980 kB</span></span>
<span class="line"><span style="color:#24292e;">Rss:                 528 kB</span></span>
<span class="line"><span style="color:#24292e;">Pss:                  67 kB</span></span>
<span class="line"><span style="color:#24292e;">Shared_Clean:        512 kB</span></span>
<span class="line"><span style="color:#24292e;">Shared_Dirty:          0 kB</span></span></code></pre></div>`,4),o=[l];function t(c,r,i,d,y,_){return a(),n("div",null,o)}const u=s(e,[["render",t]]);export{g as __pageData,u as default};
