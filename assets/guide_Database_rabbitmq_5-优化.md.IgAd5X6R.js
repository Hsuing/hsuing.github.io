import{_ as s,o as n,c as a,R as p}from"./chunks/framework.zUbWieqp.js";const d=JSON.parse('{"title":"1.查看env","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Database/rabbitmq/5-优化.md","filePath":"guide/Database/rabbitmq/5-优化.md","lastUpdated":1710405635000}'),l={name:"guide/Database/rabbitmq/5-优化.md"},o=p(`<ol><li>vm_memory_high_watermark 配置 (<a href="http://www.rabbitmq.com/memory.html" target="_blank" rel="noreferrer">http://www.rabbitmq.com/memory.html</a>)</li><li>Erlang High Performance Erlang (HiPE) (<a href="http://erlang.org/doc/apps/hipe/" target="_blank" rel="noreferrer">http://erlang.org/doc/apps/hipe/</a>)</li></ol><h1 id="_1-查看env" tabindex="-1">1.查看env <a class="header-anchor" href="#_1-查看env" aria-label="Permalink to &quot;1.查看env&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">rabbitmqctl environment</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">rabbitmqctl environment</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">root@5d8b5909379c:/# rabbitmqctl status</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">root@5d8b5909379c:/# rabbitmqctl status</span></span></code></pre></div><h2 id="操作系统" tabindex="-1">操作系统 <a class="header-anchor" href="#操作系统" aria-label="Permalink to &quot;操作系统&quot;">​</a></h2><p>官方要求最少<code>50K</code>，并同时不建议超过<code>500K</code>允许打开的文件描述符</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">vi /etc/security/limits.conf</span></span>
<span class="line"><span style="color:#e1e4e8;">root  -  nofile  465536</span></span>
<span class="line"><span style="color:#e1e4e8;">*     -  nofile  465536</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">vi /etc/security/limits.conf</span></span>
<span class="line"><span style="color:#24292e;">root  -  nofile  465536</span></span>
<span class="line"><span style="color:#24292e;">*     -  nofile  465536</span></span></code></pre></div><h2 id="内核" tabindex="-1">内核 <a class="header-anchor" href="#内核" aria-label="Permalink to &quot;内核&quot;">​</a></h2><p>/etc/sysct.d/90-rabbitmq.conf</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">net.ipv4.tcp_fin_timeout = 30</span></span>
<span class="line"><span style="color:#e1e4e8;">net.ipv4.tcp_keepalive_time=30</span></span>
<span class="line"><span style="color:#e1e4e8;">net.ipv4.tcp_keepalive_intvl=10</span></span>
<span class="line"><span style="color:#e1e4e8;">net.ipv4.tcp_keepalive_probes=4</span></span>
<span class="line"><span style="color:#e1e4e8;">net.ipv4.tcp_tw_reuse = 1</span></span>
<span class="line"><span style="color:#e1e4e8;">net.core.somaxconn = 4096</span></span>
<span class="line"><span style="color:#e1e4e8;">net.ipv4.tcp_max_syn_backlog=4096</span></span>
<span class="line"><span style="color:#e1e4e8;"># TCP Keppalive优化，用于心跳</span></span>
<span class="line"><span style="color:#e1e4e8;">net.ipv4.tcp_keepalive_time=30</span></span>
<span class="line"><span style="color:#e1e4e8;">net.ipv4.tcp_keepalive_intvl=10</span></span>
<span class="line"><span style="color:#e1e4e8;">net.ipv4.tcp_keepalive_probes=4</span></span>
<span class="line"><span style="color:#e1e4e8;">net.ipv4.conf.default.rp_filter = 0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">net.ipv4.tcp_fin_timeout = 30</span></span>
<span class="line"><span style="color:#24292e;">net.ipv4.tcp_keepalive_time=30</span></span>
<span class="line"><span style="color:#24292e;">net.ipv4.tcp_keepalive_intvl=10</span></span>
<span class="line"><span style="color:#24292e;">net.ipv4.tcp_keepalive_probes=4</span></span>
<span class="line"><span style="color:#24292e;">net.ipv4.tcp_tw_reuse = 1</span></span>
<span class="line"><span style="color:#24292e;">net.core.somaxconn = 4096</span></span>
<span class="line"><span style="color:#24292e;">net.ipv4.tcp_max_syn_backlog=4096</span></span>
<span class="line"><span style="color:#24292e;"># TCP Keppalive优化，用于心跳</span></span>
<span class="line"><span style="color:#24292e;">net.ipv4.tcp_keepalive_time=30</span></span>
<span class="line"><span style="color:#24292e;">net.ipv4.tcp_keepalive_intvl=10</span></span>
<span class="line"><span style="color:#24292e;">net.ipv4.tcp_keepalive_probes=4</span></span>
<span class="line"><span style="color:#24292e;">net.ipv4.conf.default.rp_filter = 0</span></span></code></pre></div><h2 id="memory" tabindex="-1">Memory <a class="header-anchor" href="#memory" aria-label="Permalink to &quot;Memory&quot;">​</a></h2><p>默认为当使用物理服务器的<code>40%</code>的内存时，会进行<code>GC</code>回收。官方说这个值一般无需要修改。但实际环境中，如果是高并发，还是建议修改下。如果允许数据丢失，这个值可以设置更高些，如果对数据一致性要求较高，就保留默认值</p><h2 id="disk" tabindex="-1">Disk <a class="header-anchor" href="#disk" aria-label="Permalink to &quot;Disk&quot;">​</a></h2><p>磁盘空间，默认最小<code>50MB</code>就可以启动<code>RabitMQ</code>,但是在生产环境中，建设设置为物理内存的<code>1.5</code>倍即可</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#B392F0;">disk_free_limit,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{mem_relative,</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1.5</span><span style="color:#9ECBFF;">}}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span><span style="color:#6F42C1;">disk_free_limit,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{mem_relative,</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1.5</span><span style="color:#032F62;">}}</span></span></code></pre></div><h2 id="networking" tabindex="-1">Networking <a class="header-anchor" href="#networking" aria-label="Permalink to &quot;Networking&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># RabbitMQ config</span></span>
<span class="line"><span style="color:#B392F0;">tcp_listen_options.backlog</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4096</span></span>
<span class="line"><span style="color:#B392F0;">tcp_listen_options.nodelay</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#6A737D;"># Erlang VM I/O Thread Pool()32-128。4 per CPU</span></span>
<span class="line"><span style="color:#B392F0;">RABBITMQ_IO_THREAD_POOL_SIZE</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">32</span></span>
<span class="line"><span style="color:#B392F0;">RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;+A 128&quot;</span></span>
<span class="line"><span style="color:#B392F0;">rabbit.reverse_dns_lookups</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span></span>
<span class="line"><span style="color:#6A737D;"># 发送缓存与接受缓存的值需要一致。TCP/MQTT/STMP配置项保持一致</span></span>
<span class="line"><span style="color:#6A737D;"># TCP</span></span>
<span class="line"><span style="color:#B392F0;">tcp_listen_options.backlog</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">128</span></span>
<span class="line"><span style="color:#B392F0;">tcp_listen_options.nodelay</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#B392F0;">tcp_listen_options.linger.on</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#B392F0;">tcp_listen_options.linger.timeout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">tcp_listen_options.sndbuf</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">32768</span></span>
<span class="line"><span style="color:#B392F0;">tcp_listen_options.recbuf</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">32768</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># MQTT</span></span>
<span class="line"><span style="color:#B392F0;">mqtt.tcp_listen_options.backlog</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">128</span></span>
<span class="line"><span style="color:#B392F0;">mqtt.tcp_listen_options.nodelay</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#B392F0;">mqtt.tcp_listen_options.linger.on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#B392F0;">mqtt.tcp_listen_options.linger.timeout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">mqtt.tcp_listen_options.sndbuf</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">32768</span></span>
<span class="line"><span style="color:#B392F0;">mqtt.tcp_listen_options.recbuf</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">32768</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#STOMP</span></span>
<span class="line"><span style="color:#B392F0;">stomp.tcp_listen_options.backlog</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">128</span></span>
<span class="line"><span style="color:#B392F0;">stomp.tcp_listen_options.nodelay</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#B392F0;">stomp.tcp_listen_options.linger.on</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#B392F0;">stomp.tcp_listen_options.linger.timeout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#B392F0;">stomp.tcp_listen_options.sndbuf</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">32768</span></span>
<span class="line"><span style="color:#B392F0;">stomp.tcp_listen_options.recbuf</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">32768</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 每个连接的通道最大值,官方建议不要超过200.如果超过200，客户端需要优化了</span></span>
<span class="line"><span style="color:#B392F0;">channel_max</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">200</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># RabbitMQ config</span></span>
<span class="line"><span style="color:#6F42C1;">tcp_listen_options.backlog</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4096</span></span>
<span class="line"><span style="color:#6F42C1;">tcp_listen_options.nodelay</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#6A737D;"># Erlang VM I/O Thread Pool()32-128。4 per CPU</span></span>
<span class="line"><span style="color:#6F42C1;">RABBITMQ_IO_THREAD_POOL_SIZE</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">32</span></span>
<span class="line"><span style="color:#6F42C1;">RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;+A 128&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">rabbit.reverse_dns_lookups</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span></span>
<span class="line"><span style="color:#6A737D;"># 发送缓存与接受缓存的值需要一致。TCP/MQTT/STMP配置项保持一致</span></span>
<span class="line"><span style="color:#6A737D;"># TCP</span></span>
<span class="line"><span style="color:#6F42C1;">tcp_listen_options.backlog</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">128</span></span>
<span class="line"><span style="color:#6F42C1;">tcp_listen_options.nodelay</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#6F42C1;">tcp_listen_options.linger.on</span><span style="color:#24292E;">      </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#6F42C1;">tcp_listen_options.linger.timeout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">tcp_listen_options.sndbuf</span><span style="color:#24292E;">  </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">32768</span></span>
<span class="line"><span style="color:#6F42C1;">tcp_listen_options.recbuf</span><span style="color:#24292E;">  </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">32768</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># MQTT</span></span>
<span class="line"><span style="color:#6F42C1;">mqtt.tcp_listen_options.backlog</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">128</span></span>
<span class="line"><span style="color:#6F42C1;">mqtt.tcp_listen_options.nodelay</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#6F42C1;">mqtt.tcp_listen_options.linger.on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#6F42C1;">mqtt.tcp_listen_options.linger.timeout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">mqtt.tcp_listen_options.sndbuf</span><span style="color:#24292E;">  </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">32768</span></span>
<span class="line"><span style="color:#6F42C1;">mqtt.tcp_listen_options.recbuf</span><span style="color:#24292E;">  </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">32768</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#STOMP</span></span>
<span class="line"><span style="color:#6F42C1;">stomp.tcp_listen_options.backlog</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">128</span></span>
<span class="line"><span style="color:#6F42C1;">stomp.tcp_listen_options.nodelay</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#6F42C1;">stomp.tcp_listen_options.linger.on</span><span style="color:#24292E;">  </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#6F42C1;">stomp.tcp_listen_options.linger.timeout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#6F42C1;">stomp.tcp_listen_options.sndbuf</span><span style="color:#24292E;">  </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">32768</span></span>
<span class="line"><span style="color:#6F42C1;">stomp.tcp_listen_options.recbuf</span><span style="color:#24292E;">  </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">32768</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 每个连接的通道最大值,官方建议不要超过200.如果超过200，客户端需要优化了</span></span>
<span class="line"><span style="color:#6F42C1;">channel_max</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">200</span></span></code></pre></div><p><a href="https://fansinzhao.github.io/page/linux-rabbitmq-product.html" target="_blank" rel="noreferrer">https://fansinzhao.github.io/page/linux-rabbitmq-product.html</a></p>`,18),e=[o];function t(c,r,i,y,E,_){return n(),a("div",null,e)}const C=s(l,[["render",t]]);export{d as __pageData,C as default};
