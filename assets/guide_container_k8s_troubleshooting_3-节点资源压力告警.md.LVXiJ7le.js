import{_ as e,o,c as d,R as a}from"./chunks/framework.zUbWieqp.js";const b=JSON.parse('{"title":"1.节点资源压力告警，触发 MemoryPressure 或 DiskPressure","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/troubleshooting/3-节点资源压力告警.md","filePath":"guide/container/k8s/troubleshooting/3-节点资源压力告警.md","lastUpdated":1721730545000}'),s={name:"guide/container/k8s/troubleshooting/3-节点资源压力告警.md"},l=a('<h1 id="_1-节点资源压力告警-触发-memorypressure-或-diskpressure" tabindex="-1">1.节点资源压力告警，触发 <code>MemoryPressure</code> 或 DiskPressure <a class="header-anchor" href="#_1-节点资源压力告警-触发-memorypressure-或-diskpressure" aria-label="Permalink to &quot;1.节点资源压力告警，触发 `MemoryPressure` 或 DiskPressure&quot;">​</a></h1><h2 id="_1-1-问题点" tabindex="-1">1.1 问题点 <a class="header-anchor" href="#_1-1-问题点" aria-label="Permalink to &quot;1.1 问题点&quot;">​</a></h2><p>Kubernetes 节点报告内存或磁盘资源压力，标记节点状态为 <code>NotReady</code> 或应用 <code>MemoryPressure</code>、<code>DiskPressure</code> 污点，导致调度器不再将新 Pod 调度到该节点</p><p><strong>影响范围：</strong></p><ul><li>直接影响：节点上的现有 Pod 可能因资源不足而性能下降或被系统强制终止。</li><li>间接影响：集群的整体资源利用率降低，新部署或扩缩容的操作受阻，可能导致服务容量不足或响应延迟</li></ul><h2 id="_1-2-排查方法" tabindex="-1">1.2 排查方法 <a class="header-anchor" href="#_1-2-排查方法" aria-label="Permalink to &quot;1.2 排查方法&quot;">​</a></h2><ol><li><strong>查看节点状态</strong>：使用 <code>kubectl get node</code> 查看所有节点状态，重点关注 <code>Conditions</code> 列中的 <code>MemoryPressure</code> 和 <code>DiskPressure</code> 状态。</li><li><strong>检查资源使用情况</strong>：使用 <code>kubectl top nodes</code> 查看节点的实时资源使用率，对比节点的总资源容量，判断是否存在过度消耗。</li><li><strong>分析资源消耗大户</strong>：使用 <code>kubectl top pods --all-namespaces --sort-by=memory</code> 或 <code>--sort-by=cpu</code> 查找占用资源最多的 Pod，分析其资源使用合理性。</li><li><strong>检查磁盘使用情况</strong>：对于 <code>DiskPressure</code>，使用 <code>df -h</code> 或 <code>du -sh /*</code>（在节点上执行）查看磁盘空间使用情况，定位占用空间大的目录。</li><li><strong>清理资源或调整策略</strong>：根据分析结果，可能需要清理无用数据、优化 Pod 资源请求/限制、调整日志留存策略、迁移部分工作负载到其他节点等</li></ol><h1 id="_2-node-状态异常-如何排查" tabindex="-1">2. Node 状态异常，如何排查？ <a class="header-anchor" href="#_2-node-状态异常-如何排查" aria-label="Permalink to &quot;2. Node 状态异常，如何排查？&quot;">​</a></h1><ul><li>使用 <code>kubectl get nodes</code> 命令查看集群中所有节点的状态和信息，判断是否存在故障。</li><li>使用 <code>kubectl describe node [node_name]</code> 命令查看目标节点的详细信息，包括 CPU、内存、磁盘等硬件资源的使用情况，判断是否存在性能瓶颈。</li><li>使用 <code>kubectl get pods -o wide --all-namespaces</code> 命令查看集群中所有 Pod 的状态信息，判断是否有 Pod 运行在目标节点上导致资源紧张。</li></ul><h1 id="_3-node-上运行的-pod-无法访问网络-如何排查" tabindex="-1">3. Node 上运行的 Pod 无法访问网络，如何排查？ <a class="header-anchor" href="#_3-node-上运行的-pod-无法访问网络-如何排查" aria-label="Permalink to &quot;3. Node 上运行的 Pod 无法访问网络，如何排查？&quot;">​</a></h1><ul><li>使用 <code>kubectl describe node [node_name]</code> 命令查看目标节点的信息，检查节点是否正常连接到网络。</li><li>使用 <code>kubectl describe pod [pod_name] -n [namespace_name]</code> 命令查看 Pod 所运行的节点信息，判断是否因为节点状态异常导致网络访问失败。</li><li>使用 <code>kubectl logs [pod_name] -n [namespace_name]</code> 命令查看 Pod 容器的日志信息，寻找可能的错误或异常信息。</li></ul><h1 id="_4-node-上的-pod-无法访问存储-如何排查" tabindex="-1">4. Node 上的 Pod 无法访问存储，如何排查？ <a class="header-anchor" href="#_4-node-上的-pod-无法访问存储-如何排查" aria-label="Permalink to &quot;4. Node 上的 Pod 无法访问存储，如何排查？&quot;">​</a></h1><ul><li>使用 <code>kubectl describe pod [pod_name] -n [namespace_name]</code> 命令检查 Pod 的 <code>volumes</code> 配置信息，判断是否存在存储挂载失败的情况。</li><li>使用 <code>kubectl exec -it [pod_name] -n [namespace_name] -- /bin/bash</code> 命令进入 Pod 所在的容器，尝试使用 <code>ls</code> 和 <code>cat</code> 等命令访问挂载的文件系统，判断是否存在读写错误。</li><li>使用 <code>kubectl describe persistentvolumeclaim [pvc_name] -n [namespace_name]</code> 命令查看相关 PVC 配置和状态信息，判断是否存在故障。</li></ul><h1 id="_6-存储卷挂载失败-如何处理" tabindex="-1">6. 存储卷挂载失败，如何处理？ <a class="header-anchor" href="#_6-存储卷挂载失败-如何处理" aria-label="Permalink to &quot;6. 存储卷挂载失败，如何处理？&quot;">​</a></h1><ul><li>使用 <code>kubectl describe pod [pod_name] -n [namespace_name]</code> 命令检查 Pod 的 <code>volumes</code> 配置信息，判断是否存在存储卷定义错误。</li><li>使用 <code>kubectl describe persistentvolumeclaim [pvc_name] -n [namespace_name]</code> 命令检查 PVC 的状态和信息，判断是否存在存储配额不足或存储资源故障等原因。</li><li>如果是 NFS 或 Ceph 等网络存储，需要确认网络连接是否正常，以及存储服务器的服务是否正常。</li></ul><h1 id="_7-node-节点加入-kubernetes-集群后无法被调度-怎么办" tabindex="-1">7. Node 节点加入 Kubernetes 集群后无法被调度，怎么办？ <a class="header-anchor" href="#_7-node-节点加入-kubernetes-集群后无法被调度-怎么办" aria-label="Permalink to &quot;7. Node 节点加入 Kubernetes 集群后无法被调度，怎么办？&quot;">​</a></h1><ul><li>检查该节点的 taints 和 tolerations 是否与 Pod 的 selector 匹配</li><li>检查该节点的资源使用情况是否满足 Pod 的调度要求</li><li>确保该节点与 Kubernetes API server 的连接正常</li></ul><h1 id="_8-kubernetes-集群中的-persistentvolume-挂载失败-怎么办" tabindex="-1">8. Kubernetes 集群中的 PersistentVolume 挂载失败，怎么办？ <a class="header-anchor" href="#_8-kubernetes-集群中的-persistentvolume-挂载失败-怎么办" aria-label="Permalink to &quot;8. Kubernetes 集群中的 PersistentVolume 挂载失败，怎么办？&quot;">​</a></h1><ul><li>检查 PersistentVolume 和 Pod 之间的匹配关系是否正确</li><li>检查 PersistentVolumeClaim 中的 storageClassName 是否与 PersistentVolume 的 storageClassName 匹配</li><li>检查节点存储配置和 PersistentVolume 的定义是否正确</li><li>自动供给层面的权限是否已经给到位</li></ul>',19),r=[l];function t(i,n,c,u,m,_){return o(),d("div",null,r)}const p=e(s,[["render",t]]);export{b as __pageData,p as default};
