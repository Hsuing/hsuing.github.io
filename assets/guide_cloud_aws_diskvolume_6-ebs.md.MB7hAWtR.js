import{_ as t,o as s,c as e,R as a}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"📊 AWS EBS 卷类型对比（gp2 vs gp3）","description":"","frontmatter":{},"headers":[],"relativePath":"guide/cloud/aws/diskvolume/6-ebs.md","filePath":"guide/cloud/aws/diskvolume/6-ebs.md","lastUpdated":1756216932000}'),o={name:"guide/cloud/aws/diskvolume/6-ebs.md"},n=a(`<p><a href="https://docs.aws.amazon.com/ebs/latest/userguide/ebs-volume-types.html" target="_blank" rel="noreferrer">官当</a></p><h1 id="📊-aws-ebs-卷类型对比-gp2-vs-gp3" tabindex="-1">📊 AWS EBS 卷类型对比（gp2 vs gp3） <a class="header-anchor" href="#📊-aws-ebs-卷类型对比-gp2-vs-gp3" aria-label="Permalink to &quot;📊 AWS EBS 卷类型对比（gp2 vs gp3）&quot;">​</a></h1><table><thead><tr><th>项目</th><th><strong>gp2</strong></th><th><strong>gp3</strong></th></tr></thead><tbody><tr><td><strong>价格</strong></td><td>$0.12 / GB / 月</td><td>$0.096 / GB / 月</td></tr><tr><td><strong>IOPS 基础性能</strong></td><td>3 IOPS / GB（最少 100 IOPS，最高 16,000 IOPS）</td><td>默认 3,000 IOPS（可单独配置，最高 16,000 IOPS）</td></tr><tr><td><strong>吞吐量</strong></td><td>最大 250 MB/s（随卷大小线性增加）</td><td>默认 125 MB/s（可单独配置，最高 1,000 MB/s）</td></tr><tr><td><strong>IOPS 与容量绑定</strong></td><td>是（必须扩大卷才能提升 IOPS）</td><td>否（容量、IOPS、吞吐独立配置，更灵活）</td></tr><tr><td><strong>突发性能</strong></td><td>小卷有突发积分机制，可能性能波动</td><td>无突发积分，性能更稳定</td></tr></tbody></table><p>iops</p><p><a href="https://cloudcasts.io/article/what-you-need-to-know-about-iops" target="_blank" rel="noreferrer">https://cloudcasts.io/article/what-you-need-to-know-about-iops</a></p><p><a href="https://handbook.vantage.sh/aws/concepts/io-operations/" target="_blank" rel="noreferrer">https://handbook.vantage.sh/aws/concepts/io-operations/</a></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">max by (pod, device)(rate(container_fs_reads_total{container!=&quot;&quot;}[5m]))</span></span>
<span class="line"><span style="color:#e1e4e8;">max by (pod, device)(rate(container_fs_writes_total{container!=&quot;&quot;}[5m]))</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">irate(node_disk_reads_completed_total[5m])</span></span>
<span class="line"><span style="color:#e1e4e8;">irate(node_disk_writes_completed_total[5m])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">max by (pod, device)(rate(container_fs_reads_total{container!=&quot;&quot;}[5m]))</span></span>
<span class="line"><span style="color:#24292e;">max by (pod, device)(rate(container_fs_writes_total{container!=&quot;&quot;}[5m]))</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">irate(node_disk_reads_completed_total[5m])</span></span>
<span class="line"><span style="color:#24292e;">irate(node_disk_writes_completed_total[5m])</span></span></code></pre></div>`,7),r=[n];function p(d,l,c,i,_,g){return s(),e("div",null,r)}const m=t(o,[["render",p]]);export{u as __pageData,m as default};
