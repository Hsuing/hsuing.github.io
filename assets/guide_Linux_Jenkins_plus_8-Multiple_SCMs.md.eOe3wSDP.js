import{_ as e,o as s,c as t,R as n}from"./chunks/framework.zUbWieqp.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/Jenkins/plus/8-Multiple_SCMs.md","filePath":"guide/Linux/Jenkins/plus/8-Multiple_SCMs.md","lastUpdated":1720533756000}'),i={name:"guide/Linux/Jenkins/plus/8-Multiple_SCMs.md"},o=n('<p><em>Multiple SCMs</em></p><p><strong>Multiple SCMs plugin</strong>，插件介绍：This plugin enables the selection of multiple source code management systems for a build. For example, it enables checking out the source code from one SCM while checking out legacy or third-party code from another</p><p>1、在源码管理中选择 <em>Multiple SCMs</em></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202406242127223.png" alt=""></p><p>2、选择你的代码仓库类型，进行添加，比如git</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202406242127972.png" alt=""></p><p>3、填写第2步添加的仓库属性</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202406242127477.png" alt=""></p><ul><li><strong>注意</strong></li></ul><p>​ 第3步中的红色框：图中的code和config是2个文件夹，对应你的源代码仓库的个数，拿我们当前的情况来说，在当前jenkins任务的工作区间下，分别建立code和config文件夹，将第一个仓库（前端代码）拉取至code目录下，将第二个仓库（前端所有配置）拉取至config目录下。如果没有添加文件夹进行区分，会出现前一个仓库将后一个仓库覆盖的问题（如果两个仓库的软件是一样的，比如都是git或者都是svn），造成我们构建的时候找不到文件</p>',10),p=[o];function c(l,a,u,r,g,_){return s(),t("div",null,p)}const h=e(i,[["render",c]]);export{d as __pageData,h as default};
