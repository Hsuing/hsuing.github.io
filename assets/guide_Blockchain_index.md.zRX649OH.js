import{_ as a,o as e,c as t,R as n}from"./chunks/framework.zUbWieqp.js";const g=JSON.parse('{"title":"1. 区块链","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Blockchain/index.md","filePath":"guide/Blockchain/index.md","lastUpdated":1720533756000}'),i={name:"guide/Blockchain/index.md"},o=n('<h1 id="_1-区块链" tabindex="-1">1. 区块链 <a class="header-anchor" href="#_1-区块链" aria-label="Permalink to &quot;1. 区块链&quot;">​</a></h1><p>区块链（Blockchain）最早在 2008 年被提出，本质上是一 个去中心化的分布式账本（Distributed Ledger）技术。</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202406222224614.png" alt="image-20240622222258155"></p><p>交易（Transaction）：指使区块链分布式账本状态改变的一次操作，如添加一条记录或者是一笔在两个账户之间的转账操 作。</p><p>区块（Block）：用于记录一段时间内发生的交易和状态结 果。区块通常用区块头的哈希值和区块高度来进行标识。</p><p>链（Chain）：由一个个区块按照发生顺序串联而成，是整 个状态变化的日志记录。</p><h1 id="_2-架构层次" tabindex="-1">2. 架构层次 <a class="header-anchor" href="#_2-架构层次" aria-label="Permalink to &quot;2. 架构层次&quot;">​</a></h1><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202406222231944.png" alt="image-20240622223059712"></p><p>数据层：包括了数据的存储结构、存储方式等，区块链作为 节点共享的数据账本，任何分布式节点都可以将一段时间内接收 的交易数据记录到区块中，并将该区块添加到区块链中，形成新 的区块链。</p><p>网络层：包括了系统的 P2P 分布式组网方式、消息传播协议、 数据验证机制以及节点许可接入机制等要素，系统可以根据应用 场景的不同需求进行特殊设计；</p><p>共识层：主要作用是使用共识机制，使各节点在去中心化的 区块链网络中能够快速达成一致，维护共用的账本；</p><p>激励层：主要作用是利用数字货币完成区块打包奖励、交易 费用的收取等；</p><p>合约层：主要作用是负责将区块链系统的业务逻辑以代码的 形式实现、编译并部署，完成既定规则的条件触发和自动执行， 最大限度的减少人工干预；</p><p>应用层：主要作用是调用智能合约接口，适配区块链的各类 应用场景，为用户提供各种服务和应用。</p>',14),s=[o];function c(p,r,_,d,h,l){return e(),t("div",null,s)}const u=a(i,[["render",c]]);export{g as __pageData,u as default};
