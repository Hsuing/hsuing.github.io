import{_ as s,o as a,c as n,R as l}from"./chunks/framework.zUbWieqp.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Database/rabbitmq/集群模式/04.Rabbitmq二进制集群搭建.md","filePath":"guide/Database/rabbitmq/集群模式/04.Rabbitmq二进制集群搭建.md","lastUpdated":1710405635000}'),o={name:"guide/Database/rabbitmq/集群模式/04.Rabbitmq二进制集群搭建.md"},p=l(`<h2 id="_1-集群结构" tabindex="-1">1，集群结构 <a class="header-anchor" href="#_1-集群结构" aria-label="Permalink to &quot;1，集群结构&quot;">​</a></h2><h3 id="_1-概述" tabindex="-1">1，概述 <a class="header-anchor" href="#_1-概述" aria-label="Permalink to &quot;1，概述&quot;">​</a></h3><p>通过 Erlang 的分布式特性（通过 magic cookie 认证节点）进行 RabbitMQ 集群，各 RabbitMQ 服务为对等节点，即每个节点都提供服务给客户端连接，进行消息发送与接收。</p><p>这些节点通过 RabbitMQ HA 队列（镜像队列）进行消息队列结构复制。本方案中搭建 3 个节点，并且都是磁盘节点（所有节点状态保持一致，节点完全对等），只要有任何一个节点能够工作，RabbitMQ 集群对外就能提供服务。</p><h3 id="_2-元数据" tabindex="-1">2，元数据 <a class="header-anchor" href="#_2-元数据" aria-label="Permalink to &quot;2，元数据&quot;">​</a></h3><p>RabbitMQ 内部有各种基础构件，包括队列、交换器、绑定、虚拟主机等，他们组成了 AMQP 协议消息通信的基础，而这些构件以元数据的形式存在，它始终记录在 RabbitMQ 内部，它们分别是：</p><ul><li>队列元数据：队列名称和它们的属性</li><li>交换器元数据：交换器名称、类型和属性</li><li>绑定元数据：一张简单的表格展示了如何将消息路由到队列</li><li>vhost 元数据：为 vhost 内的队列、交换器和绑定提供命名空间和安全属性</li></ul><p>在单一节点上，RabbitMQ 会将上述元数据存储到内存上，如果是磁盘节点（下面会讲），还会存储到磁盘上。</p><h3 id="_3-集群中的队列" tabindex="-1">3，集群中的队列 <a class="header-anchor" href="#_3-集群中的队列" aria-label="Permalink to &quot;3，集群中的队列&quot;">​</a></h3><p>这里有个问题需要思考，RabbitMQ 默认会将消息冗余到所有节点上吗？这样听起来正符合高可用的特性，只要集群上还有一个节点存活，那么就可以继续进行消息通信，但这也随之为 RabbitMQ 带来了致命的缺点：</p><ol><li>每次发布消息，都要把它扩散到所有节点上，而且对于磁盘节点来说，每一条消息都会触发磁盘活动，这会导致整个集群内性能负载急剧拉升。</li><li>如果每个节点都有所有队列的完整内容，那么添加节点不会给你带来额外的存储空间，也会带来木桶效应，举个例子，如果集群内有个节点存储了 3G 队列内容，那么在另外一个只有 1G 存储空间的节点上，就会造成内存空间不足的情况，也就是无法通过集群节点的扩容提高消息积压能力。</li></ol><p>解决这个问题就是通过集群中唯一节点来负责任何特定队列，只有该节点才会受队列大小的影响，其它节点如果接收到该队列消息，那么就要根据元数据信息，传递给队列所有者节点（也就是说其它节点上只存储了特定队列所有者节点的指针）。这样一来，就可以通过在集群内增加节点，存储更多的队列数据。</p><h3 id="_4-分布交换器" tabindex="-1">4，分布交换器 <a class="header-anchor" href="#_4-分布交换器" aria-label="Permalink to &quot;4，分布交换器&quot;">​</a></h3><p>交换器其实是我们想象出来的，它本质是一张查询表，里面包括了交换器名称和一个队列的绑定列表，当你将消息发布到交换器中，实际上是你所在的信道将消息上的路由键与交换器的绑定列表进行匹配，然后将消息路由出去。有了这个机制，那么在所有节点上传递交换器消息将简单很多，而 RabbitMQ 所做的事情就是把交换器拷贝到所有节点上，因此每个节点上的每条信道都可以访问完整的交换器了。</p><h3 id="_5-内存节点与磁盘节点" tabindex="-1">5，内存节点与磁盘节点 <a class="header-anchor" href="#_5-内存节点与磁盘节点" aria-label="Permalink to &quot;5，内存节点与磁盘节点&quot;">​</a></h3><p>关于上面队列所说的问题与解决办法，又有了一个伴随而来的问题出现：如果特定队列的所有者节点发生了故障，那么该节点上的队列和关联的绑定都会消失吗？</p><ol><li>如果是内存节点，那么附加在该节点上的队列和其关联的绑定都会丢失，并且消费者可以重新连接集群并重新创建队列；</li><li>如果是磁盘节点，重新恢复故障后，该队列又可以进行传输数据了，并且在恢复故障磁盘节点之前，不能在其它节点上让消费者重新连到集群并重新创建队列，如果消费者继续在其它节点上声明该队列，会得到一个 404 NOT_FOUND 错误，这样确保了当故障节点恢复后加入集群，该节点上的队列消息不回丢失，也避免了队列会在一个节点以上出现冗余的问题。</li></ol><p>接下来说说内存节点与磁盘节点在集群中的作用，在集群中的每个节点，要么是内存节点，要么是磁盘节点，如果是内存节点，会将所有的元数据信息仅存储到内存中，而磁盘节点则不仅会将所有元数据存储到内存上， 还会将其持久化到磁盘。</p><p>在单节点 RabbitMQ 上，仅允许该节点是磁盘节点，这样确保了节点发生故障或重启节点之后，所有关于系统的配置与元数据信息都会重磁盘上恢复；而在 RabbitMQ 集群上，允许节点上至少有一个磁盘节点，在内存节点上，意味着队列和交换器声明之类的操作会更加快速。原因是这些操作会将其元数据同步到所有节点上，对于内存节点，将需要同步的元数据写进内存就行了，但对于磁盘节点，意味着还需要及其消耗性能的磁盘写入操作。</p><p>RabbitMQ 集群只要求至少有一个磁盘节点，这是有道理的，当其它内存节点发生故障或离开集群，只需要通知至少一个磁盘节点进行元数据的更新，如果是碰巧唯一的磁盘节点也发生故障了，集群可以继续路由消息，但是不可以做以下操作了：</p><ul><li>创建队列</li><li>创建交换器</li><li>创建绑定</li><li>添加用户</li><li>更改权限</li><li>添加或删除集群节点</li></ul><p>这是因为上述操作都需要持久化到磁盘节点上，以便内存节点恢复故障可以从磁盘节点上恢复元数据，解决办法是在集群添加 2 台以上的磁盘节点，这样其中一台发生故障了，集群仍然可以保持运行，且能够在任何时候保存元数据变更。</p><h2 id="_2-安装" tabindex="-1">2，安装 <a class="header-anchor" href="#_2-安装" aria-label="Permalink to &quot;2，安装&quot;">​</a></h2><h3 id="_1-环境准备。" tabindex="-1">1，环境准备。 <a class="header-anchor" href="#_1-环境准备。" aria-label="Permalink to &quot;1，环境准备。&quot;">​</a></h3><ul><li>CentOS 版本：CentOS Linux release 7.5.1804 (Core)</li><li>RabbitMQ 版本：RabbitMQ 3.6</li><li>三台主机：192.168.106.7，192.168.106.8，192.168.106.9</li></ul><p>防火墙之类的全部关掉。</p><h3 id="_2-安装-erlang" tabindex="-1">2，安装 Erlang <a class="header-anchor" href="#_2-安装-erlang" aria-label="Permalink to &quot;2，安装 Erlang&quot;">​</a></h3><p>RabbitMQ 安装需要依赖 Erlang 环境</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/opt</span></span>
<span class="line"><span style="color:#B392F0;">wget</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://www.rabbitmq.com/releases/erlang/erlang-19.0.4-1.el7.centos.x86_64.rpm</span></span>
<span class="line"><span style="color:#B392F0;">yum</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-y</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">erlang-19.0.4-1.el7.centos.x86_64.rpm</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/opt</span></span>
<span class="line"><span style="color:#6F42C1;">wget</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://www.rabbitmq.com/releases/erlang/erlang-19.0.4-1.el7.centos.x86_64.rpm</span></span>
<span class="line"><span style="color:#6F42C1;">yum</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-y</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">erlang-19.0.4-1.el7.centos.x86_64.rpm</span></span></code></pre></div><h3 id="_3-安装-rabbitmq" tabindex="-1">3，安装 RabbitMQ <a class="header-anchor" href="#_3-安装-rabbitmq" aria-label="Permalink to &quot;3，安装 RabbitMQ&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">wget</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.10/rabbitmq-server-3.6.10-1.el7.noarch.rpm</span></span>
<span class="line"><span style="color:#B392F0;">yum</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-y</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmq-server-3.6.10-1.el7.noarch.rpm</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">wget</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.10/rabbitmq-server-3.6.10-1.el7.noarch.rpm</span></span>
<span class="line"><span style="color:#6F42C1;">yum</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-y</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmq-server-3.6.10-1.el7.noarch.rpm</span></span></code></pre></div><h3 id="_4-启动服务" tabindex="-1">4，启动服务 <a class="header-anchor" href="#_4-启动服务" aria-label="Permalink to &quot;4，启动服务&quot;">​</a></h3><p>启动前先添加一下配置信息。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">vim</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/rabbitmq/rabbitmq.config</span></span>
<span class="line"><span style="color:#E1E4E8;">[{rabbit, [{loopback_users, []}]}].</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">vim</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/rabbitmq/rabbitmq.config</span></span>
<span class="line"><span style="color:#24292E;">[{rabbit, [{loopback_users, []}]}].</span></span></code></pre></div><ul><li>这里的意思是开放使用，rabbitmq 默认创建的用户 guest，密码也是 guest，这个用户默认只能是本机访问，localhost 或者 127.0.0.1，从外部访问需要添加上面的配置。</li></ul><p>保存配置之后启动服务。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmq-server</span></span>
<span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmq-server</span></span>
<span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">enable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmq-server</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmq-server</span></span>
<span class="line"><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmq-server</span></span>
<span class="line"><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">enable</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmq-server</span></span></code></pre></div><h3 id="_5-启用-web-管理" tabindex="-1">5，启用 web 管理 <a class="header-anchor" href="#_5-启用-web-管理" aria-label="Permalink to &quot;5，启用 web 管理&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">/sbin/rabbitmq-plugins</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">enable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmq_management</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">/sbin/rabbitmq-plugins</span><span style="color:#24292E;"> </span><span style="color:#032F62;">enable</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmq_management</span></span></code></pre></div><ul><li>访问：<code>http://192.168.106.7:15672</code></li><li>用户名：guest</li><li>密码：guest</li></ul><h2 id="_3-集群配置" tabindex="-1">3，集群配置 <a class="header-anchor" href="#_3-集群配置" aria-label="Permalink to &quot;3，集群配置&quot;">​</a></h2><h3 id="_1-修改-hostname。" tabindex="-1">1，修改 hostname。 <a class="header-anchor" href="#_1-修改-hostname。" aria-label="Permalink to &quot;1，修改 hostname。&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">hostnamectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set-hostname</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node1</span></span>
<span class="line"><span style="color:#B392F0;">hostnamectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set-hostname</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node2</span></span>
<span class="line"><span style="color:#B392F0;">hostnamectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set-hostname</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">hostnamectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set-hostname</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node1</span></span>
<span class="line"><span style="color:#6F42C1;">hostnamectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set-hostname</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node2</span></span>
<span class="line"><span style="color:#6F42C1;">hostnamectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set-hostname</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node3</span></span></code></pre></div><h3 id="_2-修改-hosts。" tabindex="-1">2，修改 hosts。 <a class="header-anchor" href="#_2-修改-hosts。" aria-label="Permalink to &quot;2，修改 hosts。&quot;">​</a></h3><p>编辑<code>/etc/hosts</code>文件，添加到在三台机器的<code>/etc/hosts</code>中以下内容</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/hosts</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">EOF</span></span>
<span class="line"><span style="color:#9ECBFF;">192.168.106.7 node1</span></span>
<span class="line"><span style="color:#9ECBFF;">192.168.106.8 node2</span></span>
<span class="line"><span style="color:#9ECBFF;">192.168.106.9 node3</span></span>
<span class="line"><span style="color:#9ECBFF;">EOF</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/hosts</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">EOF</span></span>
<span class="line"><span style="color:#032F62;">192.168.106.7 node1</span></span>
<span class="line"><span style="color:#032F62;">192.168.106.8 node2</span></span>
<span class="line"><span style="color:#032F62;">192.168.106.9 node3</span></span>
<span class="line"><span style="color:#032F62;">EOF</span></span></code></pre></div><p><code>注意：</code><strong>三台主机上安装的 <code>RabbitMQ</code> 都保证都可以正常启动, 才可以进行以下操作</strong></p><h3 id="_3-停止-rabbitmq-服务" tabindex="-1">3，停止 RabbitMQ 服务 <a class="header-anchor" href="#_3-停止-rabbitmq-服务" aria-label="Permalink to &quot;3，停止 RabbitMQ 服务&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmq-server</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stop</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmq-server</span></span></code></pre></div><p>进入下边操作之前，需要全部停止，否则在后边执行 <code>rabbitmqctl stop_app</code>将会报如下错误：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl stop_app</span></span>
<span class="line"><span style="color:#B392F0;">Stopping</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">application</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span>
<span class="line"><span style="color:#B392F0;">Error:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">unable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">connect</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nodedown</span></span>
<span class="line"><span style="color:#B392F0;">DIAGNOSTICS</span></span>
<span class="line"><span style="color:#E1E4E8;">===========</span></span>
<span class="line"><span style="color:#B392F0;">attempted</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">contact:</span><span style="color:#E1E4E8;"> [rabbit@node3]</span></span>
<span class="line"><span style="color:#B392F0;">rabbit@node3:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">connected</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">epmd</span><span style="color:#E1E4E8;"> (port </span><span style="color:#79B8FF;">4369</span><span style="color:#E1E4E8;">) on node3</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">epmd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">reports</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;rabbit&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">running</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">port</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">25672</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">TCP</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">connection</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">succeeded</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">but</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Erlang</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">distribution</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">failed</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Hostname</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mismatch:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;rabbit@localhost&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">believes</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">its</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">host</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">different.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Please</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ensure</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">that</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hostnames</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">resolve</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">same</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">way</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">locally</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">and</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;rabbit@localhost&quot;</span></span>
<span class="line"><span style="color:#B392F0;">current</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">details:</span></span>
<span class="line"><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">name:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;rabbitmq-cli-27@node3&#39;</span></span>
<span class="line"><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">home</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dir:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/var/lib/rabbitmq</span></span>
<span class="line"><span style="color:#B392F0;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cookie</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hash:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hodtTGJwleXyVXlosQGJcg==</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl stop_app</span></span>
<span class="line"><span style="color:#6F42C1;">Stopping</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit</span><span style="color:#24292E;"> </span><span style="color:#032F62;">application</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span>
<span class="line"><span style="color:#6F42C1;">Error:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">unable</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">connect</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nodedown</span></span>
<span class="line"><span style="color:#6F42C1;">DIAGNOSTICS</span></span>
<span class="line"><span style="color:#24292E;">===========</span></span>
<span class="line"><span style="color:#6F42C1;">attempted</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">contact:</span><span style="color:#24292E;"> [rabbit@node3]</span></span>
<span class="line"><span style="color:#6F42C1;">rabbit@node3:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">*</span><span style="color:#24292E;"> </span><span style="color:#032F62;">connected</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">epmd</span><span style="color:#24292E;"> (port </span><span style="color:#005CC5;">4369</span><span style="color:#24292E;">) on node3</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">*</span><span style="color:#24292E;"> </span><span style="color:#032F62;">epmd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">reports</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;rabbit&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">running</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">port</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">25672</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">*</span><span style="color:#24292E;"> </span><span style="color:#032F62;">TCP</span><span style="color:#24292E;"> </span><span style="color:#032F62;">connection</span><span style="color:#24292E;"> </span><span style="color:#032F62;">succeeded</span><span style="color:#24292E;"> </span><span style="color:#032F62;">but</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Erlang</span><span style="color:#24292E;"> </span><span style="color:#032F62;">distribution</span><span style="color:#24292E;"> </span><span style="color:#032F62;">failed</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">*</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Hostname</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mismatch:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;rabbit@localhost&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">believes</span><span style="color:#24292E;"> </span><span style="color:#032F62;">its</span><span style="color:#24292E;"> </span><span style="color:#032F62;">host</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">different.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Please</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ensure</span><span style="color:#24292E;"> </span><span style="color:#032F62;">that</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hostnames</span><span style="color:#24292E;"> </span><span style="color:#032F62;">resolve</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">same</span><span style="color:#24292E;"> </span><span style="color:#032F62;">way</span><span style="color:#24292E;"> </span><span style="color:#032F62;">locally</span><span style="color:#24292E;"> </span><span style="color:#032F62;">and</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;rabbit@localhost&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">current</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">details:</span></span>
<span class="line"><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;rabbitmq-cli-27@node3&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">home</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dir:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/var/lib/rabbitmq</span></span>
<span class="line"><span style="color:#6F42C1;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cookie</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hash:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hodtTGJwleXyVXlosQGJcg==</span></span></code></pre></div><h3 id="_4-设置-erlang-cookie" tabindex="-1">4，设置 Erlang Cookie <a class="header-anchor" href="#_4-设置-erlang-cookie" aria-label="Permalink to &quot;4，设置 Erlang Cookie&quot;">​</a></h3><p>设置不同节点间同一认证的 Erlang Cookie，这里将 node1 的 Cookie 传给另外两台。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node1 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$ scp /var/lib/rabbitmq/.erlang.cookie root@node2:/var/lib/rabbitmq/</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node1 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$ scp /var/lib/rabbitmq/.erlang.cookie root@node3:/var/lib/rabbitmq/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node1 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$ scp /var/lib/rabbitmq/.erlang.cookie root@node2:/var/lib/rabbitmq/</span></span>
<span class="line"><span style="color:#24292E;">[root@node1 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$ scp /var/lib/rabbitmq/.erlang.cookie root@node3:/var/lib/rabbitmq/</span></span></code></pre></div><h3 id="_5-注意事项" tabindex="-1">5，注意事项 <a class="header-anchor" href="#_5-注意事项" aria-label="Permalink to &quot;5，注意事项&quot;">​</a></h3><p>cookie 在所有节点上必须完全一样，同步时一定要注意。 erlang 是通过主机名来连接服务，必须保证各个主机名之间可以 ping 通。可以通过编辑 / etc/hosts 来手工添加主机名和 IP 对应关系。如果主机名 ping 不通，rabbitmq 服务启动会失败。</p><h3 id="_6-运行各节点" tabindex="-1">6，运行各节点 <a class="header-anchor" href="#_6-运行各节点" aria-label="Permalink to &quot;6，运行各节点&quot;">​</a></h3><ul><li>设置好 cookie 后先将三个节点的 rabbitmq 重启。</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node1 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$ rabbitmq-server -detached</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node2 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$ rabbitmq-server -detached</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$ rabbitmq-server -detached</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node1 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$ rabbitmq-server -detached</span></span>
<span class="line"><span style="color:#24292E;">[root@node2 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$ rabbitmq-server -detached</span></span>
<span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$ rabbitmq-server -detached</span></span></code></pre></div><ul><li>查看单节点的集群状态。</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node1 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$ rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#B392F0;">Cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node1</span></span>
<span class="line"><span style="color:#E1E4E8;">[{nodes,[{disc,[rabbit@node1]}]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {running_nodes,[rabbit@node1]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {cluster_name,</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">&quot;rabbit@node1&quot;</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {alarms,[{rabbit@node1,[]}]}]</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node2 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$ rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#B392F0;">Cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node2</span></span>
<span class="line"><span style="color:#E1E4E8;">[{nodes,[{disc,[rabbit@node2]}]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {running_nodes,[rabbit@node2]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {cluster_name,</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">&quot;rabbit@node2&quot;</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {alarms,[{rabbit@node2,[]}]}]</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$ rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#B392F0;">Cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span>
<span class="line"><span style="color:#E1E4E8;">[{nodes,[{disc,[rabbit@node3]}]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {running_nodes,[rabbit@node3]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {cluster_name,</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">&quot;rabbit@node3&quot;</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {alarms,[{rabbit@node3,[]}]}]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node1 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$ rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#6F42C1;">Cluster</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node1</span></span>
<span class="line"><span style="color:#24292E;">[{nodes,[{disc,[rabbit@node1]}]},</span></span>
<span class="line"><span style="color:#24292E;"> {running_nodes,[rabbit@node1]},</span></span>
<span class="line"><span style="color:#24292E;"> {cluster_name,</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;rabbit@node1&quot;</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#24292E;"> {alarms,[{rabbit@node1,[]}]}]</span></span>
<span class="line"><span style="color:#24292E;">[root@node2 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$ rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#6F42C1;">Cluster</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node2</span></span>
<span class="line"><span style="color:#24292E;">[{nodes,[{disc,[rabbit@node2]}]},</span></span>
<span class="line"><span style="color:#24292E;"> {running_nodes,[rabbit@node2]},</span></span>
<span class="line"><span style="color:#24292E;"> {cluster_name,</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;rabbit@node2&quot;</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#24292E;"> {alarms,[{rabbit@node2,[]}]}]</span></span>
<span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$ rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#6F42C1;">Cluster</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span>
<span class="line"><span style="color:#24292E;">[{nodes,[{disc,[rabbit@node3]}]},</span></span>
<span class="line"><span style="color:#24292E;"> {running_nodes,[rabbit@node3]},</span></span>
<span class="line"><span style="color:#24292E;"> {cluster_name,</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;rabbit@node3&quot;</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#24292E;"> {alarms,[{rabbit@node3,[]}]}]</span></span></code></pre></div><h3 id="_7-配置集群" tabindex="-1">7，配置集群 <a class="header-anchor" href="#_7-配置集群" aria-label="Permalink to &quot;7，配置集群&quot;">​</a></h3><h4 id="_1-加入集群" tabindex="-1">1，加入集群 <a class="header-anchor" href="#_1-加入集群" aria-label="Permalink to &quot;1，加入集群&quot;">​</a></h4><p>这里将 node2 和 node3 加入到 node1 当中，按照顺序执行 先<code>node2</code>，<code>node3</code>。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">node2</span><span style="color:#E1E4E8;"> $ </span><span style="color:#9ECBFF;">rabbitmqctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop_app</span><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 停止rabbitmq服务</span></span>
<span class="line"><span style="color:#B392F0;">node2</span><span style="color:#E1E4E8;"> $ </span><span style="color:#9ECBFF;">rabbitmqctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">join_cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node1</span><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># node2和node1构成集群, node2必须能通过node1的主机名ping通</span></span>
<span class="line"><span style="color:#B392F0;">node2</span><span style="color:#E1E4E8;"> $ </span><span style="color:#9ECBFF;">rabbitmqctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start_app</span><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 开启rabbitmq服务</span></span>
<span class="line"><span style="color:#B392F0;">node3</span><span style="color:#E1E4E8;"> $ </span><span style="color:#9ECBFF;">rabbitmqctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop_app</span><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 停止rabbitmq服务</span></span>
<span class="line"><span style="color:#B392F0;">node3</span><span style="color:#E1E4E8;"> $ </span><span style="color:#9ECBFF;">rabbitmqctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">join_cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node1</span><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># node3和node1构成集群, node2必须能通过node1的主机名ping通</span></span>
<span class="line"><span style="color:#B392F0;">node3</span><span style="color:#E1E4E8;"> $ </span><span style="color:#9ECBFF;">rabbitmqctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start_app</span><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 开启rabbitmq服务</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">node2</span><span style="color:#24292E;"> $ </span><span style="color:#032F62;">rabbitmqctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stop_app</span><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 停止rabbitmq服务</span></span>
<span class="line"><span style="color:#6F42C1;">node2</span><span style="color:#24292E;"> $ </span><span style="color:#032F62;">rabbitmqctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">join_cluster</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node1</span><span style="color:#24292E;">    </span><span style="color:#6A737D;"># node2和node1构成集群, node2必须能通过node1的主机名ping通</span></span>
<span class="line"><span style="color:#6F42C1;">node2</span><span style="color:#24292E;"> $ </span><span style="color:#032F62;">rabbitmqctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start_app</span><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 开启rabbitmq服务</span></span>
<span class="line"><span style="color:#6F42C1;">node3</span><span style="color:#24292E;"> $ </span><span style="color:#032F62;">rabbitmqctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stop_app</span><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 停止rabbitmq服务</span></span>
<span class="line"><span style="color:#6F42C1;">node3</span><span style="color:#24292E;"> $ </span><span style="color:#032F62;">rabbitmqctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">join_cluster</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node1</span><span style="color:#24292E;">    </span><span style="color:#6A737D;"># node3和node1构成集群, node2必须能通过node1的主机名ping通</span></span>
<span class="line"><span style="color:#6F42C1;">node3</span><span style="color:#24292E;"> $ </span><span style="color:#032F62;">rabbitmqctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start_app</span><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 开启rabbitmq服务</span></span></code></pre></div><p><strong>此时 node2 与 node3 也会自动建立连接，查看集群成员，可以看到都加进来了。</strong></p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node1 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#B392F0;">Cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node1</span></span>
<span class="line"><span style="color:#E1E4E8;">[{nodes,[{disc,[rabbit@node1,rabbit@node2,rabbit@node3]}]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {running_nodes,[rabbit@node3,rabbit@node2,rabbit@node1]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {cluster_name,</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">&quot;rabbit@node1&quot;</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {alarms,[{rabbit@node3,[]},{rabbit@node2,[]},{rabbit@node1,[]}]}]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node1 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#6F42C1;">Cluster</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node1</span></span>
<span class="line"><span style="color:#24292E;">[{nodes,[{disc,[rabbit@node1,rabbit@node2,rabbit@node3]}]},</span></span>
<span class="line"><span style="color:#24292E;"> {running_nodes,[rabbit@node3,rabbit@node2,rabbit@node1]},</span></span>
<span class="line"><span style="color:#24292E;"> {cluster_name,</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;rabbit@node1&quot;</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#24292E;"> {alarms,[{rabbit@node3,[]},{rabbit@node2,[]},{rabbit@node1,[]}]}]</span></span></code></pre></div><ul><li>第一行是集群中的节点成员</li><li>disc 表示这些都是磁盘节点，默认创建之后就是 disc。</li><li>第二行是正在运行的节点成员。</li></ul><p>如果要为集群增加新节点时，我们可以按照上面的步骤将新节点添加到集群。</p><h4 id="_2-停止一个节点" tabindex="-1">2，停止一个节点 <a class="header-anchor" href="#_2-停止一个节点" aria-label="Permalink to &quot;2，停止一个节点&quot;">​</a></h4><p>在集群中如果要停止一个节点执行命令 <code>rabbitmqctl stop_app</code> 或 <code>rabbitmqctl stop</code> 或者可以 kill 掉节点的进程不影响其他节点运行（注意: 如果只有一个磁盘节点，如果干掉磁盘节点后消息数据会丢失）。</p><ul><li>停止 node3。</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl stop</span></span>
<span class="line"><span style="color:#B392F0;">Stopping</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">and</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">halting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl stop</span></span>
<span class="line"><span style="color:#6F42C1;">Stopping</span><span style="color:#24292E;"> </span><span style="color:#032F62;">and</span><span style="color:#24292E;"> </span><span style="color:#032F62;">halting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span></code></pre></div><ul><li>查看集群状态。</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node1 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#B392F0;">Cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node1</span></span>
<span class="line"><span style="color:#E1E4E8;">[{nodes,[{disc,[rabbit@node1,rabbit@node2,rabbit@node3]}]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {running_nodes,[rabbit@node2,rabbit@node1]},   </span><span style="color:#6A737D;">#可以看到node3已经是非running状态</span></span>
<span class="line"><span style="color:#E1E4E8;"> {cluster_name,</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">&quot;rabbit@node1&quot;</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {alarms,[{rabbit@node2,[]},{rabbit@node1,[]}]}]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node1 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#6F42C1;">Cluster</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node1</span></span>
<span class="line"><span style="color:#24292E;">[{nodes,[{disc,[rabbit@node1,rabbit@node2,rabbit@node3]}]},</span></span>
<span class="line"><span style="color:#24292E;"> {running_nodes,[rabbit@node2,rabbit@node1]},   </span><span style="color:#6A737D;">#可以看到node3已经是非running状态</span></span>
<span class="line"><span style="color:#24292E;"> {cluster_name,</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;rabbit@node1&quot;</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#24292E;"> {alarms,[{rabbit@node2,[]},{rabbit@node1,[]}]}]</span></span></code></pre></div><h4 id="_3-重置一个节点。" tabindex="-1">3，重置一个节点。 <a class="header-anchor" href="#_3-重置一个节点。" aria-label="Permalink to &quot;3，重置一个节点。&quot;">​</a></h4><p>刚刚将 <code>node3</code> 给停止了，如果再次启动<code>node3</code>，那么还会加入到节点中来。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$systemctl start rabbitmq-server</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#B392F0;">Cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span>
<span class="line"><span style="color:#E1E4E8;">[{nodes,[{disc,[rabbit@node1,rabbit@node2,rabbit@node3]}]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {running_nodes,[rabbit@node1,rabbit@node2,rabbit@node3]},  </span><span style="color:#6A737D;">#可以看到node3又加入到集群中了</span></span>
<span class="line"><span style="color:#E1E4E8;"> {cluster_name,</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">&quot;rabbit@node1&quot;</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {alarms,[{rabbit@node1,[]},{rabbit@node2,[]},{rabbit@node3,[]}]}]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$systemctl start rabbitmq-server</span></span>
<span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#6F42C1;">Cluster</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span>
<span class="line"><span style="color:#24292E;">[{nodes,[{disc,[rabbit@node1,rabbit@node2,rabbit@node3]}]},</span></span>
<span class="line"><span style="color:#24292E;"> {running_nodes,[rabbit@node1,rabbit@node2,rabbit@node3]},  </span><span style="color:#6A737D;">#可以看到node3又加入到集群中了</span></span>
<span class="line"><span style="color:#24292E;"> {cluster_name,</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;rabbit@node1&quot;</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#24292E;"> {alarms,[{rabbit@node1,[]},{rabbit@node2,[]},{rabbit@node3,[]}]}]</span></span></code></pre></div><p>那么，如果才能将一个节点重置，与集群彻底脱离呢。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl stop_app</span></span>
<span class="line"><span style="color:#B392F0;">Stopping</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">application</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl reset</span></span>
<span class="line"><span style="color:#B392F0;">Resetting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl start_app</span></span>
<span class="line"><span style="color:#B392F0;">Starting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl stop_app</span></span>
<span class="line"><span style="color:#6F42C1;">Stopping</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit</span><span style="color:#24292E;"> </span><span style="color:#032F62;">application</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span>
<span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl reset</span></span>
<span class="line"><span style="color:#6F42C1;">Resetting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span>
<span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl start_app</span></span>
<span class="line"><span style="color:#6F42C1;">Starting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span></code></pre></div><p>然后再查看一下分离之后的集群状态。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#B392F0;">Cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span>
<span class="line"><span style="color:#E1E4E8;">[{nodes,[{disc,[rabbit@node3]}]},   </span><span style="color:#6A737D;">#node3又变成了单节点状态了。</span></span>
<span class="line"><span style="color:#E1E4E8;"> {running_nodes,[rabbit@node3]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {cluster_name,</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">&quot;rabbit@node3&quot;</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {alarms,[{rabbit@node3,[]}]}]</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node1 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#B392F0;">Cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node1</span></span>
<span class="line"><span style="color:#E1E4E8;">[{nodes,[{disc,[rabbit@node1,rabbit@node2]}]},  </span><span style="color:#6A737D;">#集群内也看不到node3了</span></span>
<span class="line"><span style="color:#E1E4E8;"> {running_nodes,[rabbit@node2,rabbit@node1]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {cluster_name,</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">&quot;rabbit@node1&quot;</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {alarms,[{rabbit@node2,[]},{rabbit@node1,[]}]}]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#6F42C1;">Cluster</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span>
<span class="line"><span style="color:#24292E;">[{nodes,[{disc,[rabbit@node3]}]},   </span><span style="color:#6A737D;">#node3又变成了单节点状态了。</span></span>
<span class="line"><span style="color:#24292E;"> {running_nodes,[rabbit@node3]},</span></span>
<span class="line"><span style="color:#24292E;"> {cluster_name,</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;rabbit@node3&quot;</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#24292E;"> {alarms,[{rabbit@node3,[]}]}]</span></span>
<span class="line"><span style="color:#24292E;">[root@node1 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#6F42C1;">Cluster</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node1</span></span>
<span class="line"><span style="color:#24292E;">[{nodes,[{disc,[rabbit@node1,rabbit@node2]}]},  </span><span style="color:#6A737D;">#集群内也看不到node3了</span></span>
<span class="line"><span style="color:#24292E;"> {running_nodes,[rabbit@node2,rabbit@node1]},</span></span>
<span class="line"><span style="color:#24292E;"> {cluster_name,</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;rabbit@node1&quot;</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#24292E;"> {alarms,[{rabbit@node2,[]},{rabbit@node1,[]}]}]</span></span></code></pre></div><h3 id="_8-设置内存节点" tabindex="-1">8，设置内存节点 <a class="header-anchor" href="#_8-设置内存节点" aria-label="Permalink to &quot;8，设置内存节点&quot;">​</a></h3><p>上边两个节点加入集群的时候，默认的是作为磁盘节点，如果想要创建内存节点，只需在创建的时候多加一个<code>--ram</code>参数即可。</p><p>这里同样拿刚才的 node3 做测试：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl stop_app</span></span>
<span class="line"><span style="color:#B392F0;">Stopping</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">application</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl join_cluster --ram rabbit@node1</span></span>
<span class="line"><span style="color:#B392F0;">Clustering</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node1</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl start_app</span></span>
<span class="line"><span style="color:#B392F0;">Starting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl stop_app</span></span>
<span class="line"><span style="color:#6F42C1;">Stopping</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit</span><span style="color:#24292E;"> </span><span style="color:#032F62;">application</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span>
<span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl join_cluster --ram rabbit@node1</span></span>
<span class="line"><span style="color:#6F42C1;">Clustering</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">with</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node1</span></span>
<span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl start_app</span></span>
<span class="line"><span style="color:#6F42C1;">Starting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span></code></pre></div><p>然后查看一下集群状态：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#B392F0;">Cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span>
<span class="line"><span style="color:#E1E4E8;">[{nodes,[{disc,[rabbit@node2,rabbit@node1]},{ram,[rabbit@node3]}]}, </span><span style="color:#6A737D;">#可以看到node3有一个ram的标识</span></span>
<span class="line"><span style="color:#E1E4E8;"> {running_nodes,[rabbit@node1,rabbit@node2,rabbit@node3]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {cluster_name,</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">&quot;rabbit@node1&quot;</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {alarms,[{rabbit@node1,[]},{rabbit@node2,[]},{rabbit@node3,[]}]}]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#6F42C1;">Cluster</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span>
<span class="line"><span style="color:#24292E;">[{nodes,[{disc,[rabbit@node2,rabbit@node1]},{ram,[rabbit@node3]}]}, </span><span style="color:#6A737D;">#可以看到node3有一个ram的标识</span></span>
<span class="line"><span style="color:#24292E;"> {running_nodes,[rabbit@node1,rabbit@node2,rabbit@node3]},</span></span>
<span class="line"><span style="color:#24292E;"> {cluster_name,</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;rabbit@node1&quot;</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#24292E;"> {alarms,[{rabbit@node1,[]},{rabbit@node2,[]},{rabbit@node3,[]}]}]</span></span></code></pre></div><p><strong>在 RabbitMQ 集群里，必须至少有一个磁盘节点存在</strong>。</p><h3 id="_9-更改节点属性" tabindex="-1">9，更改节点属性 <a class="header-anchor" href="#_9-更改节点属性" aria-label="Permalink to &quot;9，更改节点属性&quot;">​</a></h3><p>还能通过一些命令，更改节点的属性。</p><p>先将刚刚的 node3 改回到磁盘节点：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl stop_app</span></span>
<span class="line"><span style="color:#B392F0;">Stopping</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">application</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl change_cluster_node_type disc</span></span>
<span class="line"><span style="color:#B392F0;">Turning</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">into</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">disc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl start_app</span></span>
<span class="line"><span style="color:#B392F0;">Starting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node3 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#B392F0;">Cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node3</span></span>
<span class="line"><span style="color:#E1E4E8;">[{nodes,[{disc,[rabbit@node1,rabbit@node2,rabbit@node3]}]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {running_nodes,[rabbit@node1,rabbit@node2,rabbit@node3]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {cluster_name,</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">&quot;rabbit@node1&quot;</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {alarms,[{rabbit@node1,[]},{rabbit@node2,[]},{rabbit@node3,[]}]}]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl stop_app</span></span>
<span class="line"><span style="color:#6F42C1;">Stopping</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit</span><span style="color:#24292E;"> </span><span style="color:#032F62;">application</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span>
<span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl change_cluster_node_type disc</span></span>
<span class="line"><span style="color:#6F42C1;">Turning</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">into</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">disc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span></span>
<span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl start_app</span></span>
<span class="line"><span style="color:#6F42C1;">Starting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span>
<span class="line"><span style="color:#24292E;">[root@node3 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#6F42C1;">Cluster</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node3</span></span>
<span class="line"><span style="color:#24292E;">[{nodes,[{disc,[rabbit@node1,rabbit@node2,rabbit@node3]}]},</span></span>
<span class="line"><span style="color:#24292E;"> {running_nodes,[rabbit@node1,rabbit@node2,rabbit@node3]},</span></span>
<span class="line"><span style="color:#24292E;"> {cluster_name,</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;rabbit@node1&quot;</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#24292E;"> {alarms,[{rabbit@node1,[]},{rabbit@node2,[]},{rabbit@node3,[]}]}]</span></span></code></pre></div><p>然后再把 node2 变更为内存节点：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node2 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl stop_app</span></span>
<span class="line"><span style="color:#B392F0;">Stopping</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">application</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node2</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node2 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl change_cluster_node_type ram</span></span>
<span class="line"><span style="color:#B392F0;">Turning</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">into</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ram</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node2 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl start_app</span></span>
<span class="line"><span style="color:#B392F0;">Starting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node2</span></span>
<span class="line"><span style="color:#E1E4E8;">[root@node2 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#B392F0;">Cluster</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbit@node2</span></span>
<span class="line"><span style="color:#E1E4E8;">[{nodes,[{disc,[rabbit@node3,rabbit@node1]},{ram,[rabbit@node2]}]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {running_nodes,[rabbit@node1,rabbit@node3,rabbit@node2]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {cluster_name,</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">&quot;rabbit@node1&quot;</span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;">},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#E1E4E8;"> {alarms,[{rabbit@node1,[]},{rabbit@node3,[]},{rabbit@node2,[]}]}]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node2 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl stop_app</span></span>
<span class="line"><span style="color:#6F42C1;">Stopping</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit</span><span style="color:#24292E;"> </span><span style="color:#032F62;">application</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node2</span></span>
<span class="line"><span style="color:#24292E;">[root@node2 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl change_cluster_node_type ram</span></span>
<span class="line"><span style="color:#6F42C1;">Turning</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node2</span><span style="color:#24292E;"> </span><span style="color:#032F62;">into</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ram</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span></span>
<span class="line"><span style="color:#24292E;">[root@node2 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl start_app</span></span>
<span class="line"><span style="color:#6F42C1;">Starting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node2</span></span>
<span class="line"><span style="color:#24292E;">[root@node2 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl cluster_status</span></span>
<span class="line"><span style="color:#6F42C1;">Cluster</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbit@node2</span></span>
<span class="line"><span style="color:#24292E;">[{nodes,[{disc,[rabbit@node3,rabbit@node1]},{ram,[rabbit@node2]}]},</span></span>
<span class="line"><span style="color:#24292E;"> {running_nodes,[rabbit@node1,rabbit@node3,rabbit@node2]},</span></span>
<span class="line"><span style="color:#24292E;"> {cluster_name,</span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#032F62;">&quot;rabbit@node1&quot;</span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;">},</span></span>
<span class="line"><span style="color:#24292E;"> {partitions,[]},</span></span>
<span class="line"><span style="color:#24292E;"> {alarms,[{rabbit@node1,[]},{rabbit@node3,[]},{rabbit@node2,[]}]}]</span></span></code></pre></div><h3 id="_10-登录后台" tabindex="-1">10，登录后台 <a class="header-anchor" href="#_10-登录后台" aria-label="Permalink to &quot;10，登录后台&quot;">​</a></h3><p><img src="http://t.eryajf.net/imgs/2021/09/d96251dabffa8e2e.jpg" alt="img"></p><p>上面配置 RabbitMQ 默认集群模式，但并不保证队列的高可用性，尽管交换机、绑定这些可以复制到集群里的任何一个节点，但是队列内容不会复制，虽然该模式解决一部分节点压力，但队列节点宕机直接导致该队列无法使用，只能等待重启，所以要想在队列节点宕机或故障也能正常使用，就要复制队列内容到集群里的每个节点，也就引入了镜像队列的概念。</p><h3 id="_11-镜像队列" tabindex="-1">11，镜像队列 <a class="header-anchor" href="#_11-镜像队列" aria-label="Permalink to &quot;11，镜像队列&quot;">​</a></h3><h4 id="_1-概念" tabindex="-1">1，概念 <a class="header-anchor" href="#_1-概念" aria-label="Permalink to &quot;1，概念&quot;">​</a></h4><p>镜像队列可以同步 queue 和 message，当主 queue 挂掉，从 queue 中会有一个变为主 queue 来接替工作。</p><p>镜像队列是基于普通的集群模式的, 所以你还是得先配置普通集群, 然后才能设置镜像队列。</p><p>镜像队列设置后，会分一个主节点和多个从节点，如果主节点宕机，从节点会有一个选为主节点，原先的主节点起来后会变为从节点。</p><p>queue 和 message 虽然会存在所有镜像队列中，但客户端读取时不论物理面连接的主节点还是从节点，都是从主节点读取数据，然后主节点再将 queue 和 message 的状态同步给从节点，因此多个客户端连接不同的镜像队列不会产生同一 message 被多次接受的情况。</p><h4 id="_2-配置" tabindex="-1">2，配置 <a class="header-anchor" href="#_2-配置" aria-label="Permalink to &quot;2，配置&quot;">​</a></h4><p>在普通集群的中任意节点启用策略，策略会自动同步到集群节点</p><ul><li>命令格式</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">set_policy</span><span style="color:#E1E4E8;"> [-p </span><span style="color:#9ECBFF;">vhostpath]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{name}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{pattern}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{definition}</span><span style="color:#E1E4E8;"> [priority]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">set_policy</span><span style="color:#24292E;"> [-p </span><span style="color:#032F62;">vhostpath]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{name}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{pattern}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{definition}</span><span style="color:#24292E;"> [priority]</span></span></code></pre></div><ul><li>在任意一个节点上执行</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@node1 </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]$rabbitmqctl set_policy -p / ha-allqueue </span><span style="color:#9ECBFF;">&quot;^isj&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{&quot;ha-mode&quot;:&quot;all&quot;}&#39;</span></span>
<span class="line"><span style="color:#B392F0;">Setting</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">policy</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;ha-allqueue&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">for</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pattern</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;^isj&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;{</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">ha-mode</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">all</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">}&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">with</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">priority</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;0&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@node1 </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]$rabbitmqctl set_policy -p / ha-allqueue </span><span style="color:#032F62;">&quot;^isj&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{&quot;ha-mode&quot;:&quot;all&quot;}&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">Setting</span><span style="color:#24292E;"> </span><span style="color:#032F62;">policy</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;ha-allqueue&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">for</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pattern</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;^isj&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;{</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">ha-mode</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">all</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">}&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">with</span><span style="color:#24292E;"> </span><span style="color:#032F62;">priority</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;0&quot;</span></span></code></pre></div><p><code>注意</code>：<code>&quot;^isj&quot;</code> 这个规则要根据自己实际情况修改，这个是指同步”isj” 开头的队列名称，配置时使用的应用于所有队列，所以表达式为”^”。</p><h3 id="_12-集群重启" tabindex="-1">12，集群重启 <a class="header-anchor" href="#_12-集群重启" aria-label="Permalink to &quot;12，集群重启&quot;">​</a></h3><p>集群重启时，最后一个挂掉的节点应该第一个重启，如果因特殊原因（比如同时断电），而不知道哪个节点最后一个挂掉。可用以下方法重启：</p><p>先在一个节点上执行：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmqctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">force_boot</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">service</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmq-server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmqctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">force_boot</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">service</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmq-server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span></span></code></pre></div><p>在其他节点上执行</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">service</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmq-server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">service</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmq-server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span></span></code></pre></div><p>查看 cluster 状态是否正常（要在所有节点上查询）。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmqctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cluster_status</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmqctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cluster_status</span></span></code></pre></div><h3 id="_13-前端代理" tabindex="-1">13，前端代理 <a class="header-anchor" href="#_13-前端代理" aria-label="Permalink to &quot;13，前端代理&quot;">​</a></h3><p>网上有不少使用 haproxy 做前端代理的，这里使用 nginx 作为前端代理，配置如下：</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">upstream</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rabbitmq</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> 192.168.106.7:5672 </span><span style="color:#FFAB70;">max_fails</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> fail_timeout=3s </span><span style="color:#FFAB70;">weight</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">##最大失败2次 超时3秒</span></span>
<span class="line"><span style="color:#E1E4E8;">    server 192.168.106.8:5672 </span><span style="color:#FFAB70;">max_fails</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> fail_timeout=3s </span><span style="color:#FFAB70;">weight</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    server 192.168.106.9:5672 </span><span style="color:#FFAB70;">max_fails</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> fail_timeout=3s </span><span style="color:#FFAB70;">weight</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">server {</span></span>
<span class="line"><span style="color:#E1E4E8;">    listen </span><span style="color:#79B8FF;">5678</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">192.168.106.16;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_connect_timeout </span><span style="color:#E1E4E8;">1s;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_timeout </span><span style="color:#E1E4E8;">3s;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">rabbitmq;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">upstream</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rabbitmq</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">server</span><span style="color:#24292E;"> 192.168.106.7:5672 </span><span style="color:#E36209;">max_fails</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> fail_timeout=3s </span><span style="color:#E36209;">weight</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">##最大失败2次 超时3秒</span></span>
<span class="line"><span style="color:#24292E;">    server 192.168.106.8:5672 </span><span style="color:#E36209;">max_fails</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> fail_timeout=3s </span><span style="color:#E36209;">weight</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    server 192.168.106.9:5672 </span><span style="color:#E36209;">max_fails</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> fail_timeout=3s </span><span style="color:#E36209;">weight</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">server {</span></span>
<span class="line"><span style="color:#24292E;">    listen </span><span style="color:#005CC5;">5678</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;"> server_name </span><span style="color:#24292E;">192.168.106.16;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;"> proxy_connect_timeout </span><span style="color:#24292E;">1s;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;"> proxy_timeout </span><span style="color:#24292E;">3s;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;"> proxy_pass </span><span style="color:#24292E;">rabbitmq;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div><p>然后连接的时候直接使用 nginx 地址即可，如果还有更大的量，或者更加严苛的需求，那么可以再添加 keepalived 实现 nginx 的高可用。</p><h2 id="_4-参考" tabindex="-1">4，参考 <a class="header-anchor" href="#_4-参考" aria-label="Permalink to &quot;4，参考&quot;">​</a></h2><ul><li><a href="http://t.cn/Ai0KCNbQ" target="_blank" rel="noreferrer">http://t.cn/Ai0KCNbQ</a></li><li><a href="http://t.cn/Ai0KphxV" target="_blank" rel="noreferrer">http://t.cn/Ai0KphxV</a></li><li><a href="http://t.cn/Ai0KO5d8" target="_blank" rel="noreferrer">http://t.cn/Ai0KO5d8</a></li></ul>`,125),e=[p];function t(r,c,E,y,i,b){return a(),n("div",null,e)}const u=s(o,[["render",t]]);export{F as __pageData,u as default};
