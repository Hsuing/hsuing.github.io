import{_ as s,o as a,c as n,R as e}from"./chunks/framework.zUbWieqp.js";const t="/assets/nginxvts.r8d9wIlg.png",m=JSON.parse('{"title":"nginx-module-vts监控各虚拟主机的流量","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/web/nginx/modules/11-vts.md","filePath":"guide/Linux/web/nginx/modules/11-vts.md","lastUpdated":1701684699000}'),l={name:"guide/Linux/web/nginx/modules/11-vts.md"},o=e(`<h1 id="nginx-module-vts监控各虚拟主机的流量" tabindex="-1">nginx-module-vts监控各虚拟主机的流量 <a class="header-anchor" href="#nginx-module-vts监控各虚拟主机的流量" aria-label="Permalink to &quot;nginx-module-vts监控各虚拟主机的流量&quot;">​</a></h1><h1 id="一、前言" tabindex="-1">一、前言 <a class="header-anchor" href="#一、前言" aria-label="Permalink to &quot;一、前言&quot;">​</a></h1><p>由于所有业务只有一个公网IP入口，无法统计到每个业务的流量带宽，好在nginx上通过域名进行业务区分，可以借助nginx-module-vts模块来实现需求。</p><p>本文将主要用到以下几个模块和工具： nginx-module-vts: Nginx virtual host traffic status module，nginx的监控模块，能够提供json、html、prometheus格式的数据产出。</p><p>nginx-vts-exporter: Simple server that scrapes Nginx vts stats and exports them via HTTP for Prometheus consumption。主要用于收集nginx的监控数据，并给Prometheus提供监控接口，默认端口号9913。</p><p>Prometheus: 监控nginx-vts-exporter提供的nginx数据，并存储在时序数据库中，可以使用PromQL对时序数据进行查询和聚合</p><h1 id="二、安装nginx-module-vts" tabindex="-1">二、安装nginx-module-vts <a class="header-anchor" href="#二、安装nginx-module-vts" aria-label="Permalink to &quot;二、安装nginx-module-vts&quot;">​</a></h1><h2 id="_2-1-下载" tabindex="-1">2.1 下载 <a class="header-anchor" href="#_2-1-下载" aria-label="Permalink to &quot;2.1 下载&quot;">​</a></h2><ul><li>并编译ngx-module-vts模块</li></ul><p>wget <a href="https://github.com/vozlt/nginx-module-vts/archive/v0.1.18.tar.gz" target="_blank" rel="noreferrer">https://github.com/vozlt/nginx-module-vts/archive/v0.1.18.tar.gz</a></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">shell&gt; ./configure --add-module=/usr/local/src/nginx-module-vts</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">shell&gt; ./configure --add-module=/usr/local/src/nginx-module-vts</span></span></code></pre></div><h2 id="_2-2编辑nginx-conf配置文件" tabindex="-1">2.2编辑nginx.conf配置文件 <a class="header-anchor" href="#_2-2编辑nginx-conf配置文件" aria-label="Permalink to &quot;2.2编辑nginx.conf配置文件&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"># 在 http 和 server 块中加入如下信息</span></span>
<span class="line"><span style="color:#e1e4e8;">http {</span></span>
<span class="line"><span style="color:#e1e4e8;">    vhost_traffic_status_zone;</span></span>
<span class="line"><span style="color:#e1e4e8;">    vhost_traffic_status_filter_by_host on;   #开启此功能，会根据不同的server_name进行流量的统计，否则默认会把流量全部计算到第一个上</span></span>
<span class="line"><span style="color:#e1e4e8;">    ...</span></span>
<span class="line"><span style="color:#e1e4e8;">    server {</span></span>
<span class="line"><span style="color:#e1e4e8;">        listen 1212;</span></span>
<span class="line"><span style="color:#e1e4e8;">        # vhost_traffic_status off; 关闭</span></span>
<span class="line"><span style="color:#e1e4e8;">        location /status {</span></span>
<span class="line"><span style="color:#e1e4e8;">            vhost_traffic_status_display;</span></span>
<span class="line"><span style="color:#e1e4e8;">            vhost_traffic_status_display_format html;</span></span>
<span class="line"><span style="color:#e1e4e8;">        }</span></span>
<span class="line"><span style="color:#e1e4e8;">    }</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># 在 http 和 server 块中加入如下信息</span></span>
<span class="line"><span style="color:#24292e;">http {</span></span>
<span class="line"><span style="color:#24292e;">    vhost_traffic_status_zone;</span></span>
<span class="line"><span style="color:#24292e;">    vhost_traffic_status_filter_by_host on;   #开启此功能，会根据不同的server_name进行流量的统计，否则默认会把流量全部计算到第一个上</span></span>
<span class="line"><span style="color:#24292e;">    ...</span></span>
<span class="line"><span style="color:#24292e;">    server {</span></span>
<span class="line"><span style="color:#24292e;">        listen 1212;</span></span>
<span class="line"><span style="color:#24292e;">        # vhost_traffic_status off; 关闭</span></span>
<span class="line"><span style="color:#24292e;">        location /status {</span></span>
<span class="line"><span style="color:#24292e;">            vhost_traffic_status_display;</span></span>
<span class="line"><span style="color:#24292e;">            vhost_traffic_status_display_format html;</span></span>
<span class="line"><span style="color:#24292e;">        }</span></span>
<span class="line"><span style="color:#24292e;">    }</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><ul><li>效果</li></ul><p><img src="`+t+'" alt=""></p><p>访问 <a href="http://127.0.0.1:1212/status/format/prometheus" target="_blank" rel="noreferrer">http://127.0.0.1:1212/status/format/prometheus</a> 可直接获取prometheus格式的监控数据。</p><p>访问 <a href="http://127.0.0.1:1212/status/format/json" target="_blank" rel="noreferrer">http://127.0.0.1:1212/status/format/json</a> 可直接获取json格式的监控数据</p>',17),p=[o];function r(i,c,d,h,u,_){return a(),n("div",null,p)}const v=s(l,[["render",r]]);export{m as __pageData,v as default};
