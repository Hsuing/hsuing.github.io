import{_ as e,o as i,c as a,R as t}from"./chunks/framework.zUbWieqp.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/权限管理/3-鉴权.md","filePath":"guide/container/k8s/权限管理/3-鉴权.md","lastUpdated":1727076307000}'),l={name:"guide/container/k8s/权限管理/3-鉴权.md"},o=t('<h3 id="_1-鉴权-authentication" tabindex="-1">1. 鉴权（Authentication） <a class="header-anchor" href="#_1-鉴权-authentication" aria-label="Permalink to &quot;1. 鉴权（Authentication）&quot;">​</a></h3><ul><li>客户端要想访问K8s集群API Server，一般需要证书、Token或者用户名+密码；如果Pod访问，需要ServiceAccount</li><li>三种客户端身份认证： <ul><li>HTTPS 证书认证：基于CA证书签名的数字证书认证</li><li>HTTP Token认证：通过一个Token来识别用户</li><li>HTTP Base认证：用户名+密码的方式认证</li></ul></li></ul><h3 id="_2-授权-authorization" tabindex="-1">2. 授权（Authorization） <a class="header-anchor" href="#_2-授权-authorization" aria-label="Permalink to &quot;2. 授权（Authorization）&quot;">​</a></h3><ul><li><p>K8s目前支持多种授权策略，目前企业主要使用RBAC完成授权工作。</p></li><li><p>RBAC根据API请求属性，决定允许还是拒绝。</p></li><li><p>比较常见的授权维度：</p><ul><li>user：用户名</li><li>group：用户分组</li><li>资源，例如pod、deployment</li><li>资源操作方法：get，list，create，update，patch，watch，delete</li><li>命名空间</li><li>API组</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#通过kubectl api-resources 查看</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#通过kubectl api-resources 查看</span></span></code></pre></div></li></ul><h3 id="_3-准入控制-admission-control" tabindex="-1">3. 准入控制（Admission Control） <a class="header-anchor" href="#_3-准入控制-admission-control" aria-label="Permalink to &quot;3. 准入控制（Admission Control）&quot;">​</a></h3><ul><li>AdminssionControl实际上是一个准入控制器插件列表，发送到APIServer的请求都需要经过这个列表中的每个准入控制器插件的检查，检查不通过，则拒绝请求。</li></ul>',6),s=[o];function n(r,c,d,p,u,h){return i(),a("div",null,s)}const A=e(l,[["render",n]]);export{m as __pageData,A as default};
