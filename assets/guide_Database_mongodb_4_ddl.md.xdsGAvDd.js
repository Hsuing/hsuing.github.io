import{_ as s,o as a,c as n,R as l}from"./chunks/framework.zUbWieqp.js";const q=JSON.parse('{"title":"远程连接db","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Database/mongodb/4_ddl.md","filePath":"guide/Database/mongodb/4_ddl.md","lastUpdated":1704853811000}'),o={name:"guide/Database/mongodb/4_ddl.md"},p=l(`<h1 id="远程连接db" tabindex="-1">远程连接db <a class="header-anchor" href="#远程连接db" aria-label="Permalink to &quot;远程连接db&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mongo 192.168.3.101:27017/&lt;database&gt; -u &lt;dbuser&gt; -p &lt;dbpassword&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">或者</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">mongo --port 27017 --host 192.168.3.101 &lt;database&gt; -u &lt;dbuser&gt; -p &lt;dbpassword&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mongo 192.168.3.101:27017/&lt;database&gt; -u &lt;dbuser&gt; -p &lt;dbpassword&gt;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">或者</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">mongo --port 27017 --host 192.168.3.101 &lt;database&gt; -u &lt;dbuser&gt; -p &lt;dbpassword&gt;</span></span></code></pre></div><h2 id="uri-连接规则" tabindex="-1">uri 连接规则 <a class="header-anchor" href="#uri-连接规则" aria-label="Permalink to &quot;uri 连接规则&quot;">​</a></h2><p><code>[]</code>大括号中的字段表示非必填项</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mongodb://[username:password@]host1[:port1][,...hostN[:portN]][/[defaultauthdb][?options]]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mongodb://[username:password@]host1[:port1][,...hostN[:portN]][/[defaultauthdb][?options]]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">用户名为testUser，密码为testPwd，默认连接的数据库是testDB，连接的host和端口共三个</span></span>
<span class="line"><span style="color:#e1e4e8;">mongodb://testUser:testPwd@192.168.1.101:27017,192.168.1.102:27017,192.168.1.103:27017/testDB</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">用户名为testUser，密码为testPwd，默认连接的数据库是testDB，连接的host和端口共三个</span></span>
<span class="line"><span style="color:#24292e;">mongodb://testUser:testPwd@192.168.1.101:27017,192.168.1.102:27017,192.168.1.103:27017/testDB</span></span></code></pre></div><ul><li>单体数据库</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mongodb://mongodb0.example.com:27017</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mongodb://mongodb0.example.com:27017</span></span></code></pre></div><ul><li>副本集数据库</li><li>添加<code>?replicaSet=myRepl</code>可选项</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mongodb://mongodb0.example.com:27017,mongodb1.example.com:27017,mongodb2.example.com:27017/?replicaSet=myRepl</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mongodb://mongodb0.example.com:27017,mongodb1.example.com:27017,mongodb2.example.com:27017/?replicaSet=myRepl</span></span></code></pre></div><ul><li>单实例连接</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mongodb://leihuo:fa2e5474db854dd@172.16.195.193:47017/rank?authSource=rank&amp;authMechanism=SCRAM-SHA-1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mongodb://leihuo:fa2e5474db854dd@172.16.195.193:47017/rank?authSource=rank&amp;authMechanism=SCRAM-SHA-1</span></span></code></pre></div><h2 id="查看表" tabindex="-1">查看表 <a class="header-anchor" href="#查看表" aria-label="Permalink to &quot;查看表&quot;">​</a></h2><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> show dbs;</span></span>
<span class="line"><span style="color:#F97583;">admin</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.000GB</span></span>
<span class="line"><span style="color:#E1E4E8;">config  </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.000GB</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.000GB</span></span>
<span class="line"><span style="color:#E1E4E8;">test    </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.000GB</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> test</span></span>
<span class="line"><span style="color:#E1E4E8;">switched </span><span style="color:#F97583;">to</span><span style="color:#E1E4E8;"> db test</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">#查看有哪些表</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> show collections</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">tables</span></span>
<span class="line"><span style="color:#E1E4E8;">userdetails</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">userdetails</span><span style="color:#E1E4E8;">.find()</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b711f67978d27bed034272&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;F_Name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;fist name&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;L_NAME&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;last name&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;ID_NO&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;12345&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;AGE&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;49&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;TEL&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;+254654671&quot;</span><span style="color:#E1E4E8;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> show dbs;</span></span>
<span class="line"><span style="color:#D73A49;">admin</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.000GB</span></span>
<span class="line"><span style="color:#24292E;">config  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.000GB</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.000GB</span></span>
<span class="line"><span style="color:#24292E;">test    </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.000GB</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">use</span><span style="color:#24292E;"> test</span></span>
<span class="line"><span style="color:#24292E;">switched </span><span style="color:#D73A49;">to</span><span style="color:#24292E;"> db test</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">#查看有哪些表</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> show collections</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">tables</span></span>
<span class="line"><span style="color:#24292E;">userdetails</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">userdetails</span><span style="color:#24292E;">.find()</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b711f67978d27bed034272&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;F_Name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;fist name&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;L_NAME&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;last name&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;ID_NO&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;12345&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;AGE&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;49&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;TEL&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;+254654671&quot;</span><span style="color:#24292E;"> }</span></span></code></pre></div><h2 id="删除表内容" tabindex="-1">删除表内容 <a class="header-anchor" href="#删除表内容" aria-label="Permalink to &quot;删除表内容&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">在MongoDB中删除数据，可通过以下三种方式：</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">db.collection.remove()</span></span>
<span class="line"><span style="color:#e1e4e8;">删除单个文档或满足条件的所有文档</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">db.collection.deleteMany()</span></span>
<span class="line"><span style="color:#e1e4e8;">删除满足条件的所有文档。</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">db.collection.bulkWrite()</span></span>
<span class="line"><span style="color:#e1e4e8;">批量操作接口，可执行批量插入、更新、删除操作</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">标注：</span></span>
<span class="line"><span style="color:#e1e4e8;">	deleteMany语法简洁</span></span>
<span class="line"><span style="color:#e1e4e8;">	deleteMany，bulkWrite 效率差不多</span></span>
<span class="line"><span style="color:#e1e4e8;">	http://m.zyiz.net/tech/detail-246718.html</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">在MongoDB中删除数据，可通过以下三种方式：</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">db.collection.remove()</span></span>
<span class="line"><span style="color:#24292e;">删除单个文档或满足条件的所有文档</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">db.collection.deleteMany()</span></span>
<span class="line"><span style="color:#24292e;">删除满足条件的所有文档。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">db.collection.bulkWrite()</span></span>
<span class="line"><span style="color:#24292e;">批量操作接口，可执行批量插入、更新、删除操作</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">标注：</span></span>
<span class="line"><span style="color:#24292e;">	deleteMany语法简洁</span></span>
<span class="line"><span style="color:#24292e;">	deleteMany，bulkWrite 效率差不多</span></span>
<span class="line"><span style="color:#24292e;">	http://m.zyiz.net/tech/detail-246718.html</span></span></code></pre></div><h3 id="deleteone" tabindex="-1">deleteOne <a class="header-anchor" href="#deleteone" aria-label="Permalink to &quot;deleteOne&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">语法：</span></span>
<span class="line"><span style="color:#e1e4e8;">	db.collection.deleteOne()</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#传入要删除的那个字段查询条件，删除一条</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.user1.find()</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b9864202c77af4a8c1d3ae&quot;), &quot;id&quot; : 1, &quot;name&quot; : &quot;jack&quot;, &quot;age&quot; : 73 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b9867902c77af4a8c1d3af&quot;), &quot;id&quot; : 2, &quot;name&quot; : &quot;mike&quot;, &quot;age&quot; : 84 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b0&quot;), &quot;id&quot; : 3, &quot;name&quot; : &quot;peter&quot;, &quot;age&quot; : 14 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b1&quot;), &quot;id&quot; : 4, &quot;name&quot; : &quot;tom&quot;, &quot;age&quot; : 13 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b2&quot;), &quot;id&quot; : 5, &quot;name&quot; : &quot;ben&quot;, &quot;age&quot; : 24 }</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.user1.deleteOne({name:&quot;ben&quot;})</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;acknowledged&quot; : true, &quot;deletedCount&quot; : 1 }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">语法：</span></span>
<span class="line"><span style="color:#24292e;">	db.collection.deleteOne()</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#传入要删除的那个字段查询条件，删除一条</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&gt; db.user1.find()</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b9864202c77af4a8c1d3ae&quot;), &quot;id&quot; : 1, &quot;name&quot; : &quot;jack&quot;, &quot;age&quot; : 73 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b9867902c77af4a8c1d3af&quot;), &quot;id&quot; : 2, &quot;name&quot; : &quot;mike&quot;, &quot;age&quot; : 84 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b0&quot;), &quot;id&quot; : 3, &quot;name&quot; : &quot;peter&quot;, &quot;age&quot; : 14 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b1&quot;), &quot;id&quot; : 4, &quot;name&quot; : &quot;tom&quot;, &quot;age&quot; : 13 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b2&quot;), &quot;id&quot; : 5, &quot;name&quot; : &quot;ben&quot;, &quot;age&quot; : 24 }</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&gt; db.user1.deleteOne({name:&quot;ben&quot;})</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;acknowledged&quot; : true, &quot;deletedCount&quot; : 1 }</span></span></code></pre></div><h3 id="deletemany" tabindex="-1">deleteMany <a class="header-anchor" href="#deletemany" aria-label="Permalink to &quot;deleteMany&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.find()</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b9864202c77af4a8c1d3ae&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;jack&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">73</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b9867902c77af4a8c1d3af&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;mike&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b986f602c77af4a8c1d3b0&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;peter&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b986f602c77af4a8c1d3b1&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;tom&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b9893702c77af4a8c1d3b3&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;mike&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.deleteMany({ age:</span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;acknowledged&quot;</span><span style="color:#E1E4E8;"> : true, </span><span style="color:#9ECBFF;">&quot;deletedCount&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.find()</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b9864202c77af4a8c1d3ae&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;jack&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">73</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b9867902c77af4a8c1d3af&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;mike&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b986f602c77af4a8c1d3b0&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;peter&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">14</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b986f602c77af4a8c1d3b1&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;tom&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">13</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b9893702c77af4a8c1d3b3&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;mike&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.deleteMany({ age:</span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> })</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;acknowledged&quot;</span><span style="color:#24292E;"> : true, </span><span style="color:#032F62;">&quot;deletedCount&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> }</span></span></code></pre></div><h2 id="清空表" tabindex="-1">清空表 <a class="header-anchor" href="#清空表" aria-label="Permalink to &quot;清空表&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">drop() 和 remove一样 可以清空整张表</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.user1.find()</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b9864202c77af4a8c1d3ae&quot;), &quot;id&quot; : 1, &quot;name&quot; : &quot;jack&quot;, &quot;age&quot; : 73 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b0&quot;), &quot;id&quot; : 3, &quot;name&quot; : &quot;peter&quot;, &quot;age&quot; : 14 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b1&quot;), &quot;id&quot; : 4, &quot;name&quot; : &quot;tom&quot;, &quot;age&quot; : 13 }</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#清空表</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.user1.remove({})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">drop() 和 remove一样 可以清空整张表</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&gt; db.user1.find()</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b9864202c77af4a8c1d3ae&quot;), &quot;id&quot; : 1, &quot;name&quot; : &quot;jack&quot;, &quot;age&quot; : 73 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b0&quot;), &quot;id&quot; : 3, &quot;name&quot; : &quot;peter&quot;, &quot;age&quot; : 14 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b1&quot;), &quot;id&quot; : 4, &quot;name&quot; : &quot;tom&quot;, &quot;age&quot; : 13 }</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#清空表</span></span>
<span class="line"><span style="color:#24292e;">&gt; db.user1.remove({})</span></span></code></pre></div><h2 id="删除表" tabindex="-1">删除表 <a class="header-anchor" href="#删除表" aria-label="Permalink to &quot;删除表&quot;">​</a></h2><p>语法：db.集合名.remove(条件[,是否删除一条])</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&gt; use test;</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.user1.drop()</span></span>
<span class="line"><span style="color:#e1e4e8;">true</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#条件删除</span></span>
<span class="line"><span style="color:#e1e4e8;">当存在多条符合条件的行时，只删除一条</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.remove({username:&quot;zs30&quot;},true)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">存在多条时，全部删除</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.remove({username:&quot;zs30&quot;},true)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt; use test;</span></span>
<span class="line"><span style="color:#24292e;">&gt; db.user1.drop()</span></span>
<span class="line"><span style="color:#24292e;">true</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#条件删除</span></span>
<span class="line"><span style="color:#24292e;">当存在多条符合条件的行时，只删除一条</span></span>
<span class="line"><span style="color:#24292e;">db.c3.remove({username:&quot;zs30&quot;},true)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">存在多条时，全部删除</span></span>
<span class="line"><span style="color:#24292e;">db.c3.remove({username:&quot;zs30&quot;},true)</span></span></code></pre></div><h2 id="字段重命名" tabindex="-1">字段重命名 <a class="header-anchor" href="#字段重命名" aria-label="Permalink to &quot;字段重命名&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{$rename: { &lt;field1&gt;: &lt;newName1&gt;, &lt;field2&gt;: &lt;newName2&gt;, ... } }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{$rename: { &lt;field1&gt;: &lt;newName1&gt;, &lt;field2&gt;: &lt;newName2&gt;, ... } }</span></span></code></pre></div><p>将<code>_id</code>为<code>1</code>的记录中的<code>account_id</code>字段修改为<code>user_id</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.getCollection(&#39;user&#39;).update({_id:1},{$rename:{&quot;account_id&quot;:&quot;user_id&quot;}})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.getCollection(&#39;user&#39;).update({_id:1},{$rename:{&quot;account_id&quot;:&quot;user_id&quot;}})</span></span></code></pre></div><ul><li>批量修改</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.getCollection(&#39;user&#39;).updateMany({},{$rename:{&quot;account_id&quot;:&quot;user_id&quot;}})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.getCollection(&#39;user&#39;).updateMany({},{$rename:{&quot;account_id&quot;:&quot;user_id&quot;}})</span></span></code></pre></div><h2 id="新建表" tabindex="-1">新建表 <a class="header-anchor" href="#新建表" aria-label="Permalink to &quot;新建表&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#增删改查操作前都要先切换到需要操作的数据库</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">语法：</span></span>
<span class="line"><span style="color:#e1e4e8;">	db.集合名(Collection).操作(参数)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; use test;</span></span>
<span class="line"><span style="color:#e1e4e8;">switched to db test</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.user1.insert( { id:1,name:&quot;jack&quot;,age:73 } )</span></span>
<span class="line"><span style="color:#e1e4e8;">WriteResult({ &quot;nInserted&quot; : 1 })</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#或者insertOne，官方推荐方式，效率高</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.user1.insertOne( { id:2,name:&quot;mike&quot;,age:84 } )</span></span>
<span class="line"><span style="color:#e1e4e8;">{</span></span>
<span class="line"><span style="color:#e1e4e8;">	&quot;acknowledged&quot; : true,</span></span>
<span class="line"><span style="color:#e1e4e8;">	&quot;insertedId&quot; : ObjectId(&quot;61b9867902c77af4a8c1d3af&quot;)</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#插入多条数据，insertMany</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.user1.insertMany([{ id:3,name:&quot;peter&quot;,age:14 },{ id:4,name:&quot;tom&quot;,age:13 },{ id:5,name:&quot;ben&quot;,age:24 }])</span></span>
<span class="line"><span style="color:#e1e4e8;">{</span></span>
<span class="line"><span style="color:#e1e4e8;">	&quot;acknowledged&quot; : true,</span></span>
<span class="line"><span style="color:#e1e4e8;">	&quot;insertedIds&quot; : [</span></span>
<span class="line"><span style="color:#e1e4e8;">		ObjectId(&quot;61b986f602c77af4a8c1d3b0&quot;),</span></span>
<span class="line"><span style="color:#e1e4e8;">		ObjectId(&quot;61b986f602c77af4a8c1d3b1&quot;),</span></span>
<span class="line"><span style="color:#e1e4e8;">		ObjectId(&quot;61b986f602c77af4a8c1d3b2&quot;)</span></span>
<span class="line"><span style="color:#e1e4e8;">	]</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#增删改查操作前都要先切换到需要操作的数据库</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">语法：</span></span>
<span class="line"><span style="color:#24292e;">	db.集合名(Collection).操作(参数)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&gt; use test;</span></span>
<span class="line"><span style="color:#24292e;">switched to db test</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&gt; db.user1.insert( { id:1,name:&quot;jack&quot;,age:73 } )</span></span>
<span class="line"><span style="color:#24292e;">WriteResult({ &quot;nInserted&quot; : 1 })</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#或者insertOne，官方推荐方式，效率高</span></span>
<span class="line"><span style="color:#24292e;">&gt; db.user1.insertOne( { id:2,name:&quot;mike&quot;,age:84 } )</span></span>
<span class="line"><span style="color:#24292e;">{</span></span>
<span class="line"><span style="color:#24292e;">	&quot;acknowledged&quot; : true,</span></span>
<span class="line"><span style="color:#24292e;">	&quot;insertedId&quot; : ObjectId(&quot;61b9867902c77af4a8c1d3af&quot;)</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#插入多条数据，insertMany</span></span>
<span class="line"><span style="color:#24292e;">&gt; db.user1.insertMany([{ id:3,name:&quot;peter&quot;,age:14 },{ id:4,name:&quot;tom&quot;,age:13 },{ id:5,name:&quot;ben&quot;,age:24 }])</span></span>
<span class="line"><span style="color:#24292e;">{</span></span>
<span class="line"><span style="color:#24292e;">	&quot;acknowledged&quot; : true,</span></span>
<span class="line"><span style="color:#24292e;">	&quot;insertedIds&quot; : [</span></span>
<span class="line"><span style="color:#24292e;">		ObjectId(&quot;61b986f602c77af4a8c1d3b0&quot;),</span></span>
<span class="line"><span style="color:#24292e;">		ObjectId(&quot;61b986f602c77af4a8c1d3b1&quot;),</span></span>
<span class="line"><span style="color:#24292e;">		ObjectId(&quot;61b986f602c77af4a8c1d3b2&quot;)</span></span>
<span class="line"><span style="color:#24292e;">	]</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><h2 id="查询" tabindex="-1">查询 <a class="header-anchor" href="#查询" aria-label="Permalink to &quot;查询&quot;">​</a></h2><p>语法： db.集合名.find(条件，[查询的列])</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.collection.find(&lt;query&gt;, [projection])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.collection.find(&lt;query&gt;, [projection])</span></span></code></pre></div><table><thead><tr><th><strong>Parameter</strong></th><th><strong>Type</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>query</td><td>document</td><td>可选。使用查询运算符指定选择筛选器。若要返回集合中的所有文档，请省略此参数或传递空文档 ({})</td></tr><tr><td>projection</td><td>document</td><td>可选。指定要在与查询筛选器匹配的文档中返回的字段（投影）。若要返回匹配文档中的所有字段，</td></tr></tbody></table><p>格式化：db.集合名.find().pretty()</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">条件：</span></span>
<span class="line"><span style="color:#e1e4e8;">	查询所有数据  				{}或者不写</span></span>
<span class="line"><span style="color:#e1e4e8;">	查询age=6的数据 			 {age:6}</span></span>
<span class="line"><span style="color:#e1e4e8;">	查询age=6且性别为男   {age:6,sex:&#39;男&#39;}</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">查询的列</span></span>
<span class="line"><span style="color:#e1e4e8;">	不写 - 查询全部的列</span></span>
<span class="line"><span style="color:#e1e4e8;">	{age:1} 只显示age列，可以显示多个想要的列{user:1,age:1.......} </span></span>
<span class="line"><span style="color:#e1e4e8;">	{age:0} 除了age列外都显示 可以不显示多个想要的列{user:0,age:0}</span></span>
<span class="line"><span style="color:#e1e4e8;">	无论怎么写系统自定义_id都会在</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#升级：</span></span>
<span class="line"><span style="color:#e1e4e8;">db.集合名.find(键：值)  注：值不直接写</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">							{运算符：值}</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">db.集合名.find({</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">	键：{运算符：值}</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">})</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">例如：</span></span>
<span class="line"><span style="color:#e1e4e8;">年龄小于5的</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c1.find({age:{$lt:5}})</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">年龄等于3、4、5的</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c1.find({age:{$in:[3,4,5]}})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">条件：</span></span>
<span class="line"><span style="color:#24292e;">	查询所有数据  				{}或者不写</span></span>
<span class="line"><span style="color:#24292e;">	查询age=6的数据 			 {age:6}</span></span>
<span class="line"><span style="color:#24292e;">	查询age=6且性别为男   {age:6,sex:&#39;男&#39;}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">查询的列</span></span>
<span class="line"><span style="color:#24292e;">	不写 - 查询全部的列</span></span>
<span class="line"><span style="color:#24292e;">	{age:1} 只显示age列，可以显示多个想要的列{user:1,age:1.......} </span></span>
<span class="line"><span style="color:#24292e;">	{age:0} 除了age列外都显示 可以不显示多个想要的列{user:0,age:0}</span></span>
<span class="line"><span style="color:#24292e;">	无论怎么写系统自定义_id都会在</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#升级：</span></span>
<span class="line"><span style="color:#24292e;">db.集合名.find(键：值)  注：值不直接写</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">							{运算符：值}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">db.集合名.find({</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">	键：{运算符：值}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">})</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">例如：</span></span>
<span class="line"><span style="color:#24292e;">年龄小于5的</span></span>
<span class="line"><span style="color:#24292e;">db.c1.find({age:{$lt:5}})</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">年龄等于3、4、5的</span></span>
<span class="line"><span style="color:#24292e;">db.c1.find({age:{$in:[3,4,5]}})</span></span></code></pre></div><h4 id="查询所有" tabindex="-1">查询所有 <a class="header-anchor" href="#查询所有" aria-label="Permalink to &quot;查询所有&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.comment.find() </span></span>
<span class="line"><span style="color:#e1e4e8;">或</span></span>
<span class="line"><span style="color:#e1e4e8;">db.comment.find({})</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#查询数据(find findOne)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.user1.find()</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b9864202c77af4a8c1d3ae&quot;), &quot;id&quot; : 1, &quot;name&quot; : &quot;jack&quot;, &quot;age&quot; : 73 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b9867902c77af4a8c1d3af&quot;), &quot;id&quot; : 2, &quot;name&quot; : &quot;mike&quot;, &quot;age&quot; : 84 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b0&quot;), &quot;id&quot; : 3, &quot;name&quot; : &quot;peter&quot;, &quot;age&quot; : 14 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b1&quot;), &quot;id&quot; : 4, &quot;name&quot; : &quot;tom&quot;, &quot;age&quot; : 13 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b2&quot;), &quot;id&quot; : 5, &quot;name&quot; : &quot;ben&quot;, &quot;age&quot; : 24 }</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#无条件查找一条数据,默认当前Collection中的第一条数据，只返回一条数据</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.user1.findOne()</span></span>
<span class="line"><span style="color:#e1e4e8;">{</span></span>
<span class="line"><span style="color:#e1e4e8;">	&quot;_id&quot; : ObjectId(&quot;61b9864202c77af4a8c1d3ae&quot;),</span></span>
<span class="line"><span style="color:#e1e4e8;">	&quot;id&quot; : 1,</span></span>
<span class="line"><span style="color:#e1e4e8;">	&quot;name&quot; : &quot;jack&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">	&quot;age&quot; : 73</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.comment.find() </span></span>
<span class="line"><span style="color:#24292e;">或</span></span>
<span class="line"><span style="color:#24292e;">db.comment.find({})</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#查询数据(find findOne)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&gt; db.user1.find()</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b9864202c77af4a8c1d3ae&quot;), &quot;id&quot; : 1, &quot;name&quot; : &quot;jack&quot;, &quot;age&quot; : 73 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b9867902c77af4a8c1d3af&quot;), &quot;id&quot; : 2, &quot;name&quot; : &quot;mike&quot;, &quot;age&quot; : 84 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b0&quot;), &quot;id&quot; : 3, &quot;name&quot; : &quot;peter&quot;, &quot;age&quot; : 14 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b1&quot;), &quot;id&quot; : 4, &quot;name&quot; : &quot;tom&quot;, &quot;age&quot; : 13 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b2&quot;), &quot;id&quot; : 5, &quot;name&quot; : &quot;ben&quot;, &quot;age&quot; : 24 }</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#无条件查找一条数据,默认当前Collection中的第一条数据，只返回一条数据</span></span>
<span class="line"><span style="color:#24292e;">&gt; db.user1.findOne()</span></span>
<span class="line"><span style="color:#24292e;">{</span></span>
<span class="line"><span style="color:#24292e;">	&quot;_id&quot; : ObjectId(&quot;61b9864202c77af4a8c1d3ae&quot;),</span></span>
<span class="line"><span style="color:#24292e;">	&quot;id&quot; : 1,</span></span>
<span class="line"><span style="color:#24292e;">	&quot;name&quot; : &quot;jack&quot;,</span></span>
<span class="line"><span style="color:#24292e;">	&quot;age&quot; : 73</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><h4 id="条件查询" tabindex="-1">条件查询 <a class="header-anchor" href="#条件查询" aria-label="Permalink to &quot;条件查询&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&gt; db.user1.find()</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b9864202c77af4a8c1d3ae&quot;), &quot;id&quot; : 1, &quot;name&quot; : &quot;jack&quot;, &quot;age&quot; : 73 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b9867902c77af4a8c1d3af&quot;), &quot;id&quot; : 2, &quot;name&quot; : &quot;mike&quot;, &quot;age&quot; : 84 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b0&quot;), &quot;id&quot; : 3, &quot;name&quot; : &quot;peter&quot;, &quot;age&quot; : 14 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b1&quot;), &quot;id&quot; : 4, &quot;name&quot; : &quot;tom&quot;, &quot;age&quot; : 13 }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b2&quot;), &quot;id&quot; : 5, &quot;name&quot; : &quot;ben&quot;, &quot;age&quot; : 24 }</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#根据name查询,在用mongosh,直接是易读方式展示</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.user1.find({name:&quot;jack&quot;}).pretty()</span></span>
<span class="line"><span style="color:#e1e4e8;">{</span></span>
<span class="line"><span style="color:#e1e4e8;">	&quot;_id&quot; : ObjectId(&quot;61b9864202c77af4a8c1d3ae&quot;),</span></span>
<span class="line"><span style="color:#e1e4e8;">	&quot;id&quot; : 1,</span></span>
<span class="line"><span style="color:#e1e4e8;">	&quot;name&quot; : &quot;jack&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">	&quot;age&quot; : 73</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt; db.user1.find()</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b9864202c77af4a8c1d3ae&quot;), &quot;id&quot; : 1, &quot;name&quot; : &quot;jack&quot;, &quot;age&quot; : 73 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b9867902c77af4a8c1d3af&quot;), &quot;id&quot; : 2, &quot;name&quot; : &quot;mike&quot;, &quot;age&quot; : 84 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b0&quot;), &quot;id&quot; : 3, &quot;name&quot; : &quot;peter&quot;, &quot;age&quot; : 14 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b1&quot;), &quot;id&quot; : 4, &quot;name&quot; : &quot;tom&quot;, &quot;age&quot; : 13 }</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;_id&quot; : ObjectId(&quot;61b986f602c77af4a8c1d3b2&quot;), &quot;id&quot; : 5, &quot;name&quot; : &quot;ben&quot;, &quot;age&quot; : 24 }</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#根据name查询,在用mongosh,直接是易读方式展示</span></span>
<span class="line"><span style="color:#24292e;">&gt; db.user1.find({name:&quot;jack&quot;}).pretty()</span></span>
<span class="line"><span style="color:#24292e;">{</span></span>
<span class="line"><span style="color:#24292e;">	&quot;_id&quot; : ObjectId(&quot;61b9864202c77af4a8c1d3ae&quot;),</span></span>
<span class="line"><span style="color:#24292e;">	&quot;id&quot; : 1,</span></span>
<span class="line"><span style="color:#24292e;">	&quot;name&quot; : &quot;jack&quot;,</span></span>
<span class="line"><span style="color:#24292e;">	&quot;age&quot; : 73</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><h4 id="投影查询-projection-query" tabindex="-1">投影查询（Projection Query） <a class="header-anchor" href="#投影查询-projection-query" aria-label="Permalink to &quot;投影查询（Projection Query）&quot;">​</a></h4><p>如果要查询结果返回部分字段，则需要使用投影查询（不显示所有字段，只显示指定的字段）。</p><p>如：查询结果只显示 _id、userid、nickname :</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.comment.find({userid:&quot;1003&quot;},{userid:1,nickname:1})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.comment.find({userid:&quot;1003&quot;},{userid:1,nickname:1})</span></span></code></pre></div><p>如：查询结果只显示 、userid、nickname ，不显示 _id ：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.comment.find({userid:&quot;1003&quot;},{userid:1,nickname:1,_id:0})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.comment.find({userid:&quot;1003&quot;},{userid:1,nickname:1,_id:0})</span></span></code></pre></div><p>再例如：查询所有数据，但只显示 _id、userid、nickname :</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.comment.find({},{userid:1,nickname:1})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.comment.find({},{userid:1,nickname:1})</span></span></code></pre></div><h3 id="限制查询" tabindex="-1">限制查询 <a class="header-anchor" href="#限制查询" aria-label="Permalink to &quot;限制查询&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> test</span></span>
<span class="line"><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">insert</span><span style="color:#E1E4E8;">( {</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;shijiange1&quot;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">} )</span></span>
<span class="line"><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">insert</span><span style="color:#E1E4E8;">( {</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;shijiange2&quot;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">28</span><span style="color:#E1E4E8;">} )</span></span>
<span class="line"><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">insert</span><span style="color:#E1E4E8;">( {</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;shijiange3&quot;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">38</span><span style="color:#E1E4E8;">} )</span></span>
<span class="line"><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">insert</span><span style="color:#E1E4E8;">( {</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;zhangsan1&quot;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">58</span><span style="color:#E1E4E8;">} )</span></span>
<span class="line"><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">insert</span><span style="color:#E1E4E8;">( {</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;zhangsan2&quot;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">68</span><span style="color:#E1E4E8;">} )</span></span>
<span class="line"><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">insert</span><span style="color:#E1E4E8;">( {</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;zhangsan3&quot;</span><span style="color:#E1E4E8;">, age: </span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">} )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">#查看前面两条记录</span></span>
<span class="line"><span style="color:#E1E4E8;">shijiange</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.find().</span><span style="color:#F97583;">limit</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    _id: ObjectId(</span><span style="color:#9ECBFF;">&quot;61bc01bab9c7cadcc9dd2de7&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;shijiange1&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    age: </span><span style="color:#79B8FF;">20</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    _id: ObjectId(</span><span style="color:#9ECBFF;">&quot;61bc01bab9c7cadcc9dd2de8&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;shijiange2&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    age: </span><span style="color:#79B8FF;">28</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> test</span></span>
<span class="line"><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">insert</span><span style="color:#24292E;">( {</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;shijiange1&quot;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">20</span><span style="color:#24292E;">} )</span></span>
<span class="line"><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">insert</span><span style="color:#24292E;">( {</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;shijiange2&quot;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">28</span><span style="color:#24292E;">} )</span></span>
<span class="line"><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">insert</span><span style="color:#24292E;">( {</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;shijiange3&quot;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">38</span><span style="color:#24292E;">} )</span></span>
<span class="line"><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">insert</span><span style="color:#24292E;">( {</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;zhangsan1&quot;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">58</span><span style="color:#24292E;">} )</span></span>
<span class="line"><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">insert</span><span style="color:#24292E;">( {</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;zhangsan2&quot;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">68</span><span style="color:#24292E;">} )</span></span>
<span class="line"><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">insert</span><span style="color:#24292E;">( {</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;zhangsan3&quot;</span><span style="color:#24292E;">, age: </span><span style="color:#005CC5;">25</span><span style="color:#24292E;">} )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">#查看前面两条记录</span></span>
<span class="line"><span style="color:#24292E;">shijiange</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.find().</span><span style="color:#D73A49;">limit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    _id: ObjectId(</span><span style="color:#032F62;">&quot;61bc01bab9c7cadcc9dd2de7&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;shijiange1&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age: </span><span style="color:#005CC5;">20</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    _id: ObjectId(</span><span style="color:#032F62;">&quot;61bc01bab9c7cadcc9dd2de8&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;shijiange2&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age: </span><span style="color:#005CC5;">28</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><h3 id="统计查询" tabindex="-1">统计查询 <a class="header-anchor" href="#统计查询" aria-label="Permalink to &quot;统计查询&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.collection.count(query, options)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.collection.count(query, options)</span></span></code></pre></div><table><thead><tr><th><strong>Parameter</strong></th><th><strong>Type</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>query</td><td>document</td><td>查询选择条件。</td></tr><tr><td>options</td><td>document</td><td>可选。用于修改计数的额外选项</td></tr></tbody></table><p>统计comment集合的所有的记录数：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.comment.count()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.comment.count()</span></span></code></pre></div><p>统计userid为1003的记录条数</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.comment.count({userid:&quot;1003&quot;})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.comment.count({userid:&quot;1003&quot;})</span></span></code></pre></div><h3 id="跳过记录" tabindex="-1">跳过记录 <a class="header-anchor" href="#跳过记录" aria-label="Permalink to &quot;跳过记录&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">test&gt;db.myuser.find().skip(2).limit(2)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">test&gt;db.myuser.find().skip(2).limit(2)</span></span></code></pre></div><h3 id="分页查询" tabindex="-1">分页查询 <a class="header-anchor" href="#分页查询" aria-label="Permalink to &quot;分页查询&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">语法：db.集合名.find().skip(数字).limit(数字)</span></span>
<span class="line"><span style="color:#e1e4e8;">说明：skip里的数字指跳过指定数量（可选），limit限制查询的数量</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c2.find().sort({age:-1}).skip(1).limit(2)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">语法：db.集合名.find().skip(数字).limit(数字)</span></span>
<span class="line"><span style="color:#24292e;">说明：skip里的数字指跳过指定数量（可选），limit限制查询的数量</span></span>
<span class="line"><span style="color:#24292e;">db.c2.find().sort({age:-1}).skip(1).limit(2)</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">shijiange</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.find().</span><span style="color:#F97583;">skip</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">).</span><span style="color:#F97583;">limit</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    _id: ObjectId(</span><span style="color:#9ECBFF;">&quot;61bc01bab9c7cadcc9dd2de7&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;shijiange1&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    age: </span><span style="color:#79B8FF;">20</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    _id: ObjectId(</span><span style="color:#9ECBFF;">&quot;61bc01bab9c7cadcc9dd2de8&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;shijiange2&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    age: </span><span style="color:#79B8FF;">28</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">shijiange</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.find().</span><span style="color:#F97583;">skip</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">).</span><span style="color:#F97583;">limit</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    _id: ObjectId(</span><span style="color:#9ECBFF;">&quot;61bc01bab9c7cadcc9dd2de9&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;shijiange3&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    age: </span><span style="color:#79B8FF;">38</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    _id: ObjectId(</span><span style="color:#9ECBFF;">&quot;61bc01bab9c7cadcc9dd2dea&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;zhangsan1&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    age: </span><span style="color:#79B8FF;">58</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">shijiange</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.find().</span><span style="color:#F97583;">skip</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">).</span><span style="color:#F97583;">limit</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    _id: ObjectId(</span><span style="color:#9ECBFF;">&quot;61bc01bab9c7cadcc9dd2deb&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;zhangsan2&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    age: </span><span style="color:#79B8FF;">68</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    _id: ObjectId(</span><span style="color:#9ECBFF;">&quot;61bc01bbb9c7cadcc9dd2dec&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;zhangsan3&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    age: </span><span style="color:#79B8FF;">25</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">shijiange</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.find().</span><span style="color:#D73A49;">skip</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">).</span><span style="color:#D73A49;">limit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    _id: ObjectId(</span><span style="color:#032F62;">&quot;61bc01bab9c7cadcc9dd2de7&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;shijiange1&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age: </span><span style="color:#005CC5;">20</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    _id: ObjectId(</span><span style="color:#032F62;">&quot;61bc01bab9c7cadcc9dd2de8&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;shijiange2&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age: </span><span style="color:#005CC5;">28</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">shijiange</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.find().</span><span style="color:#D73A49;">skip</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">).</span><span style="color:#D73A49;">limit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    _id: ObjectId(</span><span style="color:#032F62;">&quot;61bc01bab9c7cadcc9dd2de9&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;shijiange3&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age: </span><span style="color:#005CC5;">38</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    _id: ObjectId(</span><span style="color:#032F62;">&quot;61bc01bab9c7cadcc9dd2dea&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;zhangsan1&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age: </span><span style="color:#005CC5;">58</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">shijiange</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.find().</span><span style="color:#D73A49;">skip</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">).</span><span style="color:#D73A49;">limit</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    _id: ObjectId(</span><span style="color:#032F62;">&quot;61bc01bab9c7cadcc9dd2deb&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;zhangsan2&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age: </span><span style="color:#005CC5;">68</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    _id: ObjectId(</span><span style="color:#032F62;">&quot;61bc01bbb9c7cadcc9dd2dec&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;zhangsan3&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age: </span><span style="color:#005CC5;">25</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><h3 id="聚合查询" tabindex="-1">聚合查询 <a class="header-anchor" href="#聚合查询" aria-label="Permalink to &quot;聚合查询&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.集合名称.aggregate([</span></span>
<span class="line"><span style="color:#e1e4e8;">	{管道:{表达式}}</span></span>
<span class="line"><span style="color:#e1e4e8;">	....</span></span>
<span class="line"><span style="color:#e1e4e8;">])</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">常用管道：</span></span>
<span class="line"><span style="color:#e1e4e8;">$group   将集合中的文档分组，用于统计结果</span></span>
<span class="line"><span style="color:#e1e4e8;">$match   过滤数据，只要输出符合条件的文档</span></span>
<span class="line"><span style="color:#e1e4e8;">$sort		 聚合数据进一步排序</span></span>
<span class="line"><span style="color:#e1e4e8;">$skip    跳过指定文档数</span></span>
<span class="line"><span style="color:#e1e4e8;">$limit   限制集合数据返回文档数</span></span>
<span class="line"><span style="color:#e1e4e8;">....</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">常用表达式：</span></span>
<span class="line"><span style="color:#e1e4e8;">$sum 总和 $sum:1同count表示统计</span></span>
<span class="line"><span style="color:#e1e4e8;">$avg 平均</span></span>
<span class="line"><span style="color:#e1e4e8;">$min 最小值</span></span>
<span class="line"><span style="color:#e1e4e8;">$max 最大值</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">准备：</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.insert({_id:1,name:&quot;a&quot;,sex:1,age:1})</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.insert({_id:2,name:&quot;a&quot;,sex:1,age:2})</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.insert({_id:3,name:&quot;b&quot;,sex:1,age:3})</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.insert({_id:4,name:&quot;c&quot;,sex:2,age:4})</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.insert({_id:5,name:&quot;d&quot;,sex:2,age:5})</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">操作：</span></span>
<span class="line"><span style="color:#e1e4e8;">男女生的总年龄</span></span>
<span class="line"><span style="color:#e1e4e8;">#_id 必须加，后跟指定列</span></span>
<span class="line"><span style="color:#e1e4e8;">#rew 求和 返回结果数</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.aggregate([</span></span>
<span class="line"><span style="color:#e1e4e8;">	{</span></span>
<span class="line"><span style="color:#e1e4e8;">		$group:{	</span></span>
<span class="line"><span style="color:#e1e4e8;">			_id:&quot;$sex&quot;, 			</span></span>
<span class="line"><span style="color:#e1e4e8;">			res:{$sum:&quot;$sex&quot;}   </span></span>
<span class="line"><span style="color:#e1e4e8;">	}</span></span>
<span class="line"><span style="color:#e1e4e8;">	}</span></span>
<span class="line"><span style="color:#e1e4e8;">])</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">求男女总人数</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.aggregate([</span></span>
<span class="line"><span style="color:#e1e4e8;">	{</span></span>
<span class="line"><span style="color:#e1e4e8;">		$group:{	</span></span>
<span class="line"><span style="color:#e1e4e8;">			_id:&quot;$sex&quot;, 			</span></span>
<span class="line"><span style="color:#e1e4e8;">			res:{$sum:1}   </span></span>
<span class="line"><span style="color:#e1e4e8;">	}</span></span>
<span class="line"><span style="color:#e1e4e8;">	}</span></span>
<span class="line"><span style="color:#e1e4e8;">])</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">求学生总数和平均年龄</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.aggregate([</span></span>
<span class="line"><span style="color:#e1e4e8;">	{</span></span>
<span class="line"><span style="color:#e1e4e8;">		$group:{	</span></span>
<span class="line"><span style="color:#e1e4e8;">			_id:null, 			</span></span>
<span class="line"><span style="color:#e1e4e8;">			res:{$sum:1},</span></span>
<span class="line"><span style="color:#e1e4e8;">      total_avg:{$avg:&quot;$age&quot;}</span></span>
<span class="line"><span style="color:#e1e4e8;">	}</span></span>
<span class="line"><span style="color:#e1e4e8;">	}</span></span>
<span class="line"><span style="color:#e1e4e8;">])</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">查询男生女生人数，升序排序</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.aggregate([</span></span>
<span class="line"><span style="color:#e1e4e8;">	{$group:{	_id:&quot;$sex&quot;,res:{$sum:1}}},</span></span>
<span class="line"><span style="color:#e1e4e8;">	{$sort:{res:1}}</span></span>
<span class="line"><span style="color:#e1e4e8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.集合名称.aggregate([</span></span>
<span class="line"><span style="color:#24292e;">	{管道:{表达式}}</span></span>
<span class="line"><span style="color:#24292e;">	....</span></span>
<span class="line"><span style="color:#24292e;">])</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">常用管道：</span></span>
<span class="line"><span style="color:#24292e;">$group   将集合中的文档分组，用于统计结果</span></span>
<span class="line"><span style="color:#24292e;">$match   过滤数据，只要输出符合条件的文档</span></span>
<span class="line"><span style="color:#24292e;">$sort		 聚合数据进一步排序</span></span>
<span class="line"><span style="color:#24292e;">$skip    跳过指定文档数</span></span>
<span class="line"><span style="color:#24292e;">$limit   限制集合数据返回文档数</span></span>
<span class="line"><span style="color:#24292e;">....</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">常用表达式：</span></span>
<span class="line"><span style="color:#24292e;">$sum 总和 $sum:1同count表示统计</span></span>
<span class="line"><span style="color:#24292e;">$avg 平均</span></span>
<span class="line"><span style="color:#24292e;">$min 最小值</span></span>
<span class="line"><span style="color:#24292e;">$max 最大值</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">准备：</span></span>
<span class="line"><span style="color:#24292e;">db.c3.insert({_id:1,name:&quot;a&quot;,sex:1,age:1})</span></span>
<span class="line"><span style="color:#24292e;">db.c3.insert({_id:2,name:&quot;a&quot;,sex:1,age:2})</span></span>
<span class="line"><span style="color:#24292e;">db.c3.insert({_id:3,name:&quot;b&quot;,sex:1,age:3})</span></span>
<span class="line"><span style="color:#24292e;">db.c3.insert({_id:4,name:&quot;c&quot;,sex:2,age:4})</span></span>
<span class="line"><span style="color:#24292e;">db.c3.insert({_id:5,name:&quot;d&quot;,sex:2,age:5})</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">操作：</span></span>
<span class="line"><span style="color:#24292e;">男女生的总年龄</span></span>
<span class="line"><span style="color:#24292e;">#_id 必须加，后跟指定列</span></span>
<span class="line"><span style="color:#24292e;">#rew 求和 返回结果数</span></span>
<span class="line"><span style="color:#24292e;">db.c3.aggregate([</span></span>
<span class="line"><span style="color:#24292e;">	{</span></span>
<span class="line"><span style="color:#24292e;">		$group:{	</span></span>
<span class="line"><span style="color:#24292e;">			_id:&quot;$sex&quot;, 			</span></span>
<span class="line"><span style="color:#24292e;">			res:{$sum:&quot;$sex&quot;}   </span></span>
<span class="line"><span style="color:#24292e;">	}</span></span>
<span class="line"><span style="color:#24292e;">	}</span></span>
<span class="line"><span style="color:#24292e;">])</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">求男女总人数</span></span>
<span class="line"><span style="color:#24292e;">db.c3.aggregate([</span></span>
<span class="line"><span style="color:#24292e;">	{</span></span>
<span class="line"><span style="color:#24292e;">		$group:{	</span></span>
<span class="line"><span style="color:#24292e;">			_id:&quot;$sex&quot;, 			</span></span>
<span class="line"><span style="color:#24292e;">			res:{$sum:1}   </span></span>
<span class="line"><span style="color:#24292e;">	}</span></span>
<span class="line"><span style="color:#24292e;">	}</span></span>
<span class="line"><span style="color:#24292e;">])</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">求学生总数和平均年龄</span></span>
<span class="line"><span style="color:#24292e;">db.c3.aggregate([</span></span>
<span class="line"><span style="color:#24292e;">	{</span></span>
<span class="line"><span style="color:#24292e;">		$group:{	</span></span>
<span class="line"><span style="color:#24292e;">			_id:null, 			</span></span>
<span class="line"><span style="color:#24292e;">			res:{$sum:1},</span></span>
<span class="line"><span style="color:#24292e;">      total_avg:{$avg:&quot;$age&quot;}</span></span>
<span class="line"><span style="color:#24292e;">	}</span></span>
<span class="line"><span style="color:#24292e;">	}</span></span>
<span class="line"><span style="color:#24292e;">])</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">查询男生女生人数，升序排序</span></span>
<span class="line"><span style="color:#24292e;">db.c3.aggregate([</span></span>
<span class="line"><span style="color:#24292e;">	{$group:{	_id:&quot;$sex&quot;,res:{$sum:1}}},</span></span>
<span class="line"><span style="color:#24292e;">	{$sort:{res:1}}</span></span>
<span class="line"><span style="color:#24292e;">])</span></span></code></pre></div><h3 id="sort排序" tabindex="-1">sort排序 <a class="header-anchor" href="#sort排序" aria-label="Permalink to &quot;sort排序&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">语法：db.集合名.find().sort(JSON数据)</span></span>
<span class="line"><span style="color:#e1e4e8;">说明：键-就是要排序的列/字段，值：1升序 -1降序</span></span>
<span class="line"><span style="color:#e1e4e8;">使用：对年龄进行降序排序</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">skip(), limilt(), sort()三个放在一起执行的时候，执行的顺序是先 sort(), 然后是 skip()，最后是显示的 limit()，和命令编写顺序无关</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">语法：db.集合名.find().sort(JSON数据)</span></span>
<span class="line"><span style="color:#24292e;">说明：键-就是要排序的列/字段，值：1升序 -1降序</span></span>
<span class="line"><span style="color:#24292e;">使用：对年龄进行降序排序</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">skip(), limilt(), sort()三个放在一起执行的时候，执行的顺序是先 sort(), 然后是 skip()，最后是显示的 limit()，和命令编写顺序无关</span></span></code></pre></div><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">shijiange</span><span style="color:#F97583;">&gt;</span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.find().sort({ age: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> })	#按age升序</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.find().sort({ age: </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> })	#按age降序</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">shijiange</span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.find().sort({ age: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> })	#按age升序</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.find().sort({ age: </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> })	#按age降序</span></span></code></pre></div><h3 id="比较查询" tabindex="-1">比较查询 <a class="header-anchor" href="#比较查询" aria-label="Permalink to &quot;比较查询&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">shijiange&gt; db.myuser.find({ age: {$lt: 30} })</span></span>
<span class="line"><span style="color:#e1e4e8;">[</span></span>
<span class="line"><span style="color:#e1e4e8;">  {</span></span>
<span class="line"><span style="color:#e1e4e8;">    _id: ObjectId(&quot;61bc01bab9c7cadcc9dd2de7&quot;),</span></span>
<span class="line"><span style="color:#e1e4e8;">    name: &#39;shijiange1&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">    age: 20</span></span>
<span class="line"><span style="color:#e1e4e8;">  },</span></span>
<span class="line"><span style="color:#e1e4e8;">  {</span></span>
<span class="line"><span style="color:#e1e4e8;">    _id: ObjectId(&quot;61bc01bab9c7cadcc9dd2de8&quot;),</span></span>
<span class="line"><span style="color:#e1e4e8;">    name: &#39;shijiange2&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">    age: 28</span></span>
<span class="line"><span style="color:#e1e4e8;">  },</span></span>
<span class="line"><span style="color:#e1e4e8;">  {</span></span>
<span class="line"><span style="color:#e1e4e8;">    _id: ObjectId(&quot;61bc01bbb9c7cadcc9dd2dec&quot;),</span></span>
<span class="line"><span style="color:#e1e4e8;">    name: &#39;zhangsan3&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">    age: 25</span></span>
<span class="line"><span style="color:#e1e4e8;">  }</span></span>
<span class="line"><span style="color:#e1e4e8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">shijiange&gt; db.myuser.find({ age: {$lt: 30} })</span></span>
<span class="line"><span style="color:#24292e;">[</span></span>
<span class="line"><span style="color:#24292e;">  {</span></span>
<span class="line"><span style="color:#24292e;">    _id: ObjectId(&quot;61bc01bab9c7cadcc9dd2de7&quot;),</span></span>
<span class="line"><span style="color:#24292e;">    name: &#39;shijiange1&#39;,</span></span>
<span class="line"><span style="color:#24292e;">    age: 20</span></span>
<span class="line"><span style="color:#24292e;">  },</span></span>
<span class="line"><span style="color:#24292e;">  {</span></span>
<span class="line"><span style="color:#24292e;">    _id: ObjectId(&quot;61bc01bab9c7cadcc9dd2de8&quot;),</span></span>
<span class="line"><span style="color:#24292e;">    name: &#39;shijiange2&#39;,</span></span>
<span class="line"><span style="color:#24292e;">    age: 28</span></span>
<span class="line"><span style="color:#24292e;">  },</span></span>
<span class="line"><span style="color:#24292e;">  {</span></span>
<span class="line"><span style="color:#24292e;">    _id: ObjectId(&quot;61bc01bbb9c7cadcc9dd2dec&quot;),</span></span>
<span class="line"><span style="color:#24292e;">    name: &#39;zhangsan3&#39;,</span></span>
<span class="line"><span style="color:#24292e;">    age: 25</span></span>
<span class="line"><span style="color:#24292e;">  }</span></span>
<span class="line"><span style="color:#24292e;">]</span></span></code></pre></div><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>$gt</td><td>大于</td></tr><tr><td>$lt</td><td>小于</td></tr><tr><td>$gte</td><td>大于或等于</td></tr><tr><td>$lte</td><td>小于或等于</td></tr><tr><td>$or</td><td>或</td></tr><tr><td>$and</td><td>并且</td></tr><tr><td>$ne</td><td>不等于</td></tr><tr><td>$in</td><td>包含</td></tr><tr><td>$nin</td><td>不包含</td></tr></tbody></table><h3 id="包含查询" tabindex="-1">包含查询 <a class="header-anchor" href="#包含查询" aria-label="Permalink to &quot;包含查询&quot;">​</a></h3><p>包含使用$in操作符。</p><p>示例：查询评论的集合中userid字段包含1003或1004的文档</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.comment.find({userid:{$in:[&quot;1003&quot;,&quot;1004&quot;]}})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.comment.find({userid:{$in:[&quot;1003&quot;,&quot;1004&quot;]}})</span></span></code></pre></div><p>不包含使用$nin操作符。</p><p>示例：查询评论集合中userid字段不包含1003和1004的文档</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.comment.find({userid:{$nin:[&quot;1003&quot;,&quot;1004&quot;]}})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.comment.find({userid:{$nin:[&quot;1003&quot;,&quot;1004&quot;]}})</span></span></code></pre></div><h3 id="条件连接查询" tabindex="-1">条件连接查询 <a class="header-anchor" href="#条件连接查询" aria-label="Permalink to &quot;条件连接查询&quot;">​</a></h3><p>如果需要查询同时满足两个以上条件，需要使用$and操作符将条件进行关联。 格式为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$and:[ { },{ },{ } ]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$and:[ { },{ },{ } ]</span></span></code></pre></div><p>示例：查询评论集合中likenum大于等于700 并且小于2000的文档：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.comment.find({$and:[{likenum:{$gte:NumberInt(700)}},{likenum:{$lt:NumberInt(2000)}}]})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.comment.find({$and:[{likenum:{$gte:NumberInt(700)}},{likenum:{$lt:NumberInt(2000)}}]})</span></span></code></pre></div><p>如果两个以上条件之间是或者的关系，我们使用 操作符进行关联，与前面 and的使用方式相同 格式为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$or:[ { },{ },{ } ]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$or:[ { },{ },{ } ]</span></span></code></pre></div><p>示例：查询评论集合中userid为1003，或者点赞数小于1000的文档记录</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.comment.find({$or:[ {userid:&quot;1003&quot;} ,{likenum:{$lt:1000} }]})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.comment.find({$or:[ {userid:&quot;1003&quot;} ,{likenum:{$lt:1000} }]})</span></span></code></pre></div><h3 id="逻辑条件" tabindex="-1">逻辑条件 <a class="header-anchor" href="#逻辑条件" aria-label="Permalink to &quot;逻辑条件&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.myuser.find( {name: &#39;shijiange1&#39;} )</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.find( {name: &#39;shijiange2&#39;} )</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.find({ $or: [ {name: &#39;shijiange1&#39;},{name: &#39;shijiange2&#39;} ] })</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.find({ $and: [ {name: &#39;shijiange1&#39;},{age: 20} ] })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.myuser.find( {name: &#39;shijiange1&#39;} )</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.find( {name: &#39;shijiange2&#39;} )</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.find({ $or: [ {name: &#39;shijiange1&#39;},{name: &#39;shijiange2&#39;} ] })</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.find({ $and: [ {name: &#39;shijiange1&#39;},{age: 20} ] })</span></span></code></pre></div><h3 id="正则查询" tabindex="-1">正则查询 <a class="header-anchor" href="#正则查询" aria-label="Permalink to &quot;正则查询&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.collection.find({field:/正则表达式/})</span></span>
<span class="line"><span style="color:#e1e4e8;">或</span></span>
<span class="line"><span style="color:#e1e4e8;">db.集合.find({字段:/正则表达式/})</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">正则表达式是js的语法，直接量的写法</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.collection.find({field:/正则表达式/})</span></span>
<span class="line"><span style="color:#24292e;">或</span></span>
<span class="line"><span style="color:#24292e;">db.集合.find({字段:/正则表达式/})</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">正则表达式是js的语法，直接量的写法</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#支持普通正则和扩展正则</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.find({ name: {$regex: &quot;shijiange[1-9]&quot;} })	#普通正则过滤</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.find( {&quot;name&quot;:{$regex:&quot;(zhangsan)&quot;}} ) 		#支持分组正则</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#支持普通正则和扩展正则</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">db.myuser.find({ name: {$regex: &quot;shijiange[1-9]&quot;} })	#普通正则过滤</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.find( {&quot;name&quot;:{$regex:&quot;(zhangsan)&quot;}} ) 		#支持分组正则</span></span></code></pre></div><h2 id="更新表" tabindex="-1">更新表 <a class="header-anchor" href="#更新表" aria-label="Permalink to &quot;更新表&quot;">​</a></h2><table><thead><tr><th>运算符</th><th>作用</th></tr></thead><tbody><tr><td>$inc</td><td>递增</td></tr><tr><td>$rename</td><td>重命名列</td></tr><tr><td>$set</td><td>修改列值</td></tr><tr><td>$unset</td><td>删除列</td></tr></tbody></table><p>基础语法： db.集合名.update（条件，新数据[,是否新增，是否修改多条]）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">是否新增：指条件匹配不到数据则插入，true是插入，false否不插入默认</span></span>
<span class="line"><span style="color:#e1e4e8;">是否修改多条：指将匹配成功的数据都修改（true是，false否默认）</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">for(var i=1;i&lt;=10;i++){</span></span>
<span class="line"><span style="color:#e1e4e8;">	db.c3.insert({username:&quot;zs&quot;+i,age:i});</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.update({username:&quot;zs1&quot;},{username:&quot;zs2&quot;})#这样是替换，将符合条件的行直接换成这个</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">是否新增：指条件匹配不到数据则插入，true是插入，false否不插入默认</span></span>
<span class="line"><span style="color:#24292e;">是否修改多条：指将匹配成功的数据都修改（true是，false否默认）</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">for(var i=1;i&lt;=10;i++){</span></span>
<span class="line"><span style="color:#24292e;">	db.c3.insert({username:&quot;zs&quot;+i,age:i});</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">db.c3.update({username:&quot;zs1&quot;},{username:&quot;zs2&quot;})#这样是替换，将符合条件的行直接换成这个</span></span></code></pre></div><p>升级语法：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.c3.update（{username:&quot;zs2&quot;}，{$set:{username:&quot;zs222&quot;}}）	</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">给zs10 增加2岁</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.update({username:&quot;zs10&quot;},{$inc:{age:2}})</span></span>
<span class="line"><span style="color:#e1e4e8;">给zs10 减少2岁</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c3.update({username:&quot;zs10&quot;},{$inc:{age:-2}})</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">准备：插入一个数据： db.c4.insert({username:&quot;熊子阳&quot;,age:18,who:&quot;男&quot;,other:&quot;没钱&quot;})</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">修改数据，将 熊子阳 改为 Aoi  ，age 改为999 ，who 改为 sex ，other 删除</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c4.update({username:&quot;熊子阳&quot;},</span></span>
<span class="line"><span style="color:#e1e4e8;">{$set:{username:&quot;Aoi&quot;}},</span></span>
<span class="line"><span style="color:#e1e4e8;">{$inc:{age:971}},</span></span>
<span class="line"><span style="color:#e1e4e8;">{$rename:{who:sex}},</span></span>
<span class="line"><span style="color:#e1e4e8;">{$unset:{other:true}})</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">正确写法：</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c4.update({username:&quot;熊子阳&quot;},{</span></span>
<span class="line"><span style="color:#e1e4e8;">	$set:{username:&quot;Aoi&quot;},</span></span>
<span class="line"><span style="color:#e1e4e8;">	$inc:{age:971},</span></span>
<span class="line"><span style="color:#e1e4e8;">	$rename:{who:&quot;sex&quot;},</span></span>
<span class="line"><span style="color:#e1e4e8;">	$unset:{other:true}</span></span>
<span class="line"><span style="color:#e1e4e8;">})</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#更新不存在的值,若不存在则不会有操作</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.c3.update({username:&quot;zs30&quot;},{$set:{age:30}})</span></span>
<span class="line"><span style="color:#e1e4e8;">#在最后加一个true参数，作用是，如果不存在，则插入该条数据,默认为false则不管</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.c3.update({username:&quot;zs30&quot;},{$set:{age:30}},true)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#第四个参数如果为true，当匹配到多条条件符合的元素时，都更改，默认为false，只改一条</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.c3.update({},{$set:{age:20}},false,true)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.c3.update（{username:&quot;zs2&quot;}，{$set:{username:&quot;zs222&quot;}}）	</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">给zs10 增加2岁</span></span>
<span class="line"><span style="color:#24292e;">db.c3.update({username:&quot;zs10&quot;},{$inc:{age:2}})</span></span>
<span class="line"><span style="color:#24292e;">给zs10 减少2岁</span></span>
<span class="line"><span style="color:#24292e;">db.c3.update({username:&quot;zs10&quot;},{$inc:{age:-2}})</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">准备：插入一个数据： db.c4.insert({username:&quot;熊子阳&quot;,age:18,who:&quot;男&quot;,other:&quot;没钱&quot;})</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">修改数据，将 熊子阳 改为 Aoi  ，age 改为999 ，who 改为 sex ，other 删除</span></span>
<span class="line"><span style="color:#24292e;">db.c4.update({username:&quot;熊子阳&quot;},</span></span>
<span class="line"><span style="color:#24292e;">{$set:{username:&quot;Aoi&quot;}},</span></span>
<span class="line"><span style="color:#24292e;">{$inc:{age:971}},</span></span>
<span class="line"><span style="color:#24292e;">{$rename:{who:sex}},</span></span>
<span class="line"><span style="color:#24292e;">{$unset:{other:true}})</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">正确写法：</span></span>
<span class="line"><span style="color:#24292e;">db.c4.update({username:&quot;熊子阳&quot;},{</span></span>
<span class="line"><span style="color:#24292e;">	$set:{username:&quot;Aoi&quot;},</span></span>
<span class="line"><span style="color:#24292e;">	$inc:{age:971},</span></span>
<span class="line"><span style="color:#24292e;">	$rename:{who:&quot;sex&quot;},</span></span>
<span class="line"><span style="color:#24292e;">	$unset:{other:true}</span></span>
<span class="line"><span style="color:#24292e;">})</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#更新不存在的值,若不存在则不会有操作</span></span>
<span class="line"><span style="color:#24292e;">&gt; db.c3.update({username:&quot;zs30&quot;},{$set:{age:30}})</span></span>
<span class="line"><span style="color:#24292e;">#在最后加一个true参数，作用是，如果不存在，则插入该条数据,默认为false则不管</span></span>
<span class="line"><span style="color:#24292e;">&gt; db.c3.update({username:&quot;zs30&quot;},{$set:{age:30}},true)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#第四个参数如果为true，当匹配到多条条件符合的元素时，都更改，默认为false，只改一条</span></span>
<span class="line"><span style="color:#24292e;">&gt; db.c3.update({},{$set:{age:20}},false,true)</span></span></code></pre></div><h3 id="update" tabindex="-1">update <a class="header-anchor" href="#update" aria-label="Permalink to &quot;update&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#要注意的是({&quot;条件&quot;},{&quot;关键字&quot;:{&quot;修改内容&quot;}}),其中如果条件为空,那么将会修改Collection中所有的数据（不推荐）</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">语法：</span></span>
<span class="line"><span style="color:#e1e4e8;">	db.collection.update(    </span></span>
<span class="line"><span style="color:#e1e4e8;">	&lt;query&gt;, </span></span>
<span class="line"><span style="color:#e1e4e8;">	&lt;update&gt;, </span></span>
<span class="line"><span style="color:#e1e4e8;">	{       </span></span>
<span class="line"><span style="color:#e1e4e8;">		upsert: &lt;boolean&gt;,   </span></span>
<span class="line"><span style="color:#e1e4e8;">		multi: &lt;boolean&gt;,  </span></span>
<span class="line"><span style="color:#e1e4e8;">		writeConcern: &lt;document&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">	}</span></span>
<span class="line"><span style="color:#e1e4e8;">)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">query : update的查询条件，类似sql update查询内where后面的。</span></span>
<span class="line"><span style="color:#e1e4e8;">update : update的对象和一些更新的操作符（如$,$inc...）等，也可以理解为sql update查询内set后面的</span></span>
<span class="line"><span style="color:#e1e4e8;">upsert : 可选，这个参数的意思是，如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。</span></span>
<span class="line"><span style="color:#e1e4e8;">multi : 可选，mongodb 默认是false,只更新找到的第一条记录，如果这个参数为true,就把按条件查出来多条记录全部更新。</span></span>
<span class="line"><span style="color:#e1e4e8;">writeConcern :可选，抛出异常的级别</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#要注意的是({&quot;条件&quot;},{&quot;关键字&quot;:{&quot;修改内容&quot;}}),其中如果条件为空,那么将会修改Collection中所有的数据（不推荐）</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">语法：</span></span>
<span class="line"><span style="color:#24292e;">	db.collection.update(    </span></span>
<span class="line"><span style="color:#24292e;">	&lt;query&gt;, </span></span>
<span class="line"><span style="color:#24292e;">	&lt;update&gt;, </span></span>
<span class="line"><span style="color:#24292e;">	{       </span></span>
<span class="line"><span style="color:#24292e;">		upsert: &lt;boolean&gt;,   </span></span>
<span class="line"><span style="color:#24292e;">		multi: &lt;boolean&gt;,  </span></span>
<span class="line"><span style="color:#24292e;">		writeConcern: &lt;document&gt;</span></span>
<span class="line"><span style="color:#24292e;">	}</span></span>
<span class="line"><span style="color:#24292e;">)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">query : update的查询条件，类似sql update查询内where后面的。</span></span>
<span class="line"><span style="color:#24292e;">update : update的对象和一些更新的操作符（如$,$inc...）等，也可以理解为sql update查询内set后面的</span></span>
<span class="line"><span style="color:#24292e;">upsert : 可选，这个参数的意思是，如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。</span></span>
<span class="line"><span style="color:#24292e;">multi : 可选，mongodb 默认是false,只更新找到的第一条记录，如果这个参数为true,就把按条件查出来多条记录全部更新。</span></span>
<span class="line"><span style="color:#24292e;">writeConcern :可选，抛出异常的级别</span></span></code></pre></div><ul><li>update</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.find()</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;peter&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;tom&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;ben&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">#更新</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">update</span><span style="color:#E1E4E8;">( {</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;peter&quot;</span><span style="color:#E1E4E8;"> }, {$</span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;">: {age:</span><span style="color:#79B8FF;">21</span><span style="color:#E1E4E8;">} })</span></span>
<span class="line"><span style="color:#E1E4E8;">WriteResult({ </span><span style="color:#9ECBFF;">&quot;nMatched&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;nUpserted&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;nModified&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.find()</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;peter&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">21</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;tom&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;ben&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">#条件为空</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">update</span><span style="color:#E1E4E8;">( {</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;peter&quot;</span><span style="color:#E1E4E8;"> }, {})</span></span>
<span class="line"><span style="color:#E1E4E8;">WriteResult({ </span><span style="color:#9ECBFF;">&quot;nMatched&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;nUpserted&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;nModified&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.find()</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#E1E4E8;">) }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;tom&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;ben&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.find()</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;peter&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">14</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;tom&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">13</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;ben&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">24</span><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">#更新</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">update</span><span style="color:#24292E;">( {</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;peter&quot;</span><span style="color:#24292E;"> }, {$</span><span style="color:#D73A49;">set</span><span style="color:#24292E;">: {age:</span><span style="color:#005CC5;">21</span><span style="color:#24292E;">} })</span></span>
<span class="line"><span style="color:#24292E;">WriteResult({ </span><span style="color:#032F62;">&quot;nMatched&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;nUpserted&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;nModified&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.find()</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;peter&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">21</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;tom&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">13</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;ben&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">24</span><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">#条件为空</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">update</span><span style="color:#24292E;">( {</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;peter&quot;</span><span style="color:#24292E;"> }, {})</span></span>
<span class="line"><span style="color:#24292E;">WriteResult({ </span><span style="color:#032F62;">&quot;nMatched&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;nUpserted&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;nModified&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.find()</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#24292E;">) }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;tom&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">13</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;ben&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">24</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span></span></code></pre></div><h3 id="updateone" tabindex="-1">updateOne <a class="header-anchor" href="#updateone" aria-label="Permalink to &quot;updateOne&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#根据条件修改一条数据的内容,如出现多条,只修改最靠前的数据</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.find()</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#E1E4E8;">) }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;tom&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;ben&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cab02c77af4a8c1d3b7&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;mike&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cb402c77af4a8c1d3b8&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;li&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cc302c77af4a8c1d3b9&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;han&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.updateOne( {age:</span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }, {$</span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;">: {</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;xiao&quot;</span><span style="color:#E1E4E8;">} })</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;acknowledged&quot;</span><span style="color:#E1E4E8;"> : true, </span><span style="color:#9ECBFF;">&quot;matchedCount&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;modifiedCount&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.find()</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#E1E4E8;">) }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;tom&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;ben&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cab02c77af4a8c1d3b7&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;xiao&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cb402c77af4a8c1d3b8&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;li&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cc302c77af4a8c1d3b9&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;han&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#根据条件修改一条数据的内容,如出现多条,只修改最靠前的数据</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.find()</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#24292E;">) }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;tom&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">13</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;ben&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">24</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cab02c77af4a8c1d3b7&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;mike&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cb402c77af4a8c1d3b8&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;li&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cc302c77af4a8c1d3b9&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;han&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">18</span><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.updateOne( {age:</span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }, {$</span><span style="color:#D73A49;">set</span><span style="color:#24292E;">: {</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;xiao&quot;</span><span style="color:#24292E;">} })</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;acknowledged&quot;</span><span style="color:#24292E;"> : true, </span><span style="color:#032F62;">&quot;matchedCount&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;modifiedCount&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.find()</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#24292E;">) }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;tom&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">13</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;ben&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">24</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cab02c77af4a8c1d3b7&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;xiao&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cb402c77af4a8c1d3b8&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;li&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cc302c77af4a8c1d3b9&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;han&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">18</span><span style="color:#24292E;"> }</span></span></code></pre></div><h4 id="更新字段" tabindex="-1">更新字段 <a class="header-anchor" href="#更新字段" aria-label="Permalink to &quot;更新字段&quot;">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#查询到指定的字段的数据，更新加一个字段</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.find()</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#E1E4E8;">) }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;tom&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;ben&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cab02c77af4a8c1d3b7&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;xiao&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cb402c77af4a8c1d3b8&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;li&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cc302c77af4a8c1d3b9&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;han&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.updateOne( {age:</span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;"> }, {$</span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;">: {hobby:[&quot;羽毛球&quot;,&quot;篮球&quot;,&quot;足球&quot;]} })</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;acknowledged&quot;</span><span style="color:#E1E4E8;"> : true, </span><span style="color:#9ECBFF;">&quot;matchedCount&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;modifiedCount&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.find()</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#E1E4E8;">) }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;tom&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;hobby&quot;</span><span style="color:#E1E4E8;"> : [ &quot;羽毛球&quot;, &quot;篮球&quot;, &quot;足球&quot; ] }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;ben&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cab02c77af4a8c1d3b7&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;xiao&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cb402c77af4a8c1d3b8&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;li&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cc302c77af4a8c1d3b9&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;han&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#查询到指定的字段的数据，更新加一个字段</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.find()</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#24292E;">) }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;tom&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">13</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;ben&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">24</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cab02c77af4a8c1d3b7&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;xiao&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cb402c77af4a8c1d3b8&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;li&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cc302c77af4a8c1d3b9&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;han&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">18</span><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.updateOne( {age:</span><span style="color:#005CC5;">13</span><span style="color:#24292E;"> }, {$</span><span style="color:#D73A49;">set</span><span style="color:#24292E;">: {hobby:[&quot;羽毛球&quot;,&quot;篮球&quot;,&quot;足球&quot;]} })</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;acknowledged&quot;</span><span style="color:#24292E;"> : true, </span><span style="color:#032F62;">&quot;matchedCount&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;modifiedCount&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.find()</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#24292E;">) }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;tom&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">13</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;hobby&quot;</span><span style="color:#24292E;"> : [ &quot;羽毛球&quot;, &quot;篮球&quot;, &quot;足球&quot; ] }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;ben&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">24</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cab02c77af4a8c1d3b7&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;xiao&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cb402c77af4a8c1d3b8&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;li&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cc302c77af4a8c1d3b9&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;han&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">18</span><span style="color:#24292E;"> }</span></span></code></pre></div><h3 id="updatemany" tabindex="-1">updateMany <a class="header-anchor" href="#updatemany" aria-label="Permalink to &quot;updateMany&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#根据条件新增字段</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.find()</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#E1E4E8;">) }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;tom&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;hobby&quot;</span><span style="color:#E1E4E8;"> : [ &quot;羽毛球&quot;, &quot;篮球&quot;, &quot;足球&quot; ] }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;ben&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cab02c77af4a8c1d3b7&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;xiao&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cb402c77af4a8c1d3b8&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;li&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cc302c77af4a8c1d3b9&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;han&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.updateMany( {age:</span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;"> }, {$</span><span style="color:#F97583;">set</span><span style="color:#E1E4E8;">: {gender:</span><span style="color:#9ECBFF;">&quot;男&quot;</span><span style="color:#E1E4E8;">} })</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;acknowledged&quot;</span><span style="color:#E1E4E8;"> : true, </span><span style="color:#9ECBFF;">&quot;matchedCount&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;modifiedCount&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">user1</span><span style="color:#E1E4E8;">.find()</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#E1E4E8;">) }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;tom&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;hobby&quot;</span><span style="color:#E1E4E8;"> : [ &quot;羽毛球&quot;, &quot;篮球&quot;, &quot;足球&quot; ] }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;ben&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cab02c77af4a8c1d3b7&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;xiao&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;gender&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;男&quot;</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cb402c77af4a8c1d3b8&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;li&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">84</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;gender&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;男&quot;</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">{ </span><span style="color:#9ECBFF;">&quot;_id&quot;</span><span style="color:#E1E4E8;"> : ObjectId(</span><span style="color:#9ECBFF;">&quot;61b98cc302c77af4a8c1d3b9&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#9ECBFF;">&quot;han&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;"> : </span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;"> }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#根据条件新增字段</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.find()</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#24292E;">) }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;tom&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">13</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;hobby&quot;</span><span style="color:#24292E;"> : [ &quot;羽毛球&quot;, &quot;篮球&quot;, &quot;足球&quot; ] }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;ben&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">24</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cab02c77af4a8c1d3b7&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;xiao&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cb402c77af4a8c1d3b8&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;li&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cc302c77af4a8c1d3b9&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;han&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">18</span><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.updateMany( {age:</span><span style="color:#005CC5;">84</span><span style="color:#24292E;"> }, {$</span><span style="color:#D73A49;">set</span><span style="color:#24292E;">: {gender:</span><span style="color:#032F62;">&quot;男&quot;</span><span style="color:#24292E;">} })</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;acknowledged&quot;</span><span style="color:#24292E;"> : true, </span><span style="color:#032F62;">&quot;matchedCount&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;modifiedCount&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">user1</span><span style="color:#24292E;">.find()</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b4&quot;</span><span style="color:#24292E;">) }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b5&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;tom&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">13</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;hobby&quot;</span><span style="color:#24292E;"> : [ &quot;羽毛球&quot;, &quot;篮球&quot;, &quot;足球&quot; ] }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98a4002c77af4a8c1d3b6&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;ben&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">24</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cab02c77af4a8c1d3b7&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;xiao&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;gender&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;男&quot;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cb402c77af4a8c1d3b8&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;li&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">84</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;gender&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;男&quot;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">{ </span><span style="color:#032F62;">&quot;_id&quot;</span><span style="color:#24292E;"> : ObjectId(</span><span style="color:#032F62;">&quot;61b98cc302c77af4a8c1d3b9&quot;</span><span style="color:#24292E;">), </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> : </span><span style="color:#032F62;">&quot;han&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;"> : </span><span style="color:#005CC5;">18</span><span style="color:#24292E;"> }</span></span></code></pre></div><h2 id="增加表" tabindex="-1">增加表 <a class="header-anchor" href="#增加表" aria-label="Permalink to &quot;增加表&quot;">​</a></h2><p>语法：</p><p>​ db.集合名.insert(JSON数据)</p><p>集合存在，则直接插入数据，集合不存在，隐式创建并插入</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&gt;use test</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt;db.c1.insert({username:&quot;xzy&quot;,age:18})</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#批量插入</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt;db.c1.insertMany({})</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">插入多条数据：</span></span>
<span class="line"><span style="color:#e1e4e8;">传递数组，数组中每个元素都是一个JSON类型</span></span>
<span class="line"><span style="color:#e1e4e8;">db.c1.insert([</span></span>
<span class="line"><span style="color:#e1e4e8;">  {username:&quot;z3&quot;,age:3},</span></span>
<span class="line"><span style="color:#e1e4e8;">  {username:&quot;z4&quot;,age:4},</span></span>
<span class="line"><span style="color:#e1e4e8;">  {username:&quot;z5&quot;,age:5}</span></span>
<span class="line"><span style="color:#e1e4e8;">])</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#插入十条数据： ，mongodb底层使用JS引擎实现的，所以支持部分js语法，可以使用for循环</span></span>
<span class="line"><span style="color:#e1e4e8;">for(var i=1;i&lt;=10;i++){</span></span>
<span class="line"><span style="color:#e1e4e8;">  db.c1.insert({username:&quot;a&quot;+i,age:i})</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt;use test</span></span>
<span class="line"><span style="color:#24292e;">&gt;db.c1.insert({username:&quot;xzy&quot;,age:18})</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#批量插入</span></span>
<span class="line"><span style="color:#24292e;">&gt;db.c1.insertMany({})</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">插入多条数据：</span></span>
<span class="line"><span style="color:#24292e;">传递数组，数组中每个元素都是一个JSON类型</span></span>
<span class="line"><span style="color:#24292e;">db.c1.insert([</span></span>
<span class="line"><span style="color:#24292e;">  {username:&quot;z3&quot;,age:3},</span></span>
<span class="line"><span style="color:#24292e;">  {username:&quot;z4&quot;,age:4},</span></span>
<span class="line"><span style="color:#24292e;">  {username:&quot;z5&quot;,age:5}</span></span>
<span class="line"><span style="color:#24292e;">])</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#插入十条数据： ，mongodb底层使用JS引擎实现的，所以支持部分js语法，可以使用for循环</span></span>
<span class="line"><span style="color:#24292e;">for(var i=1;i&lt;=10;i++){</span></span>
<span class="line"><span style="color:#24292e;">  db.c1.insert({username:&quot;a&quot;+i,age:i})</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><h2 id="索引" tabindex="-1">索引 <a class="header-anchor" href="#索引" aria-label="Permalink to &quot;索引&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">语法：</span></span>
<span class="line"><span style="color:#e1e4e8;">	db.collection.createIndex(keys, options)</span></span>
<span class="line"><span style="color:#e1e4e8;">	MongoDB中1代表升序，-1代表降序</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">语法：</span></span>
<span class="line"><span style="color:#24292e;">	db.collection.createIndex(keys, options)</span></span>
<span class="line"><span style="color:#24292e;">	MongoDB中1代表升序，-1代表降序</span></span></code></pre></div><h3 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h3><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>background</td><td>Boolean</td><td>建索引过程会阻塞其它数据库操作，background可指定以后台方式创建索引，即增加 &quot;background&quot; 可选参数。 &quot;background&quot; 默认值为false。</td></tr><tr><td>unique</td><td>Boolean</td><td>建立的索引是否唯一。指定为true创建唯一索引。默认值为false.</td></tr><tr><td>name</td><td>string</td><td>索引的名称。如果未指定，MongoDB的通过连接索引的字段名和排序顺序生成一个索引名称。如：key_1、key_-1、key_text。</td></tr><tr><td>sparse</td><td>Boolean</td><td>对文档中不存在的字段数据不启用索引；这个参数需要特别注意，如果设置为true的话，在索引字段中不会查询出不包含对应字段的文档.。默认值为 false.</td></tr><tr><td>expireAfterSeconds</td><td>integer</td><td>指定一个以秒为单位的数值，完成 TTL设定，设定集合的生存时间。</td></tr><tr><td>v</td><td>index version</td><td>索引的版本号。默认的索引版本取决于mongod创建索引时运行的版本。</td></tr><tr><td>weights</td><td>document</td><td>索引权重值，数值在 1 到 99,999 之间，表示该索引相对于其他索引字段的得分权重。</td></tr><tr><td>default_language</td><td>string</td><td>对于文本索引，该参数决定了停用词及词干和词器的规则的列表。 默认为英语</td></tr><tr><td>language_override</td><td>string</td><td>对于文本索引，该参数指定了包含在文档中的字段名，语言覆盖默认的language，默认值为 language.</td></tr></tbody></table><p>其中需要关注的参数：<strong>background</strong>、<strong>unique</strong>和<strong>expireAfterSeconds</strong>，并且索引默认是区分大小写的</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> shijiange</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(i</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">&lt;=</span><span style="color:#79B8FF;">500000</span><span style="color:#E1E4E8;">;i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.</span><span style="color:#F97583;">insert</span><span style="color:#E1E4E8;">( {</span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&#39;mytest&#39;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">i, age:i} )</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">#统计条数</span></span>
<span class="line"><span style="color:#E1E4E8;">shijiange</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.countDocuments()</span></span>
<span class="line"><span style="color:#79B8FF;">354739</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">mongodb有慢查询的概念，</span><span style="color:#79B8FF;">默认是超过100ms会记录慢日志mongodb</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">log</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">getProfilingStatus</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">shijiange</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">db</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">myuser</span><span style="color:#E1E4E8;">.find( {age:</span><span style="color:#79B8FF;">9999</span><span style="color:#E1E4E8;">} )</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    _id: ObjectId(</span><span style="color:#9ECBFF;">&quot;61bc0505b9c7cadcc9dd54fb&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;mytest9999&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    age: </span><span style="color:#79B8FF;">9999</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">#需要花费162ms</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">{</span><span style="color:#9ECBFF;">&quot;t&quot;</span><span style="color:#E1E4E8;">:{</span><span style="color:#9ECBFF;">&quot;$date&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;2021-12-16T22:51:45.308-05:00&quot;</span><span style="color:#E1E4E8;">},</span><span style="color:#9ECBFF;">&quot;s&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;I&quot;</span><span style="color:#E1E4E8;">,  </span><span style="color:#9ECBFF;">&quot;c&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;COMMAND&quot;</span><span style="color:#E1E4E8;">,  </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">51803</span><span style="color:#E1E4E8;">,   </span><span style="color:#9ECBFF;">&quot;ctx&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;conn2&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;msg&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;Slow query&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;attr&quot;</span><span style="color:#E1E4E8;">:{</span><span style="color:#9ECBFF;">&quot;type&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;command&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;ns&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;shijiange.myuser&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;appName&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;mongosh 1.1.6&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;command&quot;</span><span style="color:#E1E4E8;">:{</span><span style="color:#9ECBFF;">&quot;find&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;myuser&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;filter&quot;</span><span style="color:#E1E4E8;">:{</span><span style="color:#9ECBFF;">&quot;age&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">9999</span><span style="color:#E1E4E8;">},</span><span style="color:#9ECBFF;">&quot;lsid&quot;</span><span style="color:#E1E4E8;">:{</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;">:{</span><span style="color:#9ECBFF;">&quot;$uuid&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;5d6c3e2a-fc12-4827-9e9e-e998705691b5&quot;</span><span style="color:#E1E4E8;">}},</span><span style="color:#9ECBFF;">&quot;$db&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;shijiange&quot;</span><span style="color:#E1E4E8;">},</span><span style="color:#9ECBFF;">&quot;planSummary&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;COLLSCAN&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;keysExamined&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;docsExamined&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">500006</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;cursorExhausted&quot;</span><span style="color:#E1E4E8;">:true,</span><span style="color:#9ECBFF;">&quot;numYields&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;nreturned&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;queryHash&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;3838C5F3&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;planCacheKey&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;BB98D80C&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;reslen&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">160</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;locks&quot;</span><span style="color:#E1E4E8;">:{</span><span style="color:#9ECBFF;">&quot;Global&quot;</span><span style="color:#E1E4E8;">:{</span><span style="color:#9ECBFF;">&quot;acquireCount&quot;</span><span style="color:#E1E4E8;">:{</span><span style="color:#9ECBFF;">&quot;r&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">501</span><span style="color:#E1E4E8;">}},</span><span style="color:#9ECBFF;">&quot;Mutex&quot;</span><span style="color:#E1E4E8;">:{</span><span style="color:#9ECBFF;">&quot;acquireCount&quot;</span><span style="color:#E1E4E8;">:{</span><span style="color:#9ECBFF;">&quot;r&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">}}},</span><span style="color:#9ECBFF;">&quot;storage&quot;</span><span style="color:#E1E4E8;">:{},</span><span style="color:#9ECBFF;">&quot;remote&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;127.0.0.1:58358&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;protocol&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;op_msg&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;durationMillis&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">162</span><span style="color:#E1E4E8;">}}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">use</span><span style="color:#24292E;"> shijiange</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;">(i</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">&lt;=</span><span style="color:#005CC5;">500000</span><span style="color:#24292E;">;i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.</span><span style="color:#D73A49;">insert</span><span style="color:#24292E;">( {</span><span style="color:#D73A49;">name</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&#39;mytest&#39;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">i, age:i} )</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">#统计条数</span></span>
<span class="line"><span style="color:#24292E;">shijiange</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.countDocuments()</span></span>
<span class="line"><span style="color:#005CC5;">354739</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">mongodb有慢查询的概念，</span><span style="color:#005CC5;">默认是超过100ms会记录慢日志mongodb</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">log</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">getProfilingStatus</span><span style="color:#24292E;">()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">shijiange</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">db</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">myuser</span><span style="color:#24292E;">.find( {age:</span><span style="color:#005CC5;">9999</span><span style="color:#24292E;">} )</span></span>
<span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    _id: ObjectId(</span><span style="color:#032F62;">&quot;61bc0505b9c7cadcc9dd54fb&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;mytest9999&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    age: </span><span style="color:#005CC5;">9999</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">#需要花费162ms</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{</span><span style="color:#032F62;">&quot;t&quot;</span><span style="color:#24292E;">:{</span><span style="color:#032F62;">&quot;$date&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;2021-12-16T22:51:45.308-05:00&quot;</span><span style="color:#24292E;">},</span><span style="color:#032F62;">&quot;s&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;I&quot;</span><span style="color:#24292E;">,  </span><span style="color:#032F62;">&quot;c&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;COMMAND&quot;</span><span style="color:#24292E;">,  </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">51803</span><span style="color:#24292E;">,   </span><span style="color:#032F62;">&quot;ctx&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;conn2&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;msg&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;Slow query&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;attr&quot;</span><span style="color:#24292E;">:{</span><span style="color:#032F62;">&quot;type&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;command&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;ns&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;shijiange.myuser&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;appName&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;mongosh 1.1.6&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;command&quot;</span><span style="color:#24292E;">:{</span><span style="color:#032F62;">&quot;find&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;myuser&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;filter&quot;</span><span style="color:#24292E;">:{</span><span style="color:#032F62;">&quot;age&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">9999</span><span style="color:#24292E;">},</span><span style="color:#032F62;">&quot;lsid&quot;</span><span style="color:#24292E;">:{</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">:{</span><span style="color:#032F62;">&quot;$uuid&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;5d6c3e2a-fc12-4827-9e9e-e998705691b5&quot;</span><span style="color:#24292E;">}},</span><span style="color:#032F62;">&quot;$db&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;shijiange&quot;</span><span style="color:#24292E;">},</span><span style="color:#032F62;">&quot;planSummary&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;COLLSCAN&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;keysExamined&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;docsExamined&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">500006</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;cursorExhausted&quot;</span><span style="color:#24292E;">:true,</span><span style="color:#032F62;">&quot;numYields&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">500</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;nreturned&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;queryHash&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;3838C5F3&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;planCacheKey&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;BB98D80C&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;reslen&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">160</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;locks&quot;</span><span style="color:#24292E;">:{</span><span style="color:#032F62;">&quot;Global&quot;</span><span style="color:#24292E;">:{</span><span style="color:#032F62;">&quot;acquireCount&quot;</span><span style="color:#24292E;">:{</span><span style="color:#032F62;">&quot;r&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">501</span><span style="color:#24292E;">}},</span><span style="color:#032F62;">&quot;Mutex&quot;</span><span style="color:#24292E;">:{</span><span style="color:#032F62;">&quot;acquireCount&quot;</span><span style="color:#24292E;">:{</span><span style="color:#032F62;">&quot;r&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">}}},</span><span style="color:#032F62;">&quot;storage&quot;</span><span style="color:#24292E;">:{},</span><span style="color:#032F62;">&quot;remote&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;127.0.0.1:58358&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;protocol&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;op_msg&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;durationMillis&quot;</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">162</span><span style="color:#24292E;">}}</span></span></code></pre></div><h3 id="explain" tabindex="-1">explain <a class="header-anchor" href="#explain" aria-label="Permalink to &quot;explain&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">shijiange&gt; db.myuser.find( {age:9999} ).explain(true)</span></span>
<span class="line"><span style="color:#e1e4e8;">{</span></span>
<span class="line"><span style="color:#e1e4e8;">  explainVersion: &#39;1&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">  queryPlanner: {</span></span>
<span class="line"><span style="color:#e1e4e8;">    namespace: &#39;shijiange.myuser&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">    indexFilterSet: false,</span></span>
<span class="line"><span style="color:#e1e4e8;">    parsedQuery: { age: { &#39;$eq&#39;: 9999 } },</span></span>
<span class="line"><span style="color:#e1e4e8;">    maxIndexedOrSolutionsReached: false,</span></span>
<span class="line"><span style="color:#e1e4e8;">    maxIndexedAndSolutionsReached: false,</span></span>
<span class="line"><span style="color:#e1e4e8;">    maxScansToExplodeReached: false,</span></span>
<span class="line"><span style="color:#e1e4e8;">    winningPlan: {</span></span>
<span class="line"><span style="color:#e1e4e8;">      stage: &#39;COLLSCAN&#39;,  #----------------------&gt;&gt;注意这里，collscan全表扫描</span></span>
<span class="line"><span style="color:#e1e4e8;">      filter: { age: { &#39;$eq&#39;: 9999 } },</span></span>
<span class="line"><span style="color:#e1e4e8;">      direction: &#39;forward&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">    },</span></span>
<span class="line"><span style="color:#e1e4e8;">    rejectedPlans: []</span></span>
<span class="line"><span style="color:#e1e4e8;">  },</span></span>
<span class="line"><span style="color:#e1e4e8;">  executionStats: {</span></span>
<span class="line"><span style="color:#e1e4e8;">    executionSuccess: true,</span></span>
<span class="line"><span style="color:#e1e4e8;">    nReturned: 1,</span></span>
<span class="line"><span style="color:#e1e4e8;">    executionTimeMillis: 166,-----------》》执行时间ms</span></span>
<span class="line"><span style="color:#e1e4e8;">    totalKeysExamined: 0,</span></span>
<span class="line"><span style="color:#e1e4e8;">    totalDocsExamined: 500006,</span></span>
<span class="line"><span style="color:#e1e4e8;">    executionStages: {</span></span>
<span class="line"><span style="color:#e1e4e8;">      stage: &#39;COLLSCAN&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">      filter: { age: { &#39;$eq&#39;: 9999 } },</span></span>
<span class="line"><span style="color:#e1e4e8;">      nReturned: 1,</span></span>
<span class="line"><span style="color:#e1e4e8;">      executionTimeMillisEstimate: 2,</span></span>
<span class="line"><span style="color:#e1e4e8;">      works: 500008,</span></span>
<span class="line"><span style="color:#e1e4e8;">      advanced: 1,</span></span>
<span class="line"><span style="color:#e1e4e8;">      needTime: 500006,</span></span>
<span class="line"><span style="color:#e1e4e8;">      needYield: 0,</span></span>
<span class="line"><span style="color:#e1e4e8;">      saveState: 500,</span></span>
<span class="line"><span style="color:#e1e4e8;">      restoreState: 500,</span></span>
<span class="line"><span style="color:#e1e4e8;">      isEOF: 1,</span></span>
<span class="line"><span style="color:#e1e4e8;">      direction: &#39;forward&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">      docsExamined: 500006</span></span>
<span class="line"><span style="color:#e1e4e8;">    },</span></span>
<span class="line"><span style="color:#e1e4e8;">    allPlansExecution: []</span></span>
<span class="line"><span style="color:#e1e4e8;">  },</span></span>
<span class="line"><span style="color:#e1e4e8;">  command: { find: &#39;myuser&#39;, filter: { age: 9999 }, &#39;$db&#39;: &#39;shijiange&#39; },</span></span>
<span class="line"><span style="color:#e1e4e8;">  serverInfo: {</span></span>
<span class="line"><span style="color:#e1e4e8;">    host: &#39;slave01&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">    port: 27017,</span></span>
<span class="line"><span style="color:#e1e4e8;">    version: &#39;5.0.5&#39;,</span></span>
<span class="line"><span style="color:#e1e4e8;">    gitVersion: &#39;d65fd89df3fc039b5c55933c0f71d647a54510ae&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">  },</span></span>
<span class="line"><span style="color:#e1e4e8;">  serverParameters: {</span></span>
<span class="line"><span style="color:#e1e4e8;">    internalQueryFacetBufferSizeBytes: 104857600,</span></span>
<span class="line"><span style="color:#e1e4e8;">    internalQueryFacetMaxOutputDocSizeBytes: 104857600,</span></span>
<span class="line"><span style="color:#e1e4e8;">    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,</span></span>
<span class="line"><span style="color:#e1e4e8;">    internalDocumentSourceGroupMaxMemoryBytes: 104857600,</span></span>
<span class="line"><span style="color:#e1e4e8;">    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,</span></span>
<span class="line"><span style="color:#e1e4e8;">    internalQueryProhibitBlockingMergeOnMongoS: 0,</span></span>
<span class="line"><span style="color:#e1e4e8;">    internalQueryMaxAddToSetBytes: 104857600,</span></span>
<span class="line"><span style="color:#e1e4e8;">    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600</span></span>
<span class="line"><span style="color:#e1e4e8;">  },</span></span>
<span class="line"><span style="color:#e1e4e8;">  ok: 1</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">shijiange&gt; db.myuser.find( {age:9999} ).explain(true)</span></span>
<span class="line"><span style="color:#24292e;">{</span></span>
<span class="line"><span style="color:#24292e;">  explainVersion: &#39;1&#39;,</span></span>
<span class="line"><span style="color:#24292e;">  queryPlanner: {</span></span>
<span class="line"><span style="color:#24292e;">    namespace: &#39;shijiange.myuser&#39;,</span></span>
<span class="line"><span style="color:#24292e;">    indexFilterSet: false,</span></span>
<span class="line"><span style="color:#24292e;">    parsedQuery: { age: { &#39;$eq&#39;: 9999 } },</span></span>
<span class="line"><span style="color:#24292e;">    maxIndexedOrSolutionsReached: false,</span></span>
<span class="line"><span style="color:#24292e;">    maxIndexedAndSolutionsReached: false,</span></span>
<span class="line"><span style="color:#24292e;">    maxScansToExplodeReached: false,</span></span>
<span class="line"><span style="color:#24292e;">    winningPlan: {</span></span>
<span class="line"><span style="color:#24292e;">      stage: &#39;COLLSCAN&#39;,  #----------------------&gt;&gt;注意这里，collscan全表扫描</span></span>
<span class="line"><span style="color:#24292e;">      filter: { age: { &#39;$eq&#39;: 9999 } },</span></span>
<span class="line"><span style="color:#24292e;">      direction: &#39;forward&#39;</span></span>
<span class="line"><span style="color:#24292e;">    },</span></span>
<span class="line"><span style="color:#24292e;">    rejectedPlans: []</span></span>
<span class="line"><span style="color:#24292e;">  },</span></span>
<span class="line"><span style="color:#24292e;">  executionStats: {</span></span>
<span class="line"><span style="color:#24292e;">    executionSuccess: true,</span></span>
<span class="line"><span style="color:#24292e;">    nReturned: 1,</span></span>
<span class="line"><span style="color:#24292e;">    executionTimeMillis: 166,-----------》》执行时间ms</span></span>
<span class="line"><span style="color:#24292e;">    totalKeysExamined: 0,</span></span>
<span class="line"><span style="color:#24292e;">    totalDocsExamined: 500006,</span></span>
<span class="line"><span style="color:#24292e;">    executionStages: {</span></span>
<span class="line"><span style="color:#24292e;">      stage: &#39;COLLSCAN&#39;,</span></span>
<span class="line"><span style="color:#24292e;">      filter: { age: { &#39;$eq&#39;: 9999 } },</span></span>
<span class="line"><span style="color:#24292e;">      nReturned: 1,</span></span>
<span class="line"><span style="color:#24292e;">      executionTimeMillisEstimate: 2,</span></span>
<span class="line"><span style="color:#24292e;">      works: 500008,</span></span>
<span class="line"><span style="color:#24292e;">      advanced: 1,</span></span>
<span class="line"><span style="color:#24292e;">      needTime: 500006,</span></span>
<span class="line"><span style="color:#24292e;">      needYield: 0,</span></span>
<span class="line"><span style="color:#24292e;">      saveState: 500,</span></span>
<span class="line"><span style="color:#24292e;">      restoreState: 500,</span></span>
<span class="line"><span style="color:#24292e;">      isEOF: 1,</span></span>
<span class="line"><span style="color:#24292e;">      direction: &#39;forward&#39;,</span></span>
<span class="line"><span style="color:#24292e;">      docsExamined: 500006</span></span>
<span class="line"><span style="color:#24292e;">    },</span></span>
<span class="line"><span style="color:#24292e;">    allPlansExecution: []</span></span>
<span class="line"><span style="color:#24292e;">  },</span></span>
<span class="line"><span style="color:#24292e;">  command: { find: &#39;myuser&#39;, filter: { age: 9999 }, &#39;$db&#39;: &#39;shijiange&#39; },</span></span>
<span class="line"><span style="color:#24292e;">  serverInfo: {</span></span>
<span class="line"><span style="color:#24292e;">    host: &#39;slave01&#39;,</span></span>
<span class="line"><span style="color:#24292e;">    port: 27017,</span></span>
<span class="line"><span style="color:#24292e;">    version: &#39;5.0.5&#39;,</span></span>
<span class="line"><span style="color:#24292e;">    gitVersion: &#39;d65fd89df3fc039b5c55933c0f71d647a54510ae&#39;</span></span>
<span class="line"><span style="color:#24292e;">  },</span></span>
<span class="line"><span style="color:#24292e;">  serverParameters: {</span></span>
<span class="line"><span style="color:#24292e;">    internalQueryFacetBufferSizeBytes: 104857600,</span></span>
<span class="line"><span style="color:#24292e;">    internalQueryFacetMaxOutputDocSizeBytes: 104857600,</span></span>
<span class="line"><span style="color:#24292e;">    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,</span></span>
<span class="line"><span style="color:#24292e;">    internalDocumentSourceGroupMaxMemoryBytes: 104857600,</span></span>
<span class="line"><span style="color:#24292e;">    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,</span></span>
<span class="line"><span style="color:#24292e;">    internalQueryProhibitBlockingMergeOnMongoS: 0,</span></span>
<span class="line"><span style="color:#24292e;">    internalQueryMaxAddToSetBytes: 104857600,</span></span>
<span class="line"><span style="color:#24292e;">    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600</span></span>
<span class="line"><span style="color:#24292e;">  },</span></span>
<span class="line"><span style="color:#24292e;">  ok: 1</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><h3 id="查询索引" tabindex="-1">查询索引 <a class="header-anchor" href="#查询索引" aria-label="Permalink to &quot;查询索引&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">shijiange&gt; db.myuser.getIndexes()</span></span>
<span class="line"><span style="color:#e1e4e8;">[ { v: 2, key: { _id: 1 }, name: &#39;_id_&#39; } ]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">shijiange&gt; db.myuser.getIndexes()</span></span>
<span class="line"><span style="color:#24292e;">[ { v: 2, key: { _id: 1 }, name: &#39;_id_&#39; } ]</span></span></code></pre></div><h3 id="查索引大小" tabindex="-1">查索引大小 <a class="header-anchor" href="#查索引大小" aria-label="Permalink to &quot;查索引大小&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.collection.totalIndexSize()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.collection.totalIndexSize()</span></span></code></pre></div><h3 id="添加索引" tabindex="-1">添加索引 <a class="header-anchor" href="#添加索引" aria-label="Permalink to &quot;添加索引&quot;">​</a></h3><h4 id="升序索引" tabindex="-1">升序索引 <a class="header-anchor" href="#升序索引" aria-label="Permalink to &quot;升序索引&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#增加age的升序索引</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.createIndex({ &#39;age&#39;: 1 })</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#或者</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.ensureIndex( {age:1} )</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.getIndexes()</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.find( {age:9999} )</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.find( {age:9999} ).explain(true)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#增加age的升序索引</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.createIndex({ &#39;age&#39;: 1 })</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#或者</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.ensureIndex( {age:1} )</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">db.myuser.getIndexes()</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.find( {age:9999} )</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.find( {age:9999} ).explain(true)</span></span></code></pre></div><h4 id="后台创建索引" tabindex="-1">后台创建索引 <a class="header-anchor" href="#后台创建索引" aria-label="Permalink to &quot;后台创建索引&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.collection.createIndex({ &#39;name&#39;: 1,&#39;createTime&#39;: -1 }, { background: true })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.collection.createIndex({ &#39;name&#39;: 1,&#39;createTime&#39;: -1 }, { background: true })</span></span></code></pre></div><p>前台操作，它会阻塞用户对数据的读写操作直到索引构建完毕；后台模式，不阻塞数据读写操作，独立的后台线程异步构建索引，此时仍然允许对数据的读写操作。<strong>创建索引时一定要写{ background: true }</strong></p><h4 id="唯一索引" tabindex="-1">唯一索引 <a class="header-anchor" href="#唯一索引" aria-label="Permalink to &quot;唯一索引&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.collection.createIndex({ &#39;name&#39;: 1 }, { unique: true })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.collection.createIndex({ &#39;name&#39;: 1 }, { unique: true })</span></span></code></pre></div><p>唯一索引是索引具有的一种属性，让索引具备唯一性，确保这张表中，该条索引数据不会重复出现。在每一次insert和update操作时，都会进行索引的唯一性校验，保证该索引的字段组合在表中唯一</p><h4 id="时间索引" tabindex="-1">时间索引 <a class="header-anchor" href="#时间索引" aria-label="Permalink to &quot;时间索引&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.collection.createIndex({ &#39;createTime&#39;: -1 }, { expireAfterSeconds: 180 })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.collection.createIndex({ &#39;createTime&#39;: -1 }, { expireAfterSeconds: 180 })</span></span></code></pre></div><p>需要注意，使用expireAfterSeconds选项时候，索引关键字段必须是 Date 类型，只支持单字段索引，删除操作非立即执行，默认60秒扫描一次Document数据</p><h4 id="索引-1" tabindex="-1">索引 <a class="header-anchor" href="#索引-1" aria-label="Permalink to &quot;索引&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.collection.createIndex({ &#39;name&#39;: 1 })</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">db.collection.find({ </span></span>
<span class="line"><span style="color:#e1e4e8;">  &#39;name&#39;: { $regex: &#39;其他&#39; }</span></span>
<span class="line"><span style="color:#e1e4e8;">}).explain(&#39;executionStats&#39;)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.collection.createIndex({ &#39;name&#39;: 1 })</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">db.collection.find({ </span></span>
<span class="line"><span style="color:#24292e;">  &#39;name&#39;: { $regex: &#39;其他&#39; }</span></span>
<span class="line"><span style="color:#24292e;">}).explain(&#39;executionStats&#39;)</span></span></code></pre></div><h3 id="删除索引" tabindex="-1">删除索引 <a class="header-anchor" href="#删除索引" aria-label="Permalink to &quot;删除索引&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.collection.dropIndexes() //删除所有所有， _id 索引会除外</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">db.collection.dropIndex(&#39;name&#39;) //删除上述name索引</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">db.collection.dropIndex({ &#39;name&#39;: 1}) //删除name升序索引</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.collection.dropIndexes() //删除所有所有， _id 索引会除外</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">db.collection.dropIndex(&#39;name&#39;) //删除上述name索引</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">db.collection.dropIndex({ &#39;name&#39;: 1}) //删除name升序索引</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.myuser.dropIndex( {age:1} )</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">使用正则的话，索引无效果</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.find( {&quot;name&quot;:&quot;mytest1&quot;} )</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.ensureIndex( {name:1} )			#添加索引</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.find( {&quot;name&quot;:&quot;mytest6&quot;} )</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.find( {&quot;name&quot;:/99999/} )</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.find( {&quot;name&quot;:/99999/} ).explain(true)		#使用正则，全表扫描，也是慢</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.myuser.dropIndex( {age:1} )</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">使用正则的话，索引无效果</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.find( {&quot;name&quot;:&quot;mytest1&quot;} )</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.ensureIndex( {name:1} )			#添加索引</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.find( {&quot;name&quot;:&quot;mytest6&quot;} )</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.find( {&quot;name&quot;:/99999/} )</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.find( {&quot;name&quot;:/99999/} ).explain(true)		#使用正则，全表扫描，也是慢</span></span></code></pre></div><h3 id="唯一索引-1" tabindex="-1">唯一索引 <a class="header-anchor" href="#唯一索引-1" aria-label="Permalink to &quot;唯一索引&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#唯一索引对应的值不能重复</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">use shijiange</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.insert( {userid:1} )</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.insert( {userid:1} )</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.remove({}) 		#清空数据</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.ensureIndex( {userid:1},{unique:true} ) 	#创建唯一索引</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.insert( {userid:1} )</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.insert( {userid:2} )</span></span>
<span class="line"><span style="color:#e1e4e8;">db.myuser.insert( {userid:1} ) 					#因为是唯一索引，所以会报错</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#唯一索引对应的值不能重复</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">use shijiange</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.insert( {userid:1} )</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.insert( {userid:1} )</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.remove({}) 		#清空数据</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.ensureIndex( {userid:1},{unique:true} ) 	#创建唯一索引</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.insert( {userid:1} )</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.insert( {userid:2} )</span></span>
<span class="line"><span style="color:#24292e;">db.myuser.insert( {userid:1} ) 					#因为是唯一索引，所以会报错</span></span></code></pre></div><h3 id="重建索引" tabindex="-1">重建索引 <a class="header-anchor" href="#重建索引" aria-label="Permalink to &quot;重建索引&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.collection.reIndex()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.collection.reIndex()</span></span></code></pre></div><p>一般是在collection经过很多次修改后，导致collection的文件产生空洞，这时候就会使用到这个方法，通过索引的重建，减少索引文件碎片，并提高索引的效率。</p><p>但是重建索引需要遍历整个collection，在数据量很大的情况下，这个过程会非常的慢</p><h3 id="修改索引" tabindex="-1">修改索引 <a class="header-anchor" href="#修改索引" aria-label="Permalink to &quot;修改索引&quot;">​</a></h3><p>若要修改现有索引，则需要删除现有索引并重新创建索引</p><h2 id="索引类型" tabindex="-1">索引类型 <a class="header-anchor" href="#索引类型" aria-label="Permalink to &quot;索引类型&quot;">​</a></h2><h3 id="单键索引-single-field" tabindex="-1">单键索引（Single Field） <a class="header-anchor" href="#单键索引-single-field" aria-label="Permalink to &quot;单键索引（Single Field）&quot;">​</a></h3><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202401100942641.jpg" alt=""></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{ key: 1 }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{ key: 1 }</span></span></code></pre></div><p>在默认情况下，所有collection在 <strong>_id</strong> 字段上都有一个索引，应用程序和用户可以添加额外的索引来支持重要的查询操作。</p><p>对于单字段索引和排序操作，索引键的排序顺序（即升序或降序）无关紧要，因为 MongoDB 可以在任意方向上遍历索引</p><h3 id="复合索引-compound-index" tabindex="-1">复合索引（Compound Index） <a class="header-anchor" href="#复合索引-compound-index" aria-label="Permalink to &quot;复合索引（Compound Index）&quot;">​</a></h3><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202401100942979.jpg" alt=""></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{ key1: 1, key2: 1 }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{ key1: 1, key2: 1 }</span></span></code></pre></div><p>复合索引就是多个字段一起匹配，需要注意的是，<strong>在建立复合索引的时候一定要注意顺序的问题，顺序不同将导致查询的结果也不相同</strong></p><h3 id="多键值索引-multikey-index" tabindex="-1">多键值索引（Multikey Index） <a class="header-anchor" href="#多键值索引-multikey-index" aria-label="Permalink to &quot;多键值索引（Multikey Index）&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{ &#39;key.sub_key&#39;: 1 }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{ &#39;key.sub_key&#39;: 1 }</span></span></code></pre></div><p>也被称为&quot;数组索引&quot;，可以对包含数组的字段建立索引。</p><p>MongoDB会为数组中的每个元素创建索引键，这些多键值索引支持对数组字段的高效查询。</p><blockquote><p>对数组建立索引的代价是非常高的，它实际上是会对数组中的每一项都单独建立索引，就相当于假设数组中有十项，那么就会在原基础上，多出十倍的索引大小。所以在MongoDB中是禁止对两个数组添加复合索引的，对两个数组添加索引那么索引大小将是爆炸增长</p></blockquote><h3 id="地理位置索引-geospatial-index" tabindex="-1">地理位置索引（Geospatial Index） <a class="header-anchor" href="#地理位置索引-geospatial-index" aria-label="Permalink to &quot;地理位置索引（Geospatial Index）&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{ key: &#39;2d&#39; }</span></span>
<span class="line"><span style="color:#e1e4e8;">{ key: &#39;2dsphere&#39; }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{ key: &#39;2d&#39; }</span></span>
<span class="line"><span style="color:#24292e;">{ key: &#39;2dsphere&#39; }</span></span></code></pre></div><p>对于保存的经纬度数据字段中，建立地理位置索引可以高效的实现查询，比如说&quot;查找附近的人&quot;，&quot;查找附近的商家&quot;等。</p><p>MongoDB提供两种索引：2D索引和2D球面索引，一种是以平面几何的结果输出，另一种是以球面几何的结果输出。目前这类索引在工作中使用较少</p><h3 id="全文索引-text-indexes" tabindex="-1">全文索引（Text Indexes） <a class="header-anchor" href="#全文索引-text-indexes" aria-label="Permalink to &quot;全文索引（Text Indexes）&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{ key: &#39;text&#39; }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{ key: &#39;text&#39; }</span></span></code></pre></div><p>使用全文索引查找关键词：mongodb</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.collection.find({ $text: { $search: &#39;mongodb&#39; } })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.collection.find({ $text: { $search: &#39;mongodb&#39; } })</span></span></code></pre></div><p>建立全文索引:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">db.collection.createIndex({ author: &#39;text&#39;, description: &#39;text&#39; })</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">db.collection.createIndex({ author: &#39;text&#39;, description: &#39;text&#39; })</span></span></code></pre></div><h3 id="哈希索引-hashed-indexes" tabindex="-1">哈希索引（Hashed Indexes） <a class="header-anchor" href="#哈希索引-hashed-indexes" aria-label="Permalink to &quot;哈希索引（Hashed Indexes）&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{ key: &#39;hashed&#39; }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{ key: &#39;hashed&#39; }</span></span></code></pre></div><p>是指按照某个字段的hash值来建立索引，它的速度比普通索引快，但是无法进行范围查询进行优化，适宜于随机性强的散列。</p><p>哈希索引可以用作哈希分片键来对数据进行分片。基于哈希的分片将字段的哈希索引用作分片键，以跨分片群集对数据进行分区，使用哈希分片键对集合进行分片使数据分布更随机</p><h1 id="_2-修复数据库" tabindex="-1">2.修复数据库 <a class="header-anchor" href="#_2-修复数据库" aria-label="Permalink to &quot;2.修复数据库&quot;">​</a></h1><p>在MongoDB中4.0.3，对 WiredTiger 引擎，使用该命令会进行以下操作</p><ul><li>重建所有索引</li><li>丢弃损坏的数据</li><li>为残缺的元数据创建存根文件。</li></ul><p>对于MMAPv1 引擎</p><ul><li>重建所有索引</li><li>丢弃损坏的数据</li></ul><p>数据恢复流程：</p><ol><li><p>先备份现有的数据</p><p>我们可以用 cp 命令将现有的数据的整个目录的所有文件都备份一份。</p></li><li><p>使用 mongod --repair</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 针对 所有数据库，停止服务</span></span>
<span class="line"><span style="color:#B392F0;">mongod</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--repair</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 针对 单个数据库</span></span>
<span class="line"><span style="color:#B392F0;">mongod</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--dbpath</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/opt/mongodb/data/djx</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">--repair</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 针对 所有数据库，停止服务</span></span>
<span class="line"><span style="color:#6F42C1;">mongod</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--repair</span><span style="color:#24292E;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 针对 单个数据库</span></span>
<span class="line"><span style="color:#6F42C1;">mongod</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--dbpath</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/opt/mongodb/data/djx</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">--repair</span></span></code></pre></div></li></ol><h1 id="_3-关闭数据库" tabindex="-1">3.关闭数据库 <a class="header-anchor" href="#_3-关闭数据库" aria-label="Permalink to &quot;3.关闭数据库&quot;">​</a></h1><h2 id="mongo-shell" tabindex="-1">mongo_shell <a class="header-anchor" href="#mongo-shell" aria-label="Permalink to &quot;mongo_shell&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#支持tab命令补齐</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; use admin;</span></span>
<span class="line"><span style="color:#e1e4e8;">switched to db admin</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.shutdownServer()</span></span>
<span class="line"><span style="color:#e1e4e8;">server should be down...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#支持tab命令补齐</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&gt; use admin;</span></span>
<span class="line"><span style="color:#24292e;">switched to db admin</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&gt; db.shutdownServer()</span></span>
<span class="line"><span style="color:#24292e;">server should be down...</span></span></code></pre></div><h2 id="shell" tabindex="-1">shell <a class="header-anchor" href="#shell" aria-label="Permalink to &quot;shell&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">sudo -u mongod mongod  -f /data/mongodb/conf/mongodb.conf --shutdown</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">sudo -u mongod mongod  -f /data/mongodb/conf/mongodb.conf --shutdown</span></span></code></pre></div><h1 id="_4-删除数据库" tabindex="-1">4.删除数据库 <a class="header-anchor" href="#_4-删除数据库" aria-label="Permalink to &quot;4.删除数据库&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#当库中没有表的时候，mongodb 自动清理库</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt;use test</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt;db.dropDatabase()</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#或者</span></span>
<span class="line"><span style="color:#e1e4e8;">mongod --shutdown --dbpath /data/mongodb/data</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#当库中没有表的时候，mongodb 自动清理库</span></span>
<span class="line"><span style="color:#24292e;">&gt;use test</span></span>
<span class="line"><span style="color:#24292e;">&gt;db.dropDatabase()</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#或者</span></span>
<span class="line"><span style="color:#24292e;">mongod --shutdown --dbpath /data/mongodb/data</span></span></code></pre></div><h1 id="_5-非交互式" tabindex="-1">5.非交互式 <a class="header-anchor" href="#_5-非交互式" aria-label="Permalink to &quot;5.非交互式&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">echo &#39;db.serverStatus()&#39; | mongo 127.0.0.1:27017</span></span>
<span class="line"><span style="color:#e1e4e8;">echo &#39;db.serverStatus().opcounters&#39; | mongo 127.0.0.1:27017</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">echo &#39;db.serverStatus()&#39; | mongo 127.0.0.1:27017</span></span>
<span class="line"><span style="color:#24292e;">echo &#39;db.serverStatus().opcounters&#39; | mongo 127.0.0.1:27017</span></span></code></pre></div><h1 id="_6-文档事务" tabindex="-1">6.文档事务 <a class="header-anchor" href="#_6-文档事务" aria-label="Permalink to &quot;6.文档事务&quot;">​</a></h1><h2 id="acid支持程度" tabindex="-1">ACID支持程度 <a class="header-anchor" href="#acid支持程度" aria-label="Permalink to &quot;ACID支持程度&quot;">​</a></h2><table><thead><tr><th>事务属性</th><th>支持程度</th></tr></thead><tbody><tr><td>Atomocity 原子性</td><td>单表单文档：1.x 就开始支持 复制集多表多行：4.0 开始支持 分片集多表多行：4.2 开始支持</td></tr><tr><td>Consistency 一致性</td><td>writeConcern, readConcern</td></tr><tr><td>Isolation 隔离性</td><td>readConcern</td></tr><tr><td>Durability 持久性</td><td>Journal and Replication</td></tr></tbody></table><h2 id="多文档事务使用方法" tabindex="-1">多文档事务使用方法 <a class="header-anchor" href="#多文档事务使用方法" aria-label="Permalink to &quot;多文档事务使用方法&quot;">​</a></h2><p>MongoDB多文档事务的使用方式与关系型数据库基本类似。</p><p><code>但是需要注意的是：多文档事务只能应用在副本集 或 mongos 节点上。如果你只是一个单点的mongo实例，是无法进行多文档事务实践的</code></p><ul><li>shell下</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">var session = db.getMongo().startSession();</span></span>
<span class="line"><span style="color:#e1e4e8;">session.startTransaction({readConcern: { level: &#39;majority&#39; },writeConcern: { w: &#39;majority&#39; }});</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">var coll1 = session.getDatabase(&#39;students&#39;).getCollection(&#39;teams&#39;);</span></span>
<span class="line"><span style="color:#e1e4e8;">coll1.update({name: &#39;yzw-football-team&#39;}, {$set: {members: 20}});</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">var coll2 = session.getDatabase(&#39;students&#39;).getCollection(&#39;records&#39;);</span></span>
<span class="line"><span style="color:#e1e4e8;">coll1.update({name: &#39;Edison&#39;}, {$set: {gender: &#39;Female&#39;}});</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">// 成功提交事务</span></span>
<span class="line"><span style="color:#e1e4e8;">session.commitTransaction();</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">// 失败事务回滚</span></span>
<span class="line"><span style="color:#e1e4e8;">session.abortTransaction();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">var session = db.getMongo().startSession();</span></span>
<span class="line"><span style="color:#24292e;">session.startTransaction({readConcern: { level: &#39;majority&#39; },writeConcern: { w: &#39;majority&#39; }});</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">var coll1 = session.getDatabase(&#39;students&#39;).getCollection(&#39;teams&#39;);</span></span>
<span class="line"><span style="color:#24292e;">coll1.update({name: &#39;yzw-football-team&#39;}, {$set: {members: 20}});</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">var coll2 = session.getDatabase(&#39;students&#39;).getCollection(&#39;records&#39;);</span></span>
<span class="line"><span style="color:#24292e;">coll1.update({name: &#39;Edison&#39;}, {$set: {gender: &#39;Female&#39;}});</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">// 成功提交事务</span></span>
<span class="line"><span style="color:#24292e;">session.commitTransaction();</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">// 失败事务回滚</span></span>
<span class="line"><span style="color:#24292e;">session.abortTransaction();</span></span></code></pre></div><h1 id="_7-慢日志" tabindex="-1">7.慢日志 <a class="header-anchor" href="#_7-慢日志" aria-label="Permalink to &quot;7.慢日志&quot;">​</a></h1><ul><li>配置文件设置yaml</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">operationProfiling:</span></span>
<span class="line"><span style="color:#e1e4e8;">    slowOpThresholdMs: 200  # 阈值，默认值为100，单位毫秒</span></span>
<span class="line"><span style="color:#e1e4e8;">    mode: slowOp      # 默认为 off，可选值 off、slowOp(对应上面的等级 1)、all(对应上面的等级 2) </span></span>
<span class="line"><span style="color:#e1e4e8;">    lowOpSampleRate: 0.42   #随机采集慢查询的百分比值，sampleRate 值默认为1，表示都采集，0.42 表示采集42%的内容</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">operationProfiling:</span></span>
<span class="line"><span style="color:#24292e;">    slowOpThresholdMs: 200  # 阈值，默认值为100，单位毫秒</span></span>
<span class="line"><span style="color:#24292e;">    mode: slowOp      # 默认为 off，可选值 off、slowOp(对应上面的等级 1)、all(对应上面的等级 2) </span></span>
<span class="line"><span style="color:#24292e;">    lowOpSampleRate: 0.42   #随机采集慢查询的百分比值，sampleRate 值默认为1，表示都采集，0.42 表示采集42%的内容</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#普通文件</span></span>
<span class="line"><span style="color:#e1e4e8;">#开启慢查询，200毫秒的记录</span></span>
<span class="line"><span style="color:#e1e4e8;">profile = 1</span></span>
<span class="line"><span style="color:#e1e4e8;">slowms = 200</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#普通文件</span></span>
<span class="line"><span style="color:#24292e;">#开启慢查询，200毫秒的记录</span></span>
<span class="line"><span style="color:#24292e;">profile = 1</span></span>
<span class="line"><span style="color:#24292e;">slowms = 200</span></span></code></pre></div><ul><li>通过mongo shell</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#针对某个库进行配置</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt;use test</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#查看状态：级别和时间</span></span>
<span class="line"><span style="color:#e1e4e8;">drug:PRIMARY&gt; db.getProfilingStatus()   </span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;was&quot; : 1, &quot;slowms&quot; : 100 }</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#查看级别</span></span>
<span class="line"><span style="color:#e1e4e8;">drug:PRIMARY&gt; db.getProfilingLevel()    </span></span>
<span class="line"><span style="color:#e1e4e8;">1</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#设置级别</span></span>
<span class="line"><span style="color:#e1e4e8;">drug:PRIMARY&gt; db.setProfilingLevel(2)</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;was&quot; : 1, &quot;slowms&quot; : 100, &quot;ok&quot; : 1 }</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#设置级别和时间</span></span>
<span class="line"><span style="color:#e1e4e8;">drug:PRIMARY&gt; db.setProfilingLevel(1,200)</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;was&quot; : 2, &quot;slowms&quot; : 100, &quot;ok&quot; : 1 }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#针对某个库进行配置</span></span>
<span class="line"><span style="color:#24292e;">&gt;use test</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#查看状态：级别和时间</span></span>
<span class="line"><span style="color:#24292e;">drug:PRIMARY&gt; db.getProfilingStatus()   </span></span>
<span class="line"><span style="color:#24292e;">{ &quot;was&quot; : 1, &quot;slowms&quot; : 100 }</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#查看级别</span></span>
<span class="line"><span style="color:#24292e;">drug:PRIMARY&gt; db.getProfilingLevel()    </span></span>
<span class="line"><span style="color:#24292e;">1</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#设置级别</span></span>
<span class="line"><span style="color:#24292e;">drug:PRIMARY&gt; db.setProfilingLevel(2)</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;was&quot; : 1, &quot;slowms&quot; : 100, &quot;ok&quot; : 1 }</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#设置级别和时间</span></span>
<span class="line"><span style="color:#24292e;">drug:PRIMARY&gt; db.setProfilingLevel(1,200)</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;was&quot; : 2, &quot;slowms&quot; : 100, &quot;ok&quot; : 1 }</span></span></code></pre></div><ul><li>启动时添加</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">mongod --profile=1 --slowms=200</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">mongod --profile=1 --slowms=200</span></span></code></pre></div><h2 id="修改慢日志大小" tabindex="-1">修改慢日志大小 <a class="header-anchor" href="#修改慢日志大小" aria-label="Permalink to &quot;修改慢日志大小&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#关闭Profiling</span></span>
<span class="line"><span style="color:#e1e4e8;">drug:PRIMARY&gt; db.setProfilingLevel(0)</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;was&quot; : 0, &quot;slowms&quot; : 200, &quot;ok&quot; : 1 }</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#删除system.profile集合</span></span>
<span class="line"><span style="color:#e1e4e8;">drug:PRIMARY&gt; db.system.profile.drop()</span></span>
<span class="line"><span style="color:#e1e4e8;">true</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#创建一个新的system.profile集合</span></span>
<span class="line"><span style="color:#e1e4e8;">drug:PRIMARY&gt; db.createCollection( &quot;system.profile&quot;, { capped: true, size:4000000 } )</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;ok&quot; : 1 }</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#重新开启Profiling</span></span>
<span class="line"><span style="color:#e1e4e8;">drug:PRIMARY&gt; db.setProfilingLevel(1)</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;was&quot; : 0, &quot;slowms&quot; : 200, &quot;ok&quot; : 1 }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#关闭Profiling</span></span>
<span class="line"><span style="color:#24292e;">drug:PRIMARY&gt; db.setProfilingLevel(0)</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;was&quot; : 0, &quot;slowms&quot; : 200, &quot;ok&quot; : 1 }</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#删除system.profile集合</span></span>
<span class="line"><span style="color:#24292e;">drug:PRIMARY&gt; db.system.profile.drop()</span></span>
<span class="line"><span style="color:#24292e;">true</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#创建一个新的system.profile集合</span></span>
<span class="line"><span style="color:#24292e;">drug:PRIMARY&gt; db.createCollection( &quot;system.profile&quot;, { capped: true, size:4000000 } )</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;ok&quot; : 1 }</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#重新开启Profiling</span></span>
<span class="line"><span style="color:#24292e;">drug:PRIMARY&gt; db.setProfilingLevel(1)</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;was&quot; : 0, &quot;slowms&quot; : 200, &quot;ok&quot; : 1 }</span></span></code></pre></div><p><code>注意：要改变Secondary的system.profile的大小，你必须停止Secondary，运行它作为一个独立的，然后再执行上述步骤。完成后，重新启动加入副本集</code></p><h2 id="查询命令" tabindex="-1">查询命令 <a class="header-anchor" href="#查询命令" aria-label="Permalink to &quot;查询命令&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"># 查询最近的10个慢查询日志</span></span>
<span class="line"><span style="color:#e1e4e8;">db.system.profile.find().limit(10).sort( { ts : -1 } ).pretty()</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"># 查询除命令类型为 ‘command’ 的日志</span></span>
<span class="line"><span style="color:#e1e4e8;">db.system.profile.find( { op: { $ne : &#39;command&#39; } } ).pretty()</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"># 查询数据库为 mydb 集合为 test 的 日志</span></span>
<span class="line"><span style="color:#e1e4e8;">db.system.profile.find( { ns : &#39;mydb.test&#39; } ).pretty()</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"># 查询 低于 5毫秒的日志</span></span>
<span class="line"><span style="color:#e1e4e8;">db.system.profile.find( { millis : { $gt : 5 } } ).pretty()</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"># 查询时间从 2012-12-09 3点整到 2012-12-09 3点40分之间的日志</span></span>
<span class="line"><span style="color:#e1e4e8;">db.system.profile.find({</span></span>
<span class="line"><span style="color:#e1e4e8;">ts : {</span></span>
<span class="line"><span style="color:#e1e4e8;">$gt: new ISODate(&quot;2012-12-09T03:00:00Z&quot;),</span></span>
<span class="line"><span style="color:#e1e4e8;">$lt: new ISODate(&quot;2012-12-09T03:40:00Z&quot;)</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span>
<span class="line"><span style="color:#e1e4e8;">}).pretty()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># 查询最近的10个慢查询日志</span></span>
<span class="line"><span style="color:#24292e;">db.system.profile.find().limit(10).sort( { ts : -1 } ).pretty()</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"># 查询除命令类型为 ‘command’ 的日志</span></span>
<span class="line"><span style="color:#24292e;">db.system.profile.find( { op: { $ne : &#39;command&#39; } } ).pretty()</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"># 查询数据库为 mydb 集合为 test 的 日志</span></span>
<span class="line"><span style="color:#24292e;">db.system.profile.find( { ns : &#39;mydb.test&#39; } ).pretty()</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"># 查询 低于 5毫秒的日志</span></span>
<span class="line"><span style="color:#24292e;">db.system.profile.find( { millis : { $gt : 5 } } ).pretty()</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"># 查询时间从 2012-12-09 3点整到 2012-12-09 3点40分之间的日志</span></span>
<span class="line"><span style="color:#24292e;">db.system.profile.find({</span></span>
<span class="line"><span style="color:#24292e;">ts : {</span></span>
<span class="line"><span style="color:#24292e;">$gt: new ISODate(&quot;2012-12-09T03:00:00Z&quot;),</span></span>
<span class="line"><span style="color:#24292e;">$lt: new ISODate(&quot;2012-12-09T03:40:00Z&quot;)</span></span>
<span class="line"><span style="color:#24292e;">}</span></span>
<span class="line"><span style="color:#24292e;">}).pretty()</span></span></code></pre></div><ul><li>排查方式</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">&gt; use test</span></span>
<span class="line"><span style="color:#e1e4e8;">switched to db test</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.stats()</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">&gt;db.serverStatus()</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#查看正在执行哪些语句</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt; db.currentOp()</span></span>
<span class="line"><span style="color:#e1e4e8;">{ &quot;opid&quot; : &quot;shard3:466404288&quot;, &quot;active&quot; : false....}</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">#kill</span></span>
<span class="line"><span style="color:#e1e4e8;">&gt;db.killOp(&quot;shard3:466404288&quot;)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">&gt; use test</span></span>
<span class="line"><span style="color:#24292e;">switched to db test</span></span>
<span class="line"><span style="color:#24292e;">&gt; db.stats()</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&gt;db.serverStatus()</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#查看正在执行哪些语句</span></span>
<span class="line"><span style="color:#24292e;">&gt; db.currentOp()</span></span>
<span class="line"><span style="color:#24292e;">{ &quot;opid&quot; : &quot;shard3:466404288&quot;, &quot;active&quot; : false....}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">#kill</span></span>
<span class="line"><span style="color:#24292e;">&gt;db.killOp(&quot;shard3:466404288&quot;)</span></span></code></pre></div><h2 id="慢日志解析说明" tabindex="-1">慢日志解析说明 <a class="header-anchor" href="#慢日志解析说明" aria-label="Permalink to &quot;慢日志解析说明&quot;">​</a></h2><p>官方文档：<a href="https://docs.mongodb.com/manual/reference/database-profiler/" target="_blank" rel="noreferrer">https://docs.mongodb.com/manual/reference/database-profiler/</a></p><ul><li>部分说明</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">drug:PRIMARY&gt; db.system.profile.find().pretty()</span></span>
<span class="line"><span style="color:#e1e4e8;">{</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;op&quot; : &quot;query&quot;,    #操作类型，有insert、query、update、remove、getmore、command   </span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;ns&quot; : &quot;mc.user&quot;,  #操作的集合</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;query&quot; : {        #查询语句</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;mp_id&quot; : 5,</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;is_fans&quot; : 1,</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;latestTime&quot; : {</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;$ne&quot; : 0</span></span>
<span class="line"><span style="color:#e1e4e8;">        },</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;latestMsgId&quot; : {</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;$gt&quot; : 0</span></span>
<span class="line"><span style="color:#e1e4e8;">        },</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;$where&quot; : &quot;new Date(this.latestNormalTime)&gt;new Date(this.replyTime)&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">    },</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;cursorid&quot; : NumberLong(&quot;1475423943124458998&quot;),</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;ntoreturn&quot; : 0,   #返回的记录数。例如，profile命令将返回一个文档（一个结果文件），因此ntoreturn值将为1。limit(5)命令将返回五个文件，因此ntoreturn值是5。如果ntoreturn值为0，则该命令没有指定一些文件返回，因为会是这样一个简单的find()命令没有指定的限制。</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;ntoskip&quot; : 0,     #skip()方法指定的跳跃数</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;nscanned&quot; : 304,  #扫描数量</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;keyUpdates&quot; : 0,  #索引更新的数量，改变一个索引键带有一个小的性能开销，因为数据库必须删除旧的key，并插入一个新的key到B-树索引</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;numYield&quot; : 0,    #该查询为其他查询让出锁的次数</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;lockStats&quot; : {    #锁信息，R：全局读锁；W：全局写锁；r：特定数据库的读锁；w：特定数据库的写锁</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;timeLockedMicros&quot; : {     #锁</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;r&quot; : NumberLong(19467),</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;w&quot; : NumberLong(0)</span></span>
<span class="line"><span style="color:#e1e4e8;">        },</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;timeAcquiringMicros&quot; : {  #锁等待</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;r&quot; : NumberLong(7),</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;w&quot; : NumberLong(9)</span></span>
<span class="line"><span style="color:#e1e4e8;">        }</span></span>
<span class="line"><span style="color:#e1e4e8;">    },</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;nreturned&quot; : 101,        #返回的数量</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;responseLength&quot; : 74659, #响应字节长度</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;millis&quot; : 19,            #消耗的时间（毫秒）</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;ts&quot; : ISODate(&quot;2014-02-25T02:13:54.899Z&quot;), #语句执行的时间</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;client&quot; : &quot;127.0.0.1&quot;,   #链接ip或则主机</span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;allUsers&quot; : [ ],     </span></span>
<span class="line"><span style="color:#e1e4e8;">    &quot;user&quot; : &quot;&quot;               #用户</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">drug:PRIMARY&gt; db.system.profile.find().pretty()</span></span>
<span class="line"><span style="color:#24292e;">{</span></span>
<span class="line"><span style="color:#24292e;">    &quot;op&quot; : &quot;query&quot;,    #操作类型，有insert、query、update、remove、getmore、command   </span></span>
<span class="line"><span style="color:#24292e;">    &quot;ns&quot; : &quot;mc.user&quot;,  #操作的集合</span></span>
<span class="line"><span style="color:#24292e;">    &quot;query&quot; : {        #查询语句</span></span>
<span class="line"><span style="color:#24292e;">        &quot;mp_id&quot; : 5,</span></span>
<span class="line"><span style="color:#24292e;">        &quot;is_fans&quot; : 1,</span></span>
<span class="line"><span style="color:#24292e;">        &quot;latestTime&quot; : {</span></span>
<span class="line"><span style="color:#24292e;">            &quot;$ne&quot; : 0</span></span>
<span class="line"><span style="color:#24292e;">        },</span></span>
<span class="line"><span style="color:#24292e;">        &quot;latestMsgId&quot; : {</span></span>
<span class="line"><span style="color:#24292e;">            &quot;$gt&quot; : 0</span></span>
<span class="line"><span style="color:#24292e;">        },</span></span>
<span class="line"><span style="color:#24292e;">        &quot;$where&quot; : &quot;new Date(this.latestNormalTime)&gt;new Date(this.replyTime)&quot;</span></span>
<span class="line"><span style="color:#24292e;">    },</span></span>
<span class="line"><span style="color:#24292e;">    &quot;cursorid&quot; : NumberLong(&quot;1475423943124458998&quot;),</span></span>
<span class="line"><span style="color:#24292e;">    &quot;ntoreturn&quot; : 0,   #返回的记录数。例如，profile命令将返回一个文档（一个结果文件），因此ntoreturn值将为1。limit(5)命令将返回五个文件，因此ntoreturn值是5。如果ntoreturn值为0，则该命令没有指定一些文件返回，因为会是这样一个简单的find()命令没有指定的限制。</span></span>
<span class="line"><span style="color:#24292e;">    &quot;ntoskip&quot; : 0,     #skip()方法指定的跳跃数</span></span>
<span class="line"><span style="color:#24292e;">    &quot;nscanned&quot; : 304,  #扫描数量</span></span>
<span class="line"><span style="color:#24292e;">    &quot;keyUpdates&quot; : 0,  #索引更新的数量，改变一个索引键带有一个小的性能开销，因为数据库必须删除旧的key，并插入一个新的key到B-树索引</span></span>
<span class="line"><span style="color:#24292e;">    &quot;numYield&quot; : 0,    #该查询为其他查询让出锁的次数</span></span>
<span class="line"><span style="color:#24292e;">    &quot;lockStats&quot; : {    #锁信息，R：全局读锁；W：全局写锁；r：特定数据库的读锁；w：特定数据库的写锁</span></span>
<span class="line"><span style="color:#24292e;">        &quot;timeLockedMicros&quot; : {     #锁</span></span>
<span class="line"><span style="color:#24292e;">            &quot;r&quot; : NumberLong(19467),</span></span>
<span class="line"><span style="color:#24292e;">            &quot;w&quot; : NumberLong(0)</span></span>
<span class="line"><span style="color:#24292e;">        },</span></span>
<span class="line"><span style="color:#24292e;">        &quot;timeAcquiringMicros&quot; : {  #锁等待</span></span>
<span class="line"><span style="color:#24292e;">            &quot;r&quot; : NumberLong(7),</span></span>
<span class="line"><span style="color:#24292e;">            &quot;w&quot; : NumberLong(9)</span></span>
<span class="line"><span style="color:#24292e;">        }</span></span>
<span class="line"><span style="color:#24292e;">    },</span></span>
<span class="line"><span style="color:#24292e;">    &quot;nreturned&quot; : 101,        #返回的数量</span></span>
<span class="line"><span style="color:#24292e;">    &quot;responseLength&quot; : 74659, #响应字节长度</span></span>
<span class="line"><span style="color:#24292e;">    &quot;millis&quot; : 19,            #消耗的时间（毫秒）</span></span>
<span class="line"><span style="color:#24292e;">    &quot;ts&quot; : ISODate(&quot;2014-02-25T02:13:54.899Z&quot;), #语句执行的时间</span></span>
<span class="line"><span style="color:#24292e;">    &quot;client&quot; : &quot;127.0.0.1&quot;,   #链接ip或则主机</span></span>
<span class="line"><span style="color:#24292e;">    &quot;allUsers&quot; : [ ],     </span></span>
<span class="line"><span style="color:#24292e;">    &quot;user&quot; : &quot;&quot;               #用户</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><p>主要看：</p><ul><li><p>ts：时间戳</p></li><li><p>info：具体的操作</p></li><li><p>millis：操作所花时间，毫秒</p></li><li><p><code>nscanned</code>数很大，或者接近记录总数，那么可能<code>没有用到索引查询</code>。</p></li><li><p><code>reslen</code>很大，有可能返回<code>没必要的字段</code>。</p></li><li><p><code>nreturned</code>很大，那么有可能查询的时候<code>没有加限制,加分页限制</code></p></li></ul><h2 id="mtool" tabindex="-1">mtool <a class="header-anchor" href="#mtool" aria-label="Permalink to &quot;mtool&quot;">​</a></h2><p><a href="https://blog.csdn.net/it_freshman/article/details/118583634" target="_blank" rel="noreferrer">https://blog.csdn.net/it_freshman/article/details/118583634</a></p><h1 id="_8-调用外shell脚本" tabindex="-1">8.调用外shell脚本 <a class="header-anchor" href="#_8-调用外shell脚本" aria-label="Permalink to &quot;8.调用外shell脚本&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">cat test.sh</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">use testdb;</span></span>
<span class="line"><span style="color:#e1e4e8;">db.test.insert({&quot;name&quot;:&quot;user4&quot;});</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"># mongo --port 27019 &lt; test.sh</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">cat test.sh</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">use testdb;</span></span>
<span class="line"><span style="color:#24292e;">db.test.insert({&quot;name&quot;:&quot;user4&quot;});</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"># mongo --port 27019 &lt; test.sh</span></span></code></pre></div>`,230),e=[p];function t(c,r,y,i,u,E){return a(),n("div",null,e)}const F=s(o,[["render",t]]);export{q as __pageData,F as default};
