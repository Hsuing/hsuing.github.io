import{_ as o,o as a,c as n,R as t}from"./chunks/framework.zUbWieqp.js";const _=JSON.parse('{"title":"1. 什么是 Amazon CloudFront ?","description":"","frontmatter":{},"headers":[],"relativePath":"guide/cloud/aws/cloudfront/index.md","filePath":"guide/cloud/aws/cloudfront/index.md","lastUpdated":1754397935000}'),e={name:"guide/cloud/aws/cloudfront/index.md"},l=t('<h1 id="_1-什么是-amazon-cloudfront" tabindex="-1">1. 什么是 Amazon <a href="https://docs.aws.amazon.com/zh_cn/AmazonCloudFront/latest/DeveloperGuide/Introduction.html" target="_blank" rel="noreferrer">CloudFront</a> ? <a class="header-anchor" href="#_1-什么是-amazon-cloudfront" aria-label="Permalink to &quot;1. 什么是 Amazon [CloudFront](https://docs.aws.amazon.com/zh_cn/AmazonCloudFront/latest/DeveloperGuide/Introduction.html) ?&quot;">​</a></h1><p>Amazon CloudFront 是 AWS 的 CDN，是一个用于加快将静态和动态的 Web 内容（如: .html, css, .js, 图片文件）分发给用户的Web 服务。举个简单的例子来说明。比如你在中国，想请求一张 Web 服务器位于美国的图片，在检索到图片之前，这个请求会从一个网络路由到另一个网络，在经历 n 多个路由后，才能到达该图片所在的服务器，这是一个非常大的跳数，同时会对性能、可用性和可靠性产生很大影响。但是如果将原始服务器与 CloudFront 关联（关联后 CloudFront 知道从哪些原始服务器获取资源），这时不再通过原始服务器访问图片，而是通过 CloudFront 分配的 URL 访问图片，则该请求将被路由到迟延最短的 CloudFront 边缘站点。如果该内容在迟延最短的 CloudFront 边缘站点的缓存中存在，则将直接从该边缘站点的缓存中返回图片。如果请求的内容不在该边缘站点的缓存中，才从源去取（请求的内容不在缓存中，这里写的比较笼统，这种情况下 CloudFront 是如何工作的，详细工作流程，见下面 Note 的解释）。这样大大减少了路由数，从而提高了性能。</p><h2 id="_1-1cdn优势" tabindex="-1">1.1CDN优势 <a class="header-anchor" href="#_1-1cdn优势" aria-label="Permalink to &quot;1.1CDN优势&quot;">​</a></h2><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202311301431842.png" alt="优势"></p><h2 id="_1-2cdn技术支持" tabindex="-1">1.2CDN技术支持 <a class="header-anchor" href="#_1-2cdn技术支持" aria-label="Permalink to &quot;1.2CDN技术支持&quot;">​</a></h2><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202311301431846.png" alt="CDN技术支持势"></p><h1 id="_2-cloudfront" tabindex="-1">2.CloudFront <a class="header-anchor" href="#_2-cloudfront" aria-label="Permalink to &quot;2.CloudFront&quot;">​</a></h1><ul><li>使用和部署</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202311301431824.png" alt="使用和部署"></p><ul><li>相关概念</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202311301431730.png" alt="相关概念"></p><ul><li>交互与安全</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202311301431631.png" alt="交互与安全"></p>',13),s=[l];function r(c,d,i,u,h,m){return a(),n("div",null,s)}const g=o(e,[["render",r]]);export{_ as __pageData,g as default};
