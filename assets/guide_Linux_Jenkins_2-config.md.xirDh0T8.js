import{_ as s,o as a,c as n,R as p}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"1. 修改JVM内存大小","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/Jenkins/2-config.md","filePath":"guide/Linux/Jenkins/2-config.md","lastUpdated":1720533756000}'),l={name:"guide/Linux/Jenkins/2-config.md"},e=p(`<h1 id="_1-修改jvm内存大小" tabindex="-1">1. 修改JVM内存大小 <a class="header-anchor" href="#_1-修改jvm内存大小" aria-label="Permalink to &quot;1. 修改JVM内存大小&quot;">​</a></h1><p>以tomcat启动方式</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"># 进入到 Jenkins 运行所在 Tomcat conf 目录</span></span>
<span class="line"><span style="color:#e1e4e8;">$ vim catalina.sh</span></span>
<span class="line"><span style="color:#e1e4e8;"># 在 #JAVA_OPTS=&quot;$JAVA_OPTS -Dorg.apache.catalina.security.SecurityListener.UMASK=\`umask\`&quot; 行下增加修改配置 JVM 内存配置大小，例如下边配置：</span></span>
<span class="line"><span style="color:#e1e4e8;">JAVA_OPTS=&quot;$JAVA_OPTS -server -Xms512m -Xmx1024m -XX:PermSize=256M -XX:MaxPermSize=512m&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># 进入到 Jenkins 运行所在 Tomcat conf 目录</span></span>
<span class="line"><span style="color:#24292e;">$ vim catalina.sh</span></span>
<span class="line"><span style="color:#24292e;"># 在 #JAVA_OPTS=&quot;$JAVA_OPTS -Dorg.apache.catalina.security.SecurityListener.UMASK=\`umask\`&quot; 行下增加修改配置 JVM 内存配置大小，例如下边配置：</span></span>
<span class="line"><span style="color:#24292e;">JAVA_OPTS=&quot;$JAVA_OPTS -server -Xms512m -Xmx1024m -XX:PermSize=256M -XX:MaxPermSize=512m&quot;</span></span></code></pre></div><p>注意：这里的几个 JVM 参数含义如下：</p><p>-Xms: 使用的最小堆内存大小</p><p>-Xmx: 使用的最大堆内存大小</p><p>-XX:PermSize: 内存的永久保存区域大小</p><p>-XX:MaxPermSize: 最大内存的永久保存区域大小</p><blockquote><p>这几个参数也不是配置越大越好，具体要根据所在机器实际内存和使用大小配置</p></blockquote><h1 id="_2-修改jenkins-home" tabindex="-1">2. 修改jenkins_home <a class="header-anchor" href="#_2-修改jenkins-home" aria-label="Permalink to &quot;2. 修改jenkins_home&quot;">​</a></h1><h2 id="_2-1-系统环境变量" tabindex="-1">2.1 系统环境变量 <a class="header-anchor" href="#_2-1-系统环境变量" aria-label="Permalink to &quot;2.1 系统环境变量&quot;">​</a></h2><p>配置 <code>JENKINS_HOME</code> 到系统环境变量里面</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 注意：如果一台机器只安装一个 Jenkins 时，可以配置如下。</span></span>
<span class="line"><span style="color:#E1E4E8;">$vim /etc/profile</span></span>
<span class="line"><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> JENKINS_HOME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">/data/apps/jenkins</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> PATH</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">$PATH</span><span style="color:#9ECBFF;">:</span><span style="color:#E1E4E8;">$JENKINS_HOME</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使配置生效</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">source</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/profile</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 注意：如果一台机器只安装一个 Jenkins 时，可以配置如下。</span></span>
<span class="line"><span style="color:#24292E;">$vim /etc/profile</span></span>
<span class="line"><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> JENKINS_HOME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">/data/apps/jenkins</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> PATH</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">$PATH</span><span style="color:#032F62;">:</span><span style="color:#24292E;">$JENKINS_HOME</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使配置生效</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">source</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/profile</span></span></code></pre></div><h2 id="_2-2-tomcat" tabindex="-1">2.2 Tomcat <a class="header-anchor" href="#_2-2-tomcat" aria-label="Permalink to &quot;2.2 Tomcat&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 注意：如果一台机器上边安装多个 Jenkins 时，不能配置 JENKINS_HOME 到系统环境变量里面，</span></span>
<span class="line"><span style="color:#6A737D;"># 需要配置 JENKINS_HOME 到该 Jenkins 启动的 Tomcat 容器配置里面，这样可以区分不同的 Jenkins 目录。</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vim</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/data0/scm/apache-tomcat-7.0.85/conf/context.xml</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Context</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 增加以下配置，优先获取该配置路径。</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">&lt;</span><span style="color:#B392F0;">Environment</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">name=&quot;JENKINS_HOME&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">value=&quot;/data/apps/jenkins&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">type=&quot;java.lang.String&quot;</span><span style="color:#E1E4E8;">/</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">/Context</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 注意：如果一台机器上边安装多个 Jenkins 时，不能配置 JENKINS_HOME 到系统环境变量里面，</span></span>
<span class="line"><span style="color:#6A737D;"># 需要配置 JENKINS_HOME 到该 Jenkins 启动的 Tomcat 容器配置里面，这样可以区分不同的 Jenkins 目录。</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vim</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/data0/scm/apache-tomcat-7.0.85/conf/context.xml</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Context</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 增加以下配置，优先获取该配置路径。</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">&lt;</span><span style="color:#6F42C1;">Environment</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name=&quot;JENKINS_HOME&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">value=&quot;/data/apps/jenkins&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">type=&quot;java.lang.String&quot;</span><span style="color:#24292E;">/</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">/Context</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><h1 id="_3-减少磁盘空间占用" tabindex="-1">3. 减少磁盘空间占用 <a class="header-anchor" href="#_3-减少磁盘空间占用" aria-label="Permalink to &quot;3. 减少磁盘空间占用&quot;">​</a></h1><p>Jenkins 运行 Job 构建比较多时，如果没有配置好清理策略的话，会导致占用磁盘空间比较大，最终由于磁盘空间不够导致构建失败的问题</p><p>在 Job 中配置丢弃旧的构建，通过设置 “保持构建的天数” 和 “保持构建的最大个数” 两个参数，控制该 Job 最大保存构建数量</p>`,18),o=[e];function t(c,r,i,y,E,d){return a(),n("div",null,o)}const h=s(l,[["render",t]]);export{u as __pageData,h as default};
