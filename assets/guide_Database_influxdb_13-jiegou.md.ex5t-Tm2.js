import{_ as a,o as e,c as t,R as l}from"./chunks/framework.zUbWieqp.js";const m=JSON.parse('{"title":"1. 结构","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Database/influxdb/13-jiegou.md","filePath":"guide/Database/influxdb/13-jiegou.md","lastUpdated":1720533756000}'),o={name:"guide/Database/influxdb/13-jiegou.md"},r=l('<h1 id="_1-结构" tabindex="-1">1. 结构 <a class="header-anchor" href="#_1-结构" aria-label="Permalink to &quot;1. 结构&quot;">​</a></h1><ul><li>结构层级</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202406141815905.png" alt=""></p><p><a href="https://www.cnblogs.com/hama1993/p/11062245.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/hama1993/p/11062245.html</a></p><h2 id="_1-1-influxdb数据类型" tabindex="-1">1.1 influxdb数据类型 <a class="header-anchor" href="#_1-1-influxdb数据类型" aria-label="Permalink to &quot;1.1 influxdb数据类型&quot;">​</a></h2><h2 id="_1-2-数据保留策略" tabindex="-1">1.2 数据保留策略 <a class="header-anchor" href="#_1-2-数据保留策略" aria-label="Permalink to &quot;1.2 数据保留策略&quot;">​</a></h2><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202406141815726.jpg" alt=""></p><h2 id="_1-3-schema设计" tabindex="-1">1.3 schema设计 <a class="header-anchor" href="#_1-3-schema设计" aria-label="Permalink to &quot;1.3 schema设计&quot;">​</a></h2><ul><li>tagk/tagv 简短</li><li>tag 还是field? <ul><li>tag有索引，field没有</li><li>tag是字符串，field支持int，float等数据类型 <ul><li>field类型在不同分片上可以不同（尽量避免）</li><li>数值类型使用i后缀为整型，默认float</li></ul></li><li>选择使用tag <ul><li>经常查询元数据</li><li>需要group by</li></ul></li><li>选择使用field <ul><li>用于函数计算</li><li>非字符串</li></ul></li><li>避免使用influxdb关键子作为 <ul><li>tag/field/measurements</li></ul></li><li>避免时间线膨胀（影响内存使用的重要原因）</li><li>不要在measurement名称中嵌入数据：使用tag拆分</li></ul></li></ul><h2 id="_1-4-查询优化" tabindex="-1">1.4 查询优化 <a class="header-anchor" href="#_1-4-查询优化" aria-label="Permalink to &quot;1.4 查询优化&quot;">​</a></h2><h1 id="_2-基础概念" tabindex="-1">2.基础概念 <a class="header-anchor" href="#_2-基础概念" aria-label="Permalink to &quot;2.基础概念&quot;">​</a></h1><h2 id="_2-1-database" tabindex="-1">2.1 Database <a class="header-anchor" href="#_2-1-database" aria-label="Permalink to &quot;2.1 Database&quot;">​</a></h2><h2 id="_2-2-measurement" tabindex="-1">2.2 Measurement <a class="header-anchor" href="#_2-2-measurement" aria-label="Permalink to &quot;2.2 Measurement&quot;">​</a></h2><h2 id="_2-3-point" tabindex="-1">2.3 Point <a class="header-anchor" href="#_2-3-point" aria-label="Permalink to &quot;2.3 Point&quot;">​</a></h2><h2 id="_2-4-series" tabindex="-1">2.4 Series <a class="header-anchor" href="#_2-4-series" aria-label="Permalink to &quot;2.4 Series&quot;">​</a></h2><h2 id="_2-5-tag-sets" tabindex="-1">2.5 tag sets <a class="header-anchor" href="#_2-5-tag-sets" aria-label="Permalink to &quot;2.5 tag sets&quot;">​</a></h2><h2 id="_2-6-retention-policy" tabindex="-1">2.6 Retention policy <a class="header-anchor" href="#_2-6-retention-policy" aria-label="Permalink to &quot;2.6 Retention policy&quot;">​</a></h2><h2 id="_2-7-shard-group" tabindex="-1">2.7 Shard Group <a class="header-anchor" href="#_2-7-shard-group" aria-label="Permalink to &quot;2.7 Shard Group&quot;">​</a></h2><h2 id="_2-8-shard" tabindex="-1">2.8 Shard <a class="header-anchor" href="#_2-8-shard" aria-label="Permalink to &quot;2.8 Shard&quot;">​</a></h2><h1 id="_3-存储结构" tabindex="-1">3. 存储结构 <a class="header-anchor" href="#_3-存储结构" aria-label="Permalink to &quot;3. 存储结构&quot;">​</a></h1><p><a href="https://blog.51cto.com/stefanxfy/5083522" target="_blank" rel="noreferrer">https://blog.51cto.com/stefanxfy/5083522</a></p><p><a href="http://hbasefly.com/2018/03/27/timeseries-database-6/" target="_blank" rel="noreferrer">http://hbasefly.com/2018/03/27/timeseries-database-6/</a></p><h1 id="_4-优化" tabindex="-1">4.优化 <a class="header-anchor" href="#_4-优化" aria-label="Permalink to &quot;4.优化&quot;">​</a></h1><p><a href="https://blog.csdn.net/daguanjia11/article/details/105266050?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165132291616782390533620%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=165132291616782390533620&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-13-105266050.142%5Ev9%5Epc_search_result_cache,157%5Ev4%5Enew_style&amp;utm_term=InfluxDB+DTDB+%E5%AF%B9%E6%AF%94&amp;spm=1018.2226.3001.4187" target="_blank" rel="noreferrer">https://blog.csdn.net/daguanjia11/article/details/105266050?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165132291616782390533620%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=165132291616782390533620&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-13-105266050.142^v9^pc_search_result_cache,157^v4^new_style&amp;utm_term=InfluxDB+DTDB+对比&amp;spm=1018.2226.3001.4187</a></p><p>内存</p><p><a href="https://blog.csdn.net/wzy_168/article/details/107043840?spm=1001.2101.3001.6650.13&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-13.pc_relevant_paycolumn_v3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-13.pc_relevant_paycolumn_v3&amp;utm_relevant_index=21" target="_blank" rel="noreferrer">https://blog.csdn.net/wzy_168/article/details/107043840?spm=1001.2101.3001.6650.13&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-13.pc_relevant_paycolumn_v3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-13.pc_relevant_paycolumn_v3&amp;utm_relevant_index=21</a></p><h2 id="时间戳格式" tabindex="-1">时间戳格式 <a class="header-anchor" href="#时间戳格式" aria-label="Permalink to &quot;时间戳格式&quot;">​</a></h2><p>在InfluxDB中的所有数据都是存的UTC时间，时间戳默认返回RFC3339格式的纳米级的UTC时间，例如<code>2015-08-04T19:05:14.318570484Z</code>，如果你想要返回Unix格式的时间，可以在请求参数里设置<code>epoch</code>参数，其中epoch可以是<code>[h,m,s,ms,u,ns]</code>之一。例如返回一个秒级的epoch</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">curl -G &#39;http://localhost:8086/query&#39; --data-urlencode &quot;db=mydb&quot; --data-urlencode &quot;epoch=s&quot; --data-urlencode &quot;q=SELECT \\&quot;value\\&quot; FROM \\&quot;cpu_load_short\\&quot; WHERE \\&quot;region\\&quot;=&#39;us-west&#39;&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">curl -G &#39;http://localhost:8086/query&#39; --data-urlencode &quot;db=mydb&quot; --data-urlencode &quot;epoch=s&quot; --data-urlencode &quot;q=SELECT \\&quot;value\\&quot; FROM \\&quot;cpu_load_short\\&quot; WHERE \\&quot;region\\&quot;=&#39;us-west&#39;&quot;</span></span></code></pre></div>',29),i=[r];function s(n,u,d,c,h,p){return e(),t("div",null,i)}const b=a(o,[["render",s]]);export{m as __pageData,b as default};
