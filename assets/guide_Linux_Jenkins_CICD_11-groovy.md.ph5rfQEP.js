import{_ as s,o as n,c as a,R as l}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"1.介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/Jenkins/CICD/11-groovy.md","filePath":"guide/Linux/Jenkins/CICD/11-groovy.md","lastUpdated":1720606881000}'),p={name:"guide/Linux/Jenkins/CICD/11-groovy.md"},o=l(`<p>官方文档,<a href="http://groovy-lang.org/" target="_blank" rel="noreferrer">http://groovy-lang.org/</a></p><h1 id="_1-介绍" tabindex="-1">1.介绍 <a class="header-anchor" href="#_1-介绍" aria-label="Permalink to &quot;1.介绍&quot;">​</a></h1><p>Groovy是构建在JVM上的一个轻量级却强大的动态语言, 它结合了Python、Ruby和Smalltalk的许多强大的特性.</p><p>Groovy就是用Java写的 , Groovy语法与Java语法类似, Groovy 代码能够与 Java 代码很好地结合，也能用于扩展现有代码, 相对于Java, 它在编写代码的灵活性上有非常明显的提升，Groovy 可以使用其他 Java 语言编写的库</p><ol><li><code>def</code>关键字定义的变量类型都是Object, 任何变量, 方法都能用<code>def</code>定义/声明 , 在 Groovy 中 “一切都是对象 &quot;</li><li>不需要分号</li><li><code>return</code>关键字可省略, 方法的最后一句表达式可作为返回值返回</li></ol><h2 id="_1-安装" tabindex="-1">1.安装 <a class="header-anchor" href="#_1-安装" aria-label="Permalink to &quot;1.安装&quot;">​</a></h2><p>依赖jdk</p><h2 id="_2-语法" tabindex="-1">2.语法 <a class="header-anchor" href="#_2-语法" aria-label="Permalink to &quot;2.语法&quot;">​</a></h2><h3 id="_2-0注释" tabindex="-1">2.0注释 <a class="header-anchor" href="#_2-0注释" aria-label="Permalink to &quot;2.0注释&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">单行注释</span><span style="color:#E1E4E8;">   </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#B392F0;">/*</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">多行注释</span></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">//</span><span style="color:#24292E;">  </span><span style="color:#032F62;">单行注释</span><span style="color:#24292E;">   </span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#6F42C1;">/*</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">多行注释</span></span>
<span class="line"><span style="color:#D73A49;">*</span><span style="color:#24292E;">/</span></span></code></pre></div><h3 id="_2-1数据类型string" tabindex="-1">2.1数据类型string <a class="header-anchor" href="#_2-1数据类型string" aria-label="Permalink to &quot;2.1数据类型string&quot;">​</a></h3><p>官方文档，<a href="http://groovy-lang.org/syntax.html" target="_blank" rel="noreferrer">http://groovy-lang.org/syntax.html</a></p><ul><li>字符串表示，单引号、双引号、三引号</li></ul><ul><li>三双引号和三单引号都支持换行，==只有三双引号支持插值==</li></ul><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>contains()</td><td>是否包含特定内容，返回true false</td></tr><tr><td>size()</td><td>字符串数量大小长度</td></tr><tr><td>length()</td><td>字符串数量大小长度</td></tr><tr><td>toString()</td><td>转换成string类型</td></tr><tr><td>indexOf()</td><td>元素的索引</td></tr><tr><td>endsWith()/startsWith</td><td>是否指定字符结尾/开始</td></tr><tr><td>minus()/plus()</td><td>去掉、增加字符串</td></tr><tr><td>reverse()</td><td>反向排序</td></tr><tr><td>substring(1,2)</td><td>字符串的指定索引开始的子字符串</td></tr><tr><td>toUpperCase()</td><td>字符串转换大写</td></tr><tr><td>toLowerCase()</td><td>字符串转换小写</td></tr><tr><td>split()</td><td>字符串分割 默认空格分割 返回列表</td></tr></tbody></table><h4 id="contains" tabindex="-1">contains <a class="header-anchor" href="#contains" aria-label="Permalink to &quot;contains&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;helladmin&quot;</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">contains(</span><span style="color:#9ECBFF;">&quot;admin&quot;</span><span style="color:#E1E4E8;">) </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">Result</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;helladmin&quot;</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">contains(</span><span style="color:#032F62;">&quot;admin&quot;</span><span style="color:#24292E;">) </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">Result</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span></code></pre></div><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">script{</span></span>
<span class="line"><span style="color:#E1E4E8;">                    name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;yuanyuan-gao&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">Version</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;release-1.2.3&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">Version.</span><span style="color:#E1E4E8;">contains(</span><span style="color:#9ECBFF;">&quot;release&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">script{</span></span>
<span class="line"><span style="color:#24292E;">                    name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;yuanyuan-gao&quot;</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">String</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Version</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;release-1.2.3&quot;</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">Version.</span><span style="color:#24292E;">contains(</span><span style="color:#032F62;">&quot;release&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="endswith" tabindex="-1">endsWith <a class="header-anchor" href="#endswith" aria-label="Permalink to &quot;endsWith&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hellkill&quot;</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">endsWith(</span><span style="color:#9ECBFF;">&quot;kill&quot;</span><span style="color:#E1E4E8;">) </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">Result</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hellkill&quot;</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">endsWith(</span><span style="color:#032F62;">&quot;kill&quot;</span><span style="color:#24292E;">) </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">Result</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span></code></pre></div><h4 id="startwith" tabindex="-1">startWith <a class="header-anchor" href="#startwith" aria-label="Permalink to &quot;startWith&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//判断字符串以DEV结尾/test开头</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">String</span><span style="color:#E1E4E8;"> jobName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;test-service_DEV&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(jobName</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">endsWith(</span><span style="color:#9ECBFF;">&quot;DEV&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(jobName</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">startsWith(</span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//判断字符串以DEV结尾/test开头</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">String</span><span style="color:#24292E;"> jobName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;test-service_DEV&quot;</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(jobName</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">endsWith(</span><span style="color:#032F62;">&quot;DEV&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(jobName</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">startsWith(</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">))</span></span></code></pre></div><h4 id="size" tabindex="-1">size <a class="header-anchor" href="#size" aria-label="Permalink to &quot;size&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hellkill&quot;</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">size() </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">Result</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//字符串的长度</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(branchName</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">size()) </span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(branchName</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">length())</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hellkill&quot;</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">size() </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">Result</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//字符串的长度</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(branchName</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">size()) </span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(branchName</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">length())</span></span></code></pre></div><h4 id="" tabindex="-1">+/- <a class="header-anchor" href="#" aria-label="Permalink to &quot;+/-&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hellokill&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">Result</span><span style="color:#E1E4E8;">: kill</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hellokill&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">Result</span><span style="color:#24292E;">: kill</span></span></code></pre></div><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//字符串增添操作拼接</span></span>
<span class="line"><span style="color:#F97583;">String</span><span style="color:#E1E4E8;"> log </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;error: xxxxxx aa&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(log</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">minus(</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(log </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(log</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">plus(</span><span style="color:#9ECBFF;">&quot;aa&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(log </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;aa&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//字符串增添操作拼接</span></span>
<span class="line"><span style="color:#D73A49;">String</span><span style="color:#24292E;"> log </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;error: xxxxxx aa&quot;</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(log</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">minus(</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(log </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(log</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">plus(</span><span style="color:#032F62;">&quot;aa&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(log </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;aa&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div><h4 id="split" tabindex="-1">split <a class="header-anchor" href="#split" aria-label="Permalink to &quot;split&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> host </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;host01,host02,host03&quot;</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">split(</span><span style="color:#9ECBFF;">&#39;,&#39;</span><span style="color:#E1E4E8;">) </span></span>
<span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(host) </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">[host01, host02, host03]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//案例</span></span>
<span class="line"><span style="color:#F97583;">String</span><span style="color:#E1E4E8;"> branchName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;release-1.1.1&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(branchName</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">split(</span><span style="color:#9ECBFF;">&quot;-&quot;</span><span style="color:#E1E4E8;">)[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">效果：</span></span>
<span class="line"><span style="color:#E1E4E8;">[release, </span><span style="color:#79B8FF;">1.1.1</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">String</span><span style="color:#E1E4E8;"> branchName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;release-1.1.1&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(branchName</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">split(</span><span style="color:#9ECBFF;">&quot;-&quot;</span><span style="color:#E1E4E8;">)[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">效果：</span></span>
<span class="line"><span style="color:#E1E4E8;">[release]</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">1就是从最后一个开始</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(branchName</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">split(</span><span style="color:#9ECBFF;">&quot;-&quot;</span><span style="color:#E1E4E8;">)[</span><span style="color:#79B8FF;">-1</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">效果：</span></span>
<span class="line"><span style="color:#E1E4E8;">[release]</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;\${env.JOB_NAME}&quot;</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">split(</span><span style="color:#9ECBFF;">&quot;-&quot;</span><span style="color:#E1E4E8;">)[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> host </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;host01,host02,host03&quot;</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">split(</span><span style="color:#032F62;">&#39;,&#39;</span><span style="color:#24292E;">) </span></span>
<span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(host) </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">[host01, host02, host03]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//案例</span></span>
<span class="line"><span style="color:#D73A49;">String</span><span style="color:#24292E;"> branchName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;release-1.1.1&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(branchName</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">split(</span><span style="color:#032F62;">&quot;-&quot;</span><span style="color:#24292E;">)[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">效果：</span></span>
<span class="line"><span style="color:#24292E;">[release, </span><span style="color:#005CC5;">1.1.1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">String</span><span style="color:#24292E;"> branchName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;release-1.1.1&quot;</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(branchName</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">split(</span><span style="color:#032F62;">&quot;-&quot;</span><span style="color:#24292E;">)[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">效果：</span></span>
<span class="line"><span style="color:#24292E;">[release]</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;">1就是从最后一个开始</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(branchName</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">split(</span><span style="color:#032F62;">&quot;-&quot;</span><span style="color:#24292E;">)[</span><span style="color:#005CC5;">-1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">效果：</span></span>
<span class="line"><span style="color:#24292E;">[release]</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;\${env.JOB_NAME}&quot;</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">split(</span><span style="color:#032F62;">&quot;-&quot;</span><span style="color:#24292E;">)[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span></code></pre></div><h4 id="indexof" tabindex="-1">indexOf <a class="header-anchor" href="#indexof" aria-label="Permalink to &quot;indexOf&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(branchName</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">indexOf(</span><span style="color:#9ECBFF;">&quot;-&quot;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(branchName</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">indexOf(</span><span style="color:#032F62;">&quot;-&quot;</span><span style="color:#24292E;">))</span></span></code></pre></div><h3 id="_2-2数据类型list" tabindex="-1">2.2数据类型list <a class="header-anchor" href="#_2-2数据类型list" aria-label="Permalink to &quot;2.2数据类型list&quot;">​</a></h3><p>Groovy同样支持java.util.List类型，在Groovy中同样允许向列表中增加或者删除对象，允许在运行时改变列表的大小，保存在列表中的对象不受类型的限制；此外还可以通过超出列表范围的数来索引列表</p><p>列表符号，[]</p><p>​</p><table><thead><tr><th>方法</th><th>参数</th></tr></thead><tbody><tr><td>+ - += -=</td><td>元素增加减少</td></tr><tr><td>add() 或者 &lt;&lt;</td><td>&lt;&lt;添加元素</td></tr><tr><td>isEmpty()</td><td>判断是否为空</td></tr><tr><td>intersect([2,3])</td><td>取交集</td></tr><tr><td>disjoint([1])</td><td>判断是否有交集</td></tr><tr><td>flatten()</td><td>合并嵌套的列表</td></tr><tr><td>unique()</td><td>去重</td></tr><tr><td>reverse()</td><td>反转</td></tr><tr><td>sort()</td><td>升序</td></tr><tr><td>count()</td><td>元素个数</td></tr><tr><td>join()</td><td>将元素按照参数链接</td></tr><tr><td>sum()</td><td>求和</td></tr><tr><td>min()</td><td>最小值</td></tr><tr><td>max()</td><td>最大值</td></tr><tr><td>contains()</td><td>包含特定元素</td></tr><tr><td>remove(2) removeAll()</td><td></td></tr><tr><td>each{}</td><td>遍历</td></tr></tbody></table><h4 id="-1" tabindex="-1">+ <a class="header-anchor" href="#-1" aria-label="Permalink to &quot;+&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">Result</span><span style="color:#E1E4E8;">: [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">Result</span><span style="color:#24292E;">: [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]</span></span></code></pre></div><h4 id="-2" tabindex="-1">&lt;&lt; <a class="header-anchor" href="#-2" aria-label="Permalink to &quot;&lt;&lt;&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">Result</span><span style="color:#E1E4E8;">: [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">14</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">14</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">Result</span><span style="color:#24292E;">: [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">14</span></span></code></pre></div><h4 id="add" tabindex="-1">add <a class="header-anchor" href="#add" aria-label="Permalink to &quot;add&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">add(</span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;">) </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">Result</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">add(</span><span style="color:#005CC5;">14</span><span style="color:#24292E;">) </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">Result</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">true</span></span></code></pre></div><h4 id="unique" tabindex="-1">unique <a class="header-anchor" href="#unique" aria-label="Permalink to &quot;unique&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">56</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">unique() </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">Result</span><span style="color:#E1E4E8;">: [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">56</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">56</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">unique() </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">Result</span><span style="color:#24292E;">: [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">56</span><span style="color:#24292E;">]</span></span></code></pre></div><h4 id="each" tabindex="-1">each <a class="header-anchor" href="#each" aria-label="Permalink to &quot;each&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">56</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">each{ </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;"> it } </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#79B8FF;">4</span></span>
<span class="line"><span style="color:#79B8FF;">56</span></span>
<span class="line"><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#F97583;">Result</span><span style="color:#E1E4E8;">: [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">56</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">56</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">each{ </span><span style="color:#005CC5;">println</span><span style="color:#24292E;"> it } </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#005CC5;">4</span></span>
<span class="line"><span style="color:#005CC5;">56</span></span>
<span class="line"><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#D73A49;">Result</span><span style="color:#24292E;">: [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">56</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span></code></pre></div><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 定义一个list并打印</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">			script{</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> mylist </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;b&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;devops&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mylist)</span></span>
<span class="line"><span style="color:#E1E4E8;">			}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// list的元素增删</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">			script{</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> mylist </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;b&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;devops&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mylist </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;jenkins&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mylist </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;devops&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">			}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 判断元素是否为空</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mylist</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">isEmpty())</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 列表去重</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mylist</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">unique())</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 列表反转</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mylist</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">reverse())</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 列表排序</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mylist</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">sort())</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 判断列表是否包含元素</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mylist</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">contains(</span><span style="color:#9ECBFF;">&quot;devops&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 列表的长度</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mylist</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">size())</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">//扩展列表定义方式</span></span>
<span class="line"><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] stus </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;zhangsan&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;lisi&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;wangwu&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> numList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">[]</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 通过索引获取列表元素</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(numList[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 计算列表中元素出现的次数</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(numList</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">count(</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 定义一个list并打印</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">			script{</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> mylist </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;b&quot;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;devops&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mylist)</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// list的元素增删</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">			script{</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> mylist </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;b&quot;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;devops&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mylist </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;jenkins&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mylist </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;devops&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 判断元素是否为空</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mylist</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">isEmpty())</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 列表去重</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mylist</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">unique())</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 列表反转</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mylist</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">reverse())</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 列表排序</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mylist</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">sort())</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 判断列表是否包含元素</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mylist</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">contains(</span><span style="color:#032F62;">&quot;devops&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 列表的长度</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mylist</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">size())</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">//扩展列表定义方式</span></span>
<span class="line"><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] stus </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;zhangsan&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;lisi&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;wangwu&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> numList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;">[]</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 通过索引获取列表元素</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(numList[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 计算列表中元素出现的次数</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(numList</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">count(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">))</span></span></code></pre></div><h3 id="_2-3数据类型map-字典" tabindex="-1">2.3数据类型map-字典 <a class="header-anchor" href="#_2-3数据类型map-字典" aria-label="Permalink to &quot;2.3数据类型map-字典&quot;">​</a></h3><p>Map是“键-值”对的集合，在Groovy中键key不一定是String，可以是任何对象</p><p>表示：[:]</p><p>types = [“maven”:“mvn”]</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>size() 或 map</td><td>大小</td></tr><tr><td>[&#39;key&#39;] .key get()</td><td>获取value</td></tr><tr><td>isEmpty()</td><td>是否为空</td></tr><tr><td>containKey()</td><td>是否包含key</td></tr><tr><td>containValue()</td><td>是否包含指定的value</td></tr><tr><td>keySet()</td><td>生成key的列表</td></tr><tr><td>each{}</td><td>遍历map</td></tr><tr><td>remove(&#39;a&#39;)</td><td>删除元素(k-v)</td></tr></tbody></table><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 定义map并打印出value值</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">			script{</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> mydef </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;mvn&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;/usr/local/maven&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;jar&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;/usr/local/jar&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mydef</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">mvn)</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mydef</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">jar)</span></span>
<span class="line"><span style="color:#E1E4E8;">			}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 根据key给map重新赋值</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">			script{</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> mydef </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;mvn&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;/usr/local/maven&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;jar&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;/usr/local/jar&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">                mydef[</span><span style="color:#9ECBFF;">&quot;mvn&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;new maven&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mydef</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">mvn)</span></span>
<span class="line"><span style="color:#E1E4E8;">			}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 判断map是否包含某个key或者value</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">			script{</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> mydef </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;mvn&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;/usr/local/maven&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;jar&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;/usr/local/jar&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mydef</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">containsKey(</span><span style="color:#9ECBFF;">&quot;mvn&quot;</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#E1E4E8;">			}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 返回map的key 列表</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">			script{</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> mydef </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;mvn&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;/usr/local/maven&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&quot;jar&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;/usr/local/jar&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(mydef</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">keySet())</span></span>
<span class="line"><span style="color:#E1E4E8;">			}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 定义map并打印出value值</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">			script{</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> mydef </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;mvn&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;/usr/local/maven&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;jar&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;/usr/local/jar&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mydef</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">mvn)</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mydef</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">jar)</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 根据key给map重新赋值</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">			script{</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> mydef </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;mvn&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;/usr/local/maven&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;jar&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;/usr/local/jar&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">                mydef[</span><span style="color:#032F62;">&quot;mvn&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;new maven&quot;</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mydef</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">mvn)</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 判断map是否包含某个key或者value</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">			script{</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> mydef </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;mvn&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;/usr/local/maven&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;jar&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;/usr/local/jar&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mydef</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">containsKey(</span><span style="color:#032F62;">&quot;mvn&quot;</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 返回map的key 列表</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">			script{</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> mydef </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;mvn&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;/usr/local/maven&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;jar&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;/usr/local/jar&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(mydef</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">keySet())</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span></code></pre></div><h3 id="_2-4函数" tabindex="-1">2.4函数 <a class="header-anchor" href="#_2-4函数" aria-label="Permalink to &quot;2.4函数&quot;">​</a></h3><p>def 定义函数</p><p>语法：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PrintMes</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">value</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(value)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> value</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PrintMes</span><span style="color:#24292E;">(</span><span style="color:#E36209;">value</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(value)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> value</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>列子：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PrintMes</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">info</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (info </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;DevOps&quot;</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> info</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">response </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">PrintMes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;DevOps&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(response)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">def关键字 定义函数名为PrintMes， 带有一个参数msg，语句块内容是打印msg参数的值，返回msg值。</span></span>
<span class="line"><span style="color:#6A737D;">将PrintMsg函数的执行结果返回给response变量。</span></span>
<span class="line"><span style="color:#6A737D;">打印response</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PrintMsg</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">msg</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(msg)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> msg</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">response </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">PrintMsg</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;jenkins ok okok!&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(response)</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">也是可以在spript 中直接用</span></span>
<span class="line"><span style="color:#F97583;">PrintMag</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;xx&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PrintMes</span><span style="color:#24292E;">(</span><span style="color:#E36209;">info</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (info </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;DevOps&quot;</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> info</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">PrintMes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;DevOps&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(response)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">def关键字 定义函数名为PrintMes， 带有一个参数msg，语句块内容是打印msg参数的值，返回msg值。</span></span>
<span class="line"><span style="color:#6A737D;">将PrintMsg函数的执行结果返回给response变量。</span></span>
<span class="line"><span style="color:#6A737D;">打印response</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PrintMsg</span><span style="color:#24292E;">(</span><span style="color:#E36209;">msg</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(msg)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> msg</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">PrintMsg</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;jenkins ok okok!&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(response)</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">也是可以在spript 中直接用</span></span>
<span class="line"><span style="color:#D73A49;">PrintMag</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;xx&quot;</span><span style="color:#24292E;">)</span></span></code></pre></div><h4 id="传参" tabindex="-1">传参 <a class="header-anchor" href="#传参" aria-label="Permalink to &quot;传参&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">PrintMes</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">info</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(info)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">PrintMes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//结果输出</span></span>
<span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">PrintMes</span><span style="color:#E1E4E8;">(info){ </span></span>
<span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(info) </span></span>
<span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> } </span></span>
<span class="line"><span style="color:#E1E4E8;">groovy</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">PrintMes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">) </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">hello</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PrintMes</span><span style="color:#24292E;">(</span><span style="color:#E36209;">info</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(info)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">PrintMes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//结果输出</span></span>
<span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">PrintMes</span><span style="color:#24292E;">(info){ </span></span>
<span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">     </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(info) </span></span>
<span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> } </span></span>
<span class="line"><span style="color:#24292E;">groovy</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">PrintMes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">) </span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">hello</span></span></code></pre></div><h3 id="_2-5正则表达" tabindex="-1">2.5正则表达 <a class="header-anchor" href="#_2-5正则表达" aria-label="Permalink to &quot;2.5正则表达&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">语法：</span></span>
<span class="line"><span style="color:#e1e4e8;">@NonCPS</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">语法：</span></span>
<span class="line"><span style="color:#24292e;">@NonCPS</span></span></code></pre></div><h3 id="_2-6条件语句" tabindex="-1">2.6条件语句 <a class="header-anchor" href="#_2-6条件语句" aria-label="Permalink to &quot;2.6条件语句&quot;">​</a></h3><h4 id="if语句" tabindex="-1">if语句 <a class="header-anchor" href="#if语句" aria-label="Permalink to &quot;if语句&quot;">​</a></h4><p>语法：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (表达式) {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">//xxxx</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;">(表达式2) {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">//xxxxx</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (表达式) {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">//xxxx</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(表达式2) {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">//xxxxx</span></span>
<span class="line"><span style="color:#24292E;">} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">//</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ul><li>案例</li></ul><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">stage(</span><span style="color:#9ECBFF;">&#39;Send script&#39;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> exists </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> fileExists </span><span style="color:#9ECBFF;">&#39;./deploy/install.sh&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (exists) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        sh(</span><span style="color:#9ECBFF;">&quot;tar -zcvf deploy.tgz deploy/&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        sh(</span><span style="color:#9ECBFF;">&quot;curl -v -u qloudinstall:qloudinstall123 -X POST &#39;http://qloudnexus.mart.service.sd/service/rest/v1/components?repository=qloudinstall&#39; -H &#39;accept: application/json&#39; -H &#39;Content-Type: multipart/form-data&#39; -F &#39;raw.directory=\${script_dir}&#39; -F &#39;raw.asset1=@deploy.tgz;type=application/x-compressed-tar&#39; -F &#39;raw.asset1.filename=deploy.tgz&#39;&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;File doesn&#39;t exist&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">stage(</span><span style="color:#032F62;">&#39;Send script&#39;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> exists </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> fileExists </span><span style="color:#032F62;">&#39;./deploy/install.sh&#39;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (exists) {</span></span>
<span class="line"><span style="color:#24292E;">        sh(</span><span style="color:#032F62;">&quot;tar -zcvf deploy.tgz deploy/&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        sh(</span><span style="color:#032F62;">&quot;curl -v -u qloudinstall:qloudinstall123 -X POST &#39;http://qloudnexus.mart.service.sd/service/rest/v1/components?repository=qloudinstall&#39; -H &#39;accept: application/json&#39; -H &#39;Content-Type: multipart/form-data&#39; -F &#39;raw.directory=\${script_dir}&#39; -F &#39;raw.asset1=@deploy.tgz;type=application/x-compressed-tar&#39; -F &#39;raw.asset1.filename=deploy.tgz&#39;&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">println</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;File doesn&#39;t exist&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">定义变量参数name</span></span>
<span class="line"><span style="color:#6A737D;">如果name 等于dev则打印dev，</span></span>
<span class="line"><span style="color:#6A737D;">如果name 等于test则打印test，</span></span>
<span class="line"><span style="color:#6A737D;">上面都不匹配则打印skipdeploy</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">pipeline {</span></span>
<span class="line"><span style="color:#E1E4E8;">	agent { label  </span><span style="color:#9ECBFF;">&quot;master&quot;</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">	stages {</span></span>
<span class="line"><span style="color:#E1E4E8;">		stage(</span><span style="color:#9ECBFF;">&quot;build&quot;</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">			steps{</span></span>
<span class="line"><span style="color:#E1E4E8;">				script{</span></span>
<span class="line"><span style="color:#E1E4E8;">                 	</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hhh&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                 	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ( name </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;dev&quot;</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">                 		</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;dev……&quot;</span><span style="color:#E1E4E8;">)    </span></span>
<span class="line"><span style="color:#E1E4E8;">                 	} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ( name </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;test&quot;</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">                     	</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(test……)</span></span>
<span class="line"><span style="color:#E1E4E8;">                 	} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                     	</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;skipdeploy……&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">                 	}</span></span>
<span class="line"><span style="color:#E1E4E8;">				}</span></span>
<span class="line"><span style="color:#E1E4E8;">			}</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">定义变量参数name</span></span>
<span class="line"><span style="color:#6A737D;">如果name 等于dev则打印dev，</span></span>
<span class="line"><span style="color:#6A737D;">如果name 等于test则打印test，</span></span>
<span class="line"><span style="color:#6A737D;">上面都不匹配则打印skipdeploy</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">pipeline {</span></span>
<span class="line"><span style="color:#24292E;">	agent { label  </span><span style="color:#032F62;">&quot;master&quot;</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">	stages {</span></span>
<span class="line"><span style="color:#24292E;">		stage(</span><span style="color:#032F62;">&quot;build&quot;</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">			steps{</span></span>
<span class="line"><span style="color:#24292E;">				script{</span></span>
<span class="line"><span style="color:#24292E;">                 	</span><span style="color:#D73A49;">String</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hhh&quot;</span></span>
<span class="line"><span style="color:#24292E;">                 	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ( name </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;dev&quot;</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">                 		</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;dev……&quot;</span><span style="color:#24292E;">)    </span></span>
<span class="line"><span style="color:#24292E;">                 	} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ( name </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">                     	</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(test……)</span></span>
<span class="line"><span style="color:#24292E;">                 	} </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                     	</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;skipdeploy……&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">                 	}</span></span>
<span class="line"><span style="color:#24292E;">				}</span></span>
<span class="line"><span style="color:#24292E;">			}</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="switch语句" tabindex="-1">switch语句 <a class="header-anchor" href="#switch语句" aria-label="Permalink to &quot;switch语句&quot;">​</a></h4><p>语法：</p><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;\${buildType}&quot;</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> ”maven</span><span style="color:#9ECBFF;">&quot;:</span></span>
<span class="line"><span style="color:#9ECBFF;">    //xxxx</span></span>
<span class="line"><span style="color:#9ECBFF;">        break;</span></span>
<span class="line"><span style="color:#9ECBFF;">    case ”ant&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//xxxx</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//xxxx</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">switch</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;\${buildType}&quot;</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> ”maven</span><span style="color:#032F62;">&quot;:</span></span>
<span class="line"><span style="color:#032F62;">    //xxxx</span></span>
<span class="line"><span style="color:#032F62;">        break;</span></span>
<span class="line"><span style="color:#032F62;">    case ”ant&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//xxxx</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">default</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//xxxx</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">定义参数branchName</span></span>
<span class="line"><span style="color:#6A737D;">匹配 develop  则打印develop ，跳出。</span></span>
<span class="line"><span style="color:#6A737D;">匹配 release  则打印release ，跳出。</span></span>
<span class="line"><span style="color:#6A737D;">默认匹配， 打印 error ，退出。</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">String</span><span style="color:#E1E4E8;"> branchName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;release&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;">(branchName) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;develop&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">	    </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;develop .....&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">break</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;release&quot;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;release.....&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">break</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">	    </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;error。。。。。。&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">定义参数branchName</span></span>
<span class="line"><span style="color:#6A737D;">匹配 develop  则打印develop ，跳出。</span></span>
<span class="line"><span style="color:#6A737D;">匹配 release  则打印release ，跳出。</span></span>
<span class="line"><span style="color:#6A737D;">默认匹配， 打印 error ，退出。</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">String</span><span style="color:#24292E;"> branchName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;release&quot;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">switch</span><span style="color:#24292E;">(branchName) {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;develop&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">	    </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;develop .....&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">break</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;release&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;release.....&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">break</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">default</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">	    </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;error。。。。。。&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="for循环语句" tabindex="-1">for循环语句 <a class="header-anchor" href="#for循环语句" aria-label="Permalink to &quot;for循环语句&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//语法</span></span>
<span class="line"><span style="color:#E1E4E8;">test </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> ( i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> test){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">///xxxxxx</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//代码</span></span>
<span class="line"><span style="color:#E1E4E8;">langs </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;java&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;python&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#9ECBFF;">&#39;groovy&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> ( lang </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> langs ){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (lang </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;java&quot;</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;lang error in java&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;lang is \${lang}&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//语法</span></span>
<span class="line"><span style="color:#24292E;">test </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> ( i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> test){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">///xxxxxx</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//代码</span></span>
<span class="line"><span style="color:#24292E;">langs </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;java&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;python&#39;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;groovy&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> ( lang </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> langs ){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (lang </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;java&quot;</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;lang error in java&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;lang is \${lang}&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 遍历0-9，打印</span></span>
<span class="line"><span style="color:#E1E4E8;">				script{</span></span>
<span class="line"><span style="color:#E1E4E8;">				    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (i</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">&lt;</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;"> ){</span></span>
<span class="line"><span style="color:#E1E4E8;">                    	</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(i)</span></span>
<span class="line"><span style="color:#E1E4E8;">                    }</span></span>
<span class="line"><span style="color:#6A737D;">// 循环5次</span></span>
<span class="line"><span style="color:#79B8FF;">5.</span><span style="color:#E1E4E8;">times { </span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 遍历 0-4</span></span>
<span class="line"><span style="color:#79B8FF;">5.</span><span style="color:#E1E4E8;">times { </span><span style="color:#FFAB70;">i</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(i)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 遍历List</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> serverList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;server-1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;server-2&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;server-3&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> ( i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> serverList){</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(i)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 使用each遍历map</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> stus </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;zeyang&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;177&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;jenkins&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#9ECBFF;">&quot;199&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">stus</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">each { </span><span style="color:#FFAB70;">k</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">v</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(k</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;=&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">v)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 使用for遍历map</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (k </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> stus</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">keySet()){</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(k</span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;">&quot;=&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">stus[k])</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 遍历0-9，打印</span></span>
<span class="line"><span style="color:#24292E;">				script{</span></span>
<span class="line"><span style="color:#24292E;">				    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (i</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">&lt;</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;"> ){</span></span>
<span class="line"><span style="color:#24292E;">                    	</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(i)</span></span>
<span class="line"><span style="color:#24292E;">                    }</span></span>
<span class="line"><span style="color:#6A737D;">// 循环5次</span></span>
<span class="line"><span style="color:#005CC5;">5.</span><span style="color:#24292E;">times { </span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 遍历 0-4</span></span>
<span class="line"><span style="color:#005CC5;">5.</span><span style="color:#24292E;">times { </span><span style="color:#E36209;">i</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-&gt;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(i)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 遍历List</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> serverList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;server-1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;server-2&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;server-3&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> ( i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> serverList){</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(i)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 使用each遍历map</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> stus </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;zeyang&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;177&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;jenkins&quot;</span><span style="color:#24292E;">:</span><span style="color:#032F62;">&quot;199&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">stus</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">each { </span><span style="color:#E36209;">k</span><span style="color:#24292E;">, </span><span style="color:#E36209;">v</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-&gt;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(k</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;=&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">v)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">// 使用for遍历map</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (k </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> stus</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">keySet()){</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(k</span><span style="color:#D73A49;">+</span><span style="color:#032F62;">&quot;=&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">stus[k])</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="while语句" tabindex="-1">while语句 <a class="header-anchor" href="#while语句" aria-label="Permalink to &quot;while语句&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">while</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//xxxx</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// while 循环</span></span>
<span class="line"><span style="color:#F97583;">String</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (name </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;jenkins&quot;</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;true....&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;lisi&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//xxxx</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// while 循环</span></span>
<span class="line"><span style="color:#D73A49;">String</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;jenkins&quot;</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (name </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;jenkins&quot;</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;true....&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;lisi&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="异常处理" tabindex="-1">异常处理 <a class="header-anchor" href="#异常处理" aria-label="Permalink to &quot;异常处理&quot;">​</a></h4><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">如果println(a,b)失败（肯定失败，因为有语法错误）</span></span>
<span class="line"><span style="color:#6A737D;">catch捕获错误，并打印错误。</span></span>
<span class="line"><span style="color:#6A737D;">finally 总是执行。</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">try</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(a,b)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">catch</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">Exception</span><span style="color:#E1E4E8;"> e) {            </span><span style="color:#6A737D;">//如果try里错误，捕获异常信息</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(e)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">finally</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;done&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">如果println(a,b)失败（肯定失败，因为有语法错误）</span></span>
<span class="line"><span style="color:#6A737D;">catch捕获错误，并打印错误。</span></span>
<span class="line"><span style="color:#6A737D;">finally 总是执行。</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">try</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(a,b)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">catch</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">Exception</span><span style="color:#24292E;"> e) {            </span><span style="color:#6A737D;">//如果try里错误，捕获异常信息</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(e)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">finally</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;done&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="_3-调出终端" tabindex="-1">3.调出终端 <a class="header-anchor" href="#_3-调出终端" aria-label="Permalink to &quot;3.调出终端&quot;">​</a></h2><ul><li>groovyConsole</li></ul><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407092217112.jpg" alt="gr"></p><ul><li>groovysh</li></ul><h2 id="_4-常用dsl" tabindex="-1">4.常用DSL <a class="header-anchor" href="#_4-常用dsl" aria-label="Permalink to &quot;4.常用DSL&quot;">​</a></h2><h3 id="_4-1json数据格式化输出" tabindex="-1">4.1json数据格式化输出 <a class="header-anchor" href="#_4-1json数据格式化输出" aria-label="Permalink to &quot;4.1json数据格式化输出&quot;">​</a></h3><div class="language-groovy vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> response </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> readJSON </span><span style="color:#79B8FF;">text</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;\${scanResult}&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">println</span><span style="color:#E1E4E8;">(scanResult)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//原生方法</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> groovy.json.*</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GetJson</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">text</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> prettyJson </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">JsonOutput.</span><span style="color:#E1E4E8;">prettyPrint(text)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">JsonSlurperClassic</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">parseText(prettyJson)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> readJSON </span><span style="color:#005CC5;">text</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;\${scanResult}&quot;</span></span>
<span class="line"><span style="color:#005CC5;">println</span><span style="color:#24292E;">(scanResult)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//原生方法</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> groovy.json.*</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GetJson</span><span style="color:#24292E;">(</span><span style="color:#E36209;">text</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> prettyJson </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">JsonOutput.</span><span style="color:#24292E;">prettyPrint(text)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">JsonSlurperClassic</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">parseText(prettyJson)</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span></code></pre></div><h3 id="_4-2httprequest" tabindex="-1">4.2httpRequest <a class="header-anchor" href="#_4-2httprequest" aria-label="Permalink to &quot;4.2httpRequest&quot;">​</a></h3><h3 id="_4-3凭据" tabindex="-1">4.3凭据 <a class="header-anchor" href="#_4-3凭据" aria-label="Permalink to &quot;4.3凭据&quot;">​</a></h3><h3 id="_4-4checkout" tabindex="-1">4.4checkout <a class="header-anchor" href="#_4-4checkout" aria-label="Permalink to &quot;4.4checkout&quot;">​</a></h3><h3 id="_4-5publishhtml" tabindex="-1">4.5publishHTML <a class="header-anchor" href="#_4-5publishhtml" aria-label="Permalink to &quot;4.5publishHTML&quot;">​</a></h3><p>报告</p><h3 id="_4-6builduser" tabindex="-1">4.6Builduser <a class="header-anchor" href="#_4-6builduser" aria-label="Permalink to &quot;4.6Builduser&quot;">​</a></h3><p>warp</p><h3 id="_4-7email" tabindex="-1">4.7email <a class="header-anchor" href="#_4-7email" aria-label="Permalink to &quot;4.7email&quot;">​</a></h3>`,96),e=[o];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const h=s(p,[["render",t]]);export{u as __pageData,h as default};
