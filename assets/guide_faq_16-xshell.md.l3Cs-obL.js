import{_ as a,o as s,c as n,R as e}from"./chunks/framework.zUbWieqp.js";const f=JSON.parse('{"title":"1. 设置突出显示集","description":"","frontmatter":{},"headers":[],"relativePath":"guide/faq/16-xshell.md","filePath":"guide/faq/16-xshell.md","lastUpdated":1743161992000}'),d={name:"guide/faq/16-xshell.md"},o=e(`<h1 id="_1-设置突出显示集" tabindex="-1">1. 设置突出显示集 <a class="header-anchor" href="#_1-设置突出显示集" aria-label="Permalink to &quot;1. 设置突出显示集&quot;">​</a></h1><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405242256184.png" alt="image-20240524225551103"></p><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">1）异常状态的正则表达式： [^A-Za-z_&amp;-]( error| fail| down| false| no| not)</span></span>
<span class="line"><span style="color:#e1e4e8;">2）正常状态的正则表达式： [^A-Za-z_&amp;-]( connected|successfully| up|successful|succeeded|success)</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">3）IPV4地址的正则表达式：(?=(\\b|\\D))(((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))\\.){3}((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))(?=(\\b|\\D))\\s*</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">4）IPV6地址的正则表达式：[\\[ ]?\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*\\]?</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1）异常状态的正则表达式： [^A-Za-z_&amp;-]( error| fail| down| false| no| not)</span></span>
<span class="line"><span style="color:#24292e;">2）正常状态的正则表达式： [^A-Za-z_&amp;-]( connected|successfully| up|successful|succeeded|success)</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">3）IPV4地址的正则表达式：(?=(\\b|\\D))(((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))\\.){3}((\\d{1,2})|(1\\d{1,2})|(2[0-4]\\d)|(25[0-5]))(?=(\\b|\\D))\\s*</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">4）IPV6地址的正则表达式：[\\[ ]?\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*\\]?</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405242257003.png" alt="image-20240524225753549"></p><h1 id="_2-设置ctrl-c和ctrl-v" tabindex="-1">2. 设置Ctrl+C和Ctrl+V <a class="header-anchor" href="#_2-设置ctrl-c和ctrl-v" aria-label="Permalink to &quot;2. 设置Ctrl+C和Ctrl+V&quot;">​</a></h1><p>选择工具--&gt;选项</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405242300302.png" alt="image-20240524230024155"></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405242301299.png" alt="image-20240524230149746"></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405242302291.png" alt="image-20240524230233040"></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405242302669.png" alt="image-20240524230249222"></p><h1 id="_3-配置隧道模式" tabindex="-1">3. 配置隧道模式 <a class="header-anchor" href="#_3-配置隧道模式" aria-label="Permalink to &quot;3. 配置隧道模式&quot;">​</a></h1><p>有三种模式</p><p>Local(Outgoing) Remote(Incoming) Dynamic(SOCKS4/5)</p><h2 id="_3-1-local-outgoing" tabindex="-1">3.1 Local(Outgoing) <a class="header-anchor" href="#_3-1-local-outgoing" aria-label="Permalink to &quot;3.1 Local(Outgoing)&quot;">​</a></h2><p>要使用这个隧道功能，肯定是要针对某台机器而言、在连接属性里面找到<code>SSH</code>-<code>隧道</code>-<code>添加</code>即可</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202503271520970.png" alt="img"></p><h3 id="案例" tabindex="-1">案例 <a class="header-anchor" href="#案例" aria-label="Permalink to &quot;案例&quot;">​</a></h3><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202503271521588.png" alt="image-20250327152139057"></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202503271523482.png" alt="image-20250327152327101"></p><p>保存，链接</p><h2 id="_3-2-remote-incoming" tabindex="-1">3.2 Remote(Incoming) <a class="header-anchor" href="#_3-2-remote-incoming" aria-label="Permalink to &quot;3.2 Remote(Incoming)&quot;">​</a></h2><h2 id="_3-3-dynamic-socks4-5" tabindex="-1">3.3 Dynamic(SOCKS4/5) <a class="header-anchor" href="#_3-3-dynamic-socks4-5" aria-label="Permalink to &quot;3.3 Dynamic(SOCKS4/5)&quot;">​</a></h2>`,23),c=[o];function l(t,i,p,r,h,g){return s(),n("div",null,c)}const u=a(d,[["render",l]]);export{f as __pageData,u as default};
