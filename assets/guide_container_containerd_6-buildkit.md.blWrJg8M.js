import{_ as s,o as a,c as n,R as l}from"./chunks/framework.zUbWieqp.js";const h=JSON.parse('{"title":"1.Buildkit","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/containerd/6-buildkit.md","filePath":"guide/container/containerd/6-buildkit.md","lastUpdated":1731157838000}'),p={name:"guide/container/containerd/6-buildkit.md"},e=l(`<h1 id="_1-buildkit" tabindex="-1">1.Buildkit <a class="header-anchor" href="#_1-buildkit" aria-label="Permalink to &quot;1.Buildkit&quot;">​</a></h1><h2 id="_1-1为什么使用buildkit" tabindex="-1">1.1为什么使用Buildkit <a class="header-anchor" href="#_1-1为什么使用buildkit" aria-label="Permalink to &quot;1.1为什么使用Buildkit&quot;">​</a></h2><p>由于containerd无法构建docker镜像，所以需要依赖buildkit来构建镜像</p><h2 id="_1-2介绍" tabindex="-1">1.2介绍 <a class="header-anchor" href="#_1-2介绍" aria-label="Permalink to &quot;1.2介绍&quot;">​</a></h2><p><a href="https://github.com/moby/buildkit" target="_blank" rel="noreferrer">官当</a></p><p>Buildkit 是一款高效、Docekrfile 无关、更契合 “云原生应用” 的新一代镜像构建工具。</p><p>BuildKit 是源自 Docker 的 Moby 项目的第二代镜像构建工具。BuildKit 不限于仅与 Docker 一起使用。这是一种通用的镜像构建工具，可以作为独立的二进制文件（以守护程序或无守护程序模式使用）也可以作为库来使用。实际上，它可以将构建步骤转换成其低级构建器（LLB）表示形式，BuildKit 可用于构建任何制品（artifact）而不仅仅是容器镜像。我们主要在这里关注容器镜像的构建。</p><h3 id="_1-组成" tabindex="-1">1.组成 <a class="header-anchor" href="#_1-组成" aria-label="Permalink to &quot;1.组成&quot;">​</a></h3><p>1.服务端为buildkitd,负责和runc或containerd后端连接干活,目前只支持这两个后端。</p><p>2.客户端为buildctl,负责解析镜像构建文件Dockerfile,并向服务端发出构建指令,所以客户端可以和服务端不在一台机器上,也不需要root权限之类。</p><p>3.服务端默认使用runc后端,但是建议使用containerd后端,这样构建出的镜像就会存在containerd的buildkit名字空间下。</p><h3 id="_2-优势" tabindex="-1">2.优势 <a class="header-anchor" href="#_2-优势" aria-label="Permalink to &quot;2.优势&quot;">​</a></h3><p>相比于 Docker Daemon build，BuildKit 具有以下优势：</p><ul><li>更高效：支持并行的多阶段构建、更好的缓存管理；</li><li>更安全：支持 secret mount，无需 root priviliege；</li><li>更易于扩展：使用自定义中间语言 LLB，完全兼容 Dockerfile，也可支持第三方语言（目前仅有 Buildpacks），后台目前可支持 runC 和 containerd 两种 worker</li></ul><h3 id="_3-原理" tabindex="-1">3.原理 <a class="header-anchor" href="#_3-原理" aria-label="Permalink to &quot;3.原理&quot;">​</a></h3><p>后台启动一个 buildkitd 守护进程，通过 http 通信的方式执行构建。</p><ul><li>gRPC API: 使用 Google RPC 协议高效通信</li><li>Go client library： 基于 Go 的客户端方便调用</li><li>rootless execution: buildctl 不需要 root 权限就可以执行</li><li>OpenTracing： 支持镜像 layer 的逐层溯源</li><li>multi-worker model：支持多种 worker(runC 和 containerd)，可扩展</li></ul><h2 id="_1-3部署" tabindex="-1">1.3部署 <a class="header-anchor" href="#_1-3部署" aria-label="Permalink to &quot;1.3部署&quot;">​</a></h2><h3 id="_1-单节点" tabindex="-1">1.单节点 <a class="header-anchor" href="#_1-单节点" aria-label="Permalink to &quot;1.单节点&quot;">​</a></h3><p>自从 Containerd 发布 1.5 以后，Kubernetes 的CRI接口使用 Containerd 来替代 dockershim 时, 我们便可以使用 nerdctl 工具(替代 docker cli) 配合 Containerd 的情况下基本已经可以替换掉 Docker 和 Docker Compose 。只有 nerdctl 还不能打包镜像，还需要 BuildKit 服务配置完成打包镜像</p><h4 id="版本兼容" tabindex="-1">版本兼容 <a class="header-anchor" href="#版本兼容" aria-label="Permalink to &quot;版本兼容&quot;">​</a></h4><table><thead><tr><th>buildkit</th><th><strong>containerd</strong></th><th>docker</th></tr></thead><tbody><tr><td>v0.16.0</td><td>&gt;=v1.7.21</td><td>&gt;= v27.2.1</td></tr></tbody></table><h4 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">wget</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/moby/buildkit/releases/download/v0.16.0/buildkit-v0.16.0.linux-amd64.tar.gz</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">wget</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/moby/buildkit/releases/download/v0.16.0/buildkit-v0.16.0.linux-amd64.tar.gz</span></span></code></pre></div><ul><li>解压</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">xf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">buildkit-v0.16.0.linux-amd64.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#复制文件</span></span>
<span class="line"><span style="color:#B392F0;">cp</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bin/{buildkitd,buildctl}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/local/bin</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">xf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">buildkit-v0.16.0.linux-amd64.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#复制文件</span></span>
<span class="line"><span style="color:#6F42C1;">cp</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bin/{buildkitd,buildctl}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/local/bin</span></span></code></pre></div><h4 id="创建init文件" tabindex="-1">创建init文件 <a class="header-anchor" href="#创建init文件" aria-label="Permalink to &quot;创建init文件&quot;">​</a></h4><ul><li>buildkitd</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;-</span><span style="color:#9ECBFF;">EOF</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> tee /lib/systemd/system/buildkitd.service </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> /dev/null</span></span>
<span class="line"><span style="color:#9ECBFF;">[Unit]</span></span>
<span class="line"><span style="color:#9ECBFF;">Description=BuildKit</span></span>
<span class="line"><span style="color:#9ECBFF;">Documentation=https://github.com/moby/buildkit</span></span>
<span class="line"><span style="color:#9ECBFF;"># Requires=buildkit.socket</span></span>
<span class="line"><span style="color:#9ECBFF;">After=buildkit.socket</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">[Service]</span></span>
<span class="line"><span style="color:#9ECBFF;">ExecStart=/usr/local/bin/buildkitd --oci-worker=false --containerd-worker=true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">[Install]</span></span>
<span class="line"><span style="color:#9ECBFF;">WantedBy=multi-user.target</span></span>
<span class="line"><span style="color:#9ECBFF;">EOF</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;-</span><span style="color:#032F62;">EOF</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> tee /lib/systemd/system/buildkitd.service </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> /dev/null</span></span>
<span class="line"><span style="color:#032F62;">[Unit]</span></span>
<span class="line"><span style="color:#032F62;">Description=BuildKit</span></span>
<span class="line"><span style="color:#032F62;">Documentation=https://github.com/moby/buildkit</span></span>
<span class="line"><span style="color:#032F62;"># Requires=buildkit.socket</span></span>
<span class="line"><span style="color:#032F62;">After=buildkit.socket</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">[Service]</span></span>
<span class="line"><span style="color:#032F62;">ExecStart=/usr/local/bin/buildkitd --oci-worker=false --containerd-worker=true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">[Install]</span></span>
<span class="line"><span style="color:#032F62;">WantedBy=multi-user.target</span></span>
<span class="line"><span style="color:#032F62;">EOF</span></span></code></pre></div><ul><li>socket</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># buildkitd 服务依赖的 socket 文件</span></span>
<span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;-</span><span style="color:#9ECBFF;">EOF</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> tee /lib/systemd/system/buildkit.socket </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> /dev/null</span></span>
<span class="line"><span style="color:#9ECBFF;">[Unit]</span></span>
<span class="line"><span style="color:#9ECBFF;">Description=BuildKit</span></span>
<span class="line"><span style="color:#9ECBFF;">Documentation=https://github.com/moby/buildkit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">[Socket]</span></span>
<span class="line"><span style="color:#9ECBFF;">ListenStream=%t/buildkit/buildkitd.sock</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">[Install]</span></span>
<span class="line"><span style="color:#9ECBFF;">WantedBy=sockets.target</span></span>
<span class="line"><span style="color:#9ECBFF;">EOF</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># buildkitd 服务依赖的 socket 文件</span></span>
<span class="line"><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;-</span><span style="color:#032F62;">EOF</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> tee /lib/systemd/system/buildkit.socket </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> /dev/null</span></span>
<span class="line"><span style="color:#032F62;">[Unit]</span></span>
<span class="line"><span style="color:#032F62;">Description=BuildKit</span></span>
<span class="line"><span style="color:#032F62;">Documentation=https://github.com/moby/buildkit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">[Socket]</span></span>
<span class="line"><span style="color:#032F62;">ListenStream=%t/buildkit/buildkitd.sock</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">[Install]</span></span>
<span class="line"><span style="color:#032F62;">WantedBy=sockets.target</span></span>
<span class="line"><span style="color:#032F62;">EOF</span></span></code></pre></div><ul><li>启动服务</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">daemon-reload</span><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">buildkitd.service</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">enable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">buildkitd.service</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">daemon-reload</span><span style="color:#24292E;">    </span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#032F62;">buildkitd.service</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">enable</span><span style="color:#24292E;"> </span><span style="color:#032F62;">buildkitd.service</span></span></code></pre></div><h4 id="设置别名" tabindex="-1">设置别名 <a class="header-anchor" href="#设置别名" aria-label="Permalink to &quot;设置别名&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">alias</span><span style="color:#E1E4E8;"> docker</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">nerdctl  </span></span>
<span class="line"><span style="color:#F97583;">alias</span><span style="color:#E1E4E8;"> docker-compose</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;nerdctl compose&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#持久化请将配置写入 ~/.bashrc 文件中</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">alias</span><span style="color:#24292E;"> docker</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">nerdctl  </span></span>
<span class="line"><span style="color:#D73A49;">alias</span><span style="color:#24292E;"> docker-compose</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;nerdctl compose&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#持久化请将配置写入 ~/.bashrc 文件中</span></span></code></pre></div><h4 id="验证效果" tabindex="-1">验证效果 <a class="header-anchor" href="#验证效果" aria-label="Permalink to &quot;验证效果&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@kube-master-01 Buildkit]# cat Dockerfile</span></span>
<span class="line"><span style="color:#B392F0;">FROM</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">alpine</span></span>
<span class="line"><span style="color:#B392F0;">CMD</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;echo&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Hello Docker!!!&quot;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">nerdctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hello:v1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@kube-master-01 Buildkit]# cat Dockerfile</span></span>
<span class="line"><span style="color:#6F42C1;">FROM</span><span style="color:#24292E;"> </span><span style="color:#032F62;">alpine</span></span>
<span class="line"><span style="color:#6F42C1;">CMD</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;echo&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Hello Docker!!!&quot;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">nerdctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hello:v1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span></code></pre></div><h3 id="_2-docker节点" tabindex="-1">2.docker节点 <a class="header-anchor" href="#_2-docker节点" aria-label="Permalink to &quot;2.docker节点&quot;">​</a></h3><p>2018 年 7 月 BuildKit 正式内置于 Docker-ce 18.06.0 的 Docker daemon ，Mac 和 Linux 可以使用环境变量 DOCKER_BUILDKIT=1 开启，同年 10 月发布社区版本。</p><p>默认情况下，Buildx 插件以 Docker 驱动程序为目标，该驱动程序使用 Docker 守护程序提供的 BuildKit 库，但存在其固有的局限性。另一个驱动程序是 docker-container，它透明地在容器内启动 BuildKit 来执行构建。它可以提供 BuildKit 全部功能。</p><h4 id="启用buildkit" tabindex="-1">启用BUILDKIT <a class="header-anchor" href="#启用buildkit" aria-label="Permalink to &quot;启用BUILDKIT&quot;">​</a></h4><p>从 Docker 23.0 版本开始，Buildx 是默认的构建工具（Buildx 就是使用 BuildKit 作为构建工具），若使用传统的 <code>docker build</code> 命令，将会出现弃用提示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">DEPRECATED: The legacy builder is deprecated and will be removed in a future release.</span></span>
<span class="line"><span style="color:#e1e4e8;">            Install the buildx component to build images with BuildKit:</span></span>
<span class="line"><span style="color:#e1e4e8;">            https://docs.docker.com/go/buildx/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">DEPRECATED: The legacy builder is deprecated and will be removed in a future release.</span></span>
<span class="line"><span style="color:#24292e;">            Install the buildx component to build images with BuildKit:</span></span>
<span class="line"><span style="color:#24292e;">            https://docs.docker.com/go/buildx/</span></span></code></pre></div><p>若是 Docker 23.0 版本之前，则还需要通过两种方式启用 Buildkit 功能</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">export DOCKER_BUILDKIT=1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">export DOCKER_BUILDKIT=1</span></span></code></pre></div><p>或者</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">vim</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/docker/daemon.json</span></span>
<span class="line"><span style="color:#6A737D;"># 配置信息</span></span>
<span class="line"><span style="color:#B392F0;">&quot;features&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{&quot;buildkit&quot;:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#9ECBFF;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">vim</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/docker/daemon.json</span></span>
<span class="line"><span style="color:#6A737D;"># 配置信息</span></span>
<span class="line"><span style="color:#6F42C1;">&quot;features&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{&quot;buildkit&quot;:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#032F62;">}</span></span></code></pre></div><h3 id="_3-pod节点" tabindex="-1">3.Pod节点 <a class="header-anchor" href="#_3-pod节点" aria-label="Permalink to &quot;3.Pod节点&quot;">​</a></h3><p><a href="https://github.com/moby/buildkit/tree/master/examples/kubernetes" target="_blank" rel="noreferrer">https://github.com/moby/buildkit/tree/master/examples/kubernetes</a></p><p><a href="https://blog.k8s.li/buildkit-on-kubernetes.html" target="_blank" rel="noreferrer">https://blog.k8s.li/buildkit-on-kubernetes.html</a></p><p><a href="https://blog.frognew.com/2021/06/relearning-container-13.html" target="_blank" rel="noreferrer">https://blog.frognew.com/2021/06/relearning-container-13.html</a></p><h1 id="_2-案例" tabindex="-1">2.案例 <a class="header-anchor" href="#_2-案例" aria-label="Permalink to &quot;2.案例&quot;">​</a></h1><p>alpine linux的核心特点是体积小、简单和安全，因此很多人选择alpine镜像作为基础镜像</p><h2 id="_2-1-alpine" tabindex="-1">2.1 alpine <a class="header-anchor" href="#_2-1-alpine" aria-label="Permalink to &quot;2.1 alpine&quot;">​</a></h2><p>编写一个Dockerfile在docker官方alpine镜像的基础上，安装glibc，同时配置中国时区:</p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> alpine:3.13.5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Here we install GNU libc (aka glibc) and set C.UTF-8 locale as default.</span></span>
<span class="line"><span style="color:#F97583;">ENV</span><span style="color:#E1E4E8;"> LANG=C.UTF-8</span></span>
<span class="line"><span style="color:#F97583;">RUN</span><span style="color:#E1E4E8;"> echo </span><span style="color:#9ECBFF;">&quot;**** install packages ****&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    sed -i </span><span style="color:#9ECBFF;">&#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#39;</span><span style="color:#E1E4E8;"> /etc/apk/repositories &amp;&amp;\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    ALPINE_GLIBC_BASE_URL=</span><span style="color:#9ECBFF;">&quot;https://github.com/sgerrand/alpine-pkg-glibc/releases/download&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    ALPINE_GLIBC_PACKAGE_VERSION=</span><span style="color:#9ECBFF;">&quot;2.33-r0&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    ALPINE_GLIBC_BASE_PACKAGE_FILENAME=</span><span style="color:#9ECBFF;">&quot;glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    ALPINE_GLIBC_BIN_PACKAGE_FILENAME=</span><span style="color:#9ECBFF;">&quot;glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    ALPINE_GLIBC_I18N_PACKAGE_FILENAME=</span><span style="color:#9ECBFF;">&quot;glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk add --no-cache --virtual=.build-dependencies wget ca-certificates &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    echo \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;-----BEGIN PUBLIC KEY-----\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        1QIDAQAB\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        -----END PUBLIC KEY-----&quot;</span><span style="color:#E1E4E8;"> | sed </span><span style="color:#9ECBFF;">&#39;s/   */</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">/g&#39;</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#9ECBFF;">&quot;/etc/apk/keys/sgerrand.rsa.pub&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    wget \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk add --no-cache \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BASE_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BIN_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_I18N_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    rm </span><span style="color:#9ECBFF;">&quot;/etc/apk/keys/sgerrand.rsa.pub&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 </span><span style="color:#9ECBFF;">&quot;$LANG&quot;</span><span style="color:#E1E4E8;"> || true &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    echo </span><span style="color:#9ECBFF;">&quot;export LANG=$LANG&quot;</span><span style="color:#E1E4E8;"> &gt; /etc/profile.d/locale.sh &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk del glibc-i18n &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    rm </span><span style="color:#9ECBFF;">&quot;/root/.wget-hsts&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk del .build-dependencies &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    rm \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BASE_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BIN_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_I18N_PACKAGE_FILENAME&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">RUN</span><span style="color:#E1E4E8;"> apk update --no-cache &amp;&amp; apk add ca-certificates --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk add tzdata --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    echo </span><span style="color:#9ECBFF;">&quot;Asia/Shanghai&quot;</span><span style="color:#E1E4E8;"> &gt; /etc/timezone</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> alpine:3.13.5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Here we install GNU libc (aka glibc) and set C.UTF-8 locale as default.</span></span>
<span class="line"><span style="color:#D73A49;">ENV</span><span style="color:#24292E;"> LANG=C.UTF-8</span></span>
<span class="line"><span style="color:#D73A49;">RUN</span><span style="color:#24292E;"> echo </span><span style="color:#032F62;">&quot;**** install packages ****&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    sed -i </span><span style="color:#032F62;">&#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#39;</span><span style="color:#24292E;"> /etc/apk/repositories &amp;&amp;\\</span></span>
<span class="line"><span style="color:#24292E;">    ALPINE_GLIBC_BASE_URL=</span><span style="color:#032F62;">&quot;https://github.com/sgerrand/alpine-pkg-glibc/releases/download&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    ALPINE_GLIBC_PACKAGE_VERSION=</span><span style="color:#032F62;">&quot;2.33-r0&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    ALPINE_GLIBC_BASE_PACKAGE_FILENAME=</span><span style="color:#032F62;">&quot;glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    ALPINE_GLIBC_BIN_PACKAGE_FILENAME=</span><span style="color:#032F62;">&quot;glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    ALPINE_GLIBC_I18N_PACKAGE_FILENAME=</span><span style="color:#032F62;">&quot;glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    apk add --no-cache --virtual=.build-dependencies wget ca-certificates &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    echo \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;-----BEGIN PUBLIC KEY-----\\</span></span>
<span class="line"><span style="color:#032F62;">        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m\\</span></span>
<span class="line"><span style="color:#032F62;">        y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu\\</span></span>
<span class="line"><span style="color:#032F62;">        tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp\\</span></span>
<span class="line"><span style="color:#032F62;">        m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY\\</span></span>
<span class="line"><span style="color:#032F62;">        KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc\\</span></span>
<span class="line"><span style="color:#032F62;">        Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m\\</span></span>
<span class="line"><span style="color:#032F62;">        1QIDAQAB\\</span></span>
<span class="line"><span style="color:#032F62;">        -----END PUBLIC KEY-----&quot;</span><span style="color:#24292E;"> | sed </span><span style="color:#032F62;">&#39;s/   */</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">/g&#39;</span><span style="color:#24292E;"> &gt; </span><span style="color:#032F62;">&quot;/etc/apk/keys/sgerrand.rsa.pub&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    wget \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    apk add --no-cache \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BASE_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BIN_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_I18N_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    \\</span></span>
<span class="line"><span style="color:#24292E;">    rm </span><span style="color:#032F62;">&quot;/etc/apk/keys/sgerrand.rsa.pub&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 </span><span style="color:#032F62;">&quot;$LANG&quot;</span><span style="color:#24292E;"> || true &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    echo </span><span style="color:#032F62;">&quot;export LANG=$LANG&quot;</span><span style="color:#24292E;"> &gt; /etc/profile.d/locale.sh &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    \\</span></span>
<span class="line"><span style="color:#24292E;">    apk del glibc-i18n &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    \\</span></span>
<span class="line"><span style="color:#24292E;">    rm </span><span style="color:#032F62;">&quot;/root/.wget-hsts&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    apk del .build-dependencies &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    rm \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BASE_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BIN_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_I18N_PACKAGE_FILENAME&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">RUN</span><span style="color:#24292E;"> apk update --no-cache &amp;&amp; apk add ca-certificates --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    apk add tzdata --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    echo </span><span style="color:#032F62;">&quot;Asia/Shanghai&quot;</span><span style="color:#24292E;"> &gt; /etc/timezone</span></span></code></pre></div><h2 id="_2-2-busybox" tabindex="-1">2.2 busybox <a class="header-anchor" href="#_2-2-busybox" aria-label="Permalink to &quot;2.2 busybox&quot;">​</a></h2><p>busybox是一个集成了一百多个最常用的Linux命令和工具的软件工具箱</p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> busybox:1.33.1-glibc</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">COPY</span><span style="color:#E1E4E8;"> zoneinfo /usr/share/zoneinfo/</span></span>
<span class="line"><span style="color:#F97583;">RUN</span><span style="color:#E1E4E8;"> ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo </span><span style="color:#9ECBFF;">&#39;Asia/Shanghai&#39;</span><span style="color:#E1E4E8;"> &gt;/etc/timezone</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> busybox:1.33.1-glibc</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">COPY</span><span style="color:#24292E;"> zoneinfo /usr/share/zoneinfo/</span></span>
<span class="line"><span style="color:#D73A49;">RUN</span><span style="color:#24292E;"> ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo </span><span style="color:#032F62;">&#39;Asia/Shanghai&#39;</span><span style="color:#24292E;"> &gt;/etc/timezone</span></span></code></pre></div><p>参考：</p><ul><li><a href="https://github.com/moby/buildkit" target="_blank" rel="noreferrer">buildkit</a></li><li><a href="https://docs.docker.com/develop/develop-images/multistage-build/" target="_blank" rel="noreferrer">multi-stage builds</a></li></ul>`,61),o=[e];function t(c,r,i,E,y,d){return a(),n("div",null,o)}const F=s(p,[["render",t]]);export{h as __pageData,F as default};
