import{_ as e,o as s,c as a,R as l}from"./chunks/framework.zUbWieqp.js";const b=JSON.parse('{"title":"1. Prometheus-Operator监控kube-controller-manager失败","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/TroubleshootingMaintenanceManual/1-TroubleshootingMaintenanceManual.md","filePath":"guide/container/k8s/TroubleshootingMaintenanceManual/1-TroubleshootingMaintenanceManual.md","lastUpdated":1755266146000}'),n={name:"guide/container/k8s/TroubleshootingMaintenanceManual/1-TroubleshootingMaintenanceManual.md"},o=l(`<h1 id="_1-prometheus-operator监控kube-controller-manager失败" tabindex="-1">1. Prometheus-Operator监控kube-controller-manager失败 <a class="header-anchor" href="#_1-prometheus-operator监控kube-controller-manager失败" aria-label="Permalink to &quot;1. Prometheus-Operator监控kube-controller-manager失败&quot;">​</a></h1><h2 id="问题描述" tabindex="-1">问题描述 <a class="header-anchor" href="#问题描述" aria-label="Permalink to &quot;问题描述&quot;">​</a></h2><p>k8s版本1.25.3，kube-controller-manager使用https监听端口10257。监控Target页面显示DOWN，错误提示<code>server returned HTTP status 403 Forbidden</code>，点击metrics url 提示：</p><p>解决方法：</p><p>在 kube-controller-manager 的启动参数增加下面两个参数</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">--authentication-kubeconfig</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">/etc/kubernetes/controller-manager.kubeconfig</span></span>
<span class="line"><span style="color:#E1E4E8;">--authorization-kubeconfig</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">/etc/kubernetes/controller-manager.kubeconfig</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">--authentication-kubeconfig</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">/etc/kubernetes/controller-manager.kubeconfig</span></span>
<span class="line"><span style="color:#24292E;">--authorization-kubeconfig</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">/etc/kubernetes/controller-manager.kubeconfig</span></span></code></pre></div><p>由于是kubeadm 部署,所以会自动重启服务</p><ul><li>二进制方式</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">systemctl daemon-reload</span></span>
<span class="line"><span style="color:#e1e4e8;">systemctl restart kube-controller-manager.service</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">systemctl daemon-reload</span></span>
<span class="line"><span style="color:#24292e;">systemctl restart kube-controller-manager.service</span></span></code></pre></div><h1 id="_2-k8s-平常工作" tabindex="-1">2. k8s 平常工作 <a class="header-anchor" href="#_2-k8s-平常工作" aria-label="Permalink to &quot;2. k8s 平常工作&quot;">​</a></h1><p>一、K8s 平台运维</p><p>一般工作内容包含：K8s 集群的建设（包含架构，如多地多中心）、集群维护、平台工具的建设，包含流水线、K8s管理平台等。可能遇到的问题，如下：</p><p>1）K8s集群的建设</p><ul><li>如何创建K8s集群</li><li>版本的选择，集群升级问题</li><li>存储类创建（一般会对接Ceph商业存储）</li><li>K8s 的网络建设</li><li>Ingress的规划，每个集群 Ingress 应该做一个 LB 负载均衡</li></ul><p>2）集群维护</p><ul><li>Pod 资源调度是否均衡准确问题</li><li>K8s 节点的剔除和添加，这里可能是因为节点故障或资源不足，如果节点使用的是物理机还有可能节点需要迁移机柜，所以需要剔除</li><li>节点故障进行日常的排查处理</li><li>日常巡检</li></ul><p>3）流水线的建设</p><ul><li>流水线脚本的编写</li><li>流水线权限管理，因为开发、测试、运维权限各不相同。</li><li>多集群发布流水线，可以选择支持多集群同时发布（多地多中心或备节点需要）</li></ul><p>4）K8s管理平台</p><ul><li>管理平台选型，是否支持纳管多个集群</li><li>如果管理平台不可用，需进行排查处理</li></ul><p>二、K8s 项目运维</p><p>一般工作内容包含：开发后的项目部署，部署流程也就是创建项目所需的微服务流水线 -》 运行各个流水线 -》添加或修改配置 -》使 Deployment 可正常运行 -》提供域名访问服务（Ingress）-》日常维护变更。可能遇到的问题，如下：</p><p>1）创建项目所需的微服务流水线</p><ul><li>如何创建</li></ul><p>2）运行各个流水线</p><ul><li>项目编译问题</li><li>Dockerfile编写，项目打包</li></ul><p>3）添加或修改配置</p><ul><li>配置包含，Nacos配置、ConfigMap配置</li></ul><p>4）使 Deployment 可正常运行</p><ul><li>使服务正常运行，处理相关报错。如，连接不上 MySQL、Redis，代码报错需要开发自己处理，运维人员协助。</li></ul><p>5）提供域名访问服务（Ingress）</p><ul><li>创建 Ingress 提供服务</li><li>配置 Ingress，处理跨域、重写规则</li></ul><p>6）日常维护变更</p><p>项目中日常出现问题，需要及时排查。如，服务不可访问、服务启动失败、镜像拉取不到、流水线构建失败、项目迁移变更、项目对象存储修改、项目对接ELK日志等。</p><h1 id="_3-k8s性能瓶颈" tabindex="-1">3. k8s性能瓶颈 <a class="header-anchor" href="#_3-k8s性能瓶颈" aria-label="Permalink to &quot;3. k8s性能瓶颈&quot;">​</a></h1><h2 id="_3-1-集群层面" tabindex="-1">3.1 集群层面 <a class="header-anchor" href="#_3-1-集群层面" aria-label="Permalink to &quot;3.1 集群层面&quot;">​</a></h2><ul><li>API Server 响应慢</li><li>Etcd 压力大</li><li>控制面组件异常</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">API</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Server</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">响应慢</span></span>
<span class="line"><span style="color:#B392F0;">• apiserver_request_duration_seconds</span></span>
<span class="line"><span style="color:#B392F0;">• apiserver_request_total</span></span>
<span class="line"><span style="color:#B392F0;">• etcd_request_duration_seconds</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">API</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Server</span><span style="color:#24292E;"> </span><span style="color:#032F62;">响应慢</span></span>
<span class="line"><span style="color:#6F42C1;">• apiserver_request_duration_seconds</span></span>
<span class="line"><span style="color:#6F42C1;">• apiserver_request_total</span></span>
<span class="line"><span style="color:#6F42C1;">• etcd_request_duration_seconds</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">• 大量资源频繁创建 / 更新（如 CRD 过多）</span></span>
<span class="line"><span style="color:#e1e4e8;">• 监控中断导致 watch backlog 积压</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">etcdctl endpoint health</span></span>
<span class="line"><span style="color:#e1e4e8;">etcdctl --write-out=table endpoint status</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">• 大量资源频繁创建 / 更新（如 CRD 过多）</span></span>
<span class="line"><span style="color:#24292e;">• 监控中断导致 watch backlog 积压</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">etcdctl endpoint health</span></span>
<span class="line"><span style="color:#24292e;">etcdctl --write-out=table endpoint status</span></span></code></pre></div><h2 id="_3-2-节点层面" tabindex="-1">3.2 节点层面 <a class="header-anchor" href="#_3-2-节点层面" aria-label="Permalink to &quot;3.2 节点层面&quot;">​</a></h2><ul><li>CPU / Memory / Disk I/O 饱和</li><li>Kubelet 资源不足</li><li>宿主机负载高</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl top nodes</span></span>
<span class="line"><span style="color:#e1e4e8;">kubectl describe node &lt;name&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl top nodes</span></span>
<span class="line"><span style="color:#24292e;">kubectl describe node &lt;name&gt;</span></span></code></pre></div><p>关注：</p><p>​ • <code>CPU 利用率是否接近 100%</code></p><p>​ • <code>Memory 使用是否频繁触顶</code></p><p>​ • <code>Node NotReady 是否频发</code></p><h2 id="_3-3-pod-层面" tabindex="-1">3.3 Pod 层面 <a class="header-anchor" href="#_3-3-pod-层面" aria-label="Permalink to &quot;3.3 Pod 层面&quot;">​</a></h2><ul><li>OOM / CPU Throttling</li><li>Pending / CrashLoopBackOff</li><li>容器冷启动慢</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">kubectl describe pod &lt;name&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">kubectl logs &lt;pod&gt; --previous</span></span>
<span class="line"><span style="color:#e1e4e8;">kubectl get events</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">kubectl describe pod &lt;name&gt;</span></span>
<span class="line"><span style="color:#24292e;">kubectl logs &lt;pod&gt; --previous</span></span>
<span class="line"><span style="color:#24292e;">kubectl get events</span></span></code></pre></div><p>特别关注：</p><p>• <code>Exit Code: 137</code>、<code>OOMKilled</code></p><p>• <code>CrashLoopBackOff</code></p><p>• <code>ImagePullBackOff</code></p><h2 id="_3-4-网络层面" tabindex="-1">3.4 网络层面 <a class="header-anchor" href="#_3-4-网络层面" aria-label="Permalink to &quot;3.4 网络层面&quot;">​</a></h2><ul><li>DNS 延迟</li><li>Service 负载不均</li><li>网络丢包 / 延迟</li></ul><p>重点监控指标：</p><p>​ • CoreDNS 响应时间</p><p>​ • 网络 RTT 和丢包率（使用 <code>ping</code>, <code>mtr</code>, <code>iperf</code>）</p><p>​ • CNI 插件状态（如 Calico、Flannel）</p><p>也可通过 Istio 或 Cilium 导入监控视图。</p><h2 id="_3-5-存储层面" tabindex="-1">3.5 存储层面 <a class="header-anchor" href="#_3-5-存储层面" aria-label="Permalink to &quot;3.5 存储层面&quot;">​</a></h2><ul><li>PV 响应慢</li><li>PVC 挂载失败</li><li>IO 延迟高</li></ul><p>很多“慢请求”本质上是磁盘太慢！</p><p>排查方向：</p><p>​ • PVC 挂载延迟</p><p>​ • IO Wait 异常</p><p>​ • NFS / Ceph 网络拥塞</p><p>可通过 Node Exporter 查看：</p><p>​ • <code>node_disk_io_time_seconds_total</code></p><p>​ • <code>node_disk_read/write_bytes_total</code></p>`,70),p=[o];function t(i,c,r,d,u,h){return s(),a("div",null,p)}const k=e(n,[["render",t]]);export{b as __pageData,k as default};
