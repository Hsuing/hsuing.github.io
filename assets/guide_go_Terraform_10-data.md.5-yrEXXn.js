import{_ as s,o as a,c as n,R as e}from"./chunks/framework.zUbWieqp.js";const g=JSON.parse('{"title":"1. data","description":"","frontmatter":{},"headers":[],"relativePath":"guide/go/Terraform/10-data.md","filePath":"guide/go/Terraform/10-data.md","lastUpdated":1752568087000}'),t={name:"guide/go/Terraform/10-data.md"},o=e(`<h1 id="_1-data" tabindex="-1">1. <a href="https://developer.hashicorp.com/terraform/tutorials/configuration-language/data-sources" target="_blank" rel="noreferrer">data</a> <a class="header-anchor" href="#_1-data" aria-label="Permalink to &quot;1. [data](https://developer.hashicorp.com/terraform/tutorials/configuration-language/data-sources)&quot;">​</a></h1><h2 id="_1-1-什么是data-source-✅" tabindex="-1">1.1 什么是Data Source？✅ <a class="header-anchor" href="#_1-1-什么是data-source-✅" aria-label="Permalink to &quot;1.1 什么是Data Source？✅&quot;">​</a></h2><p>​ Terraform Data Sources（数据源）允许我们从API或其他Terraform状态后端动态获取数据。数据源包括来自云提供商的数据或来自其他配置的Terraform输出。</p><p>与resource不同，resource的括号体中给定的是参数的定义条件，而在data的括号体中是传给数据源的<code>查询条件</code>。查询条件参数的种类取决于provider给定的数据源的类型。</p><p>与resource类似，data都可以输入并对外输出。但resource会触发Terraform对基础设施对象进行<code>增删改查操作</code>，而data只会触发<code>查操作</code>。</p><h2 id="_1-2-使用说明✅" tabindex="-1">1.2 使用说明✅ <a class="header-anchor" href="#_1-2-使用说明✅" aria-label="Permalink to &quot;1.2 使用说明✅&quot;">​</a></h2><p><a href="https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/data-sources/instances" target="_blank" rel="noreferrer">https://registry.terraform.io/providers/aliyun/alicloud/latest/docs/data-sources/instances</a></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/20250711152005137.png" alt="image-20250711151956009"></p><p>可以通过输入参数，</p><p>vim data.tf</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">data &quot;alicloud_instances&quot; &quot;instance-test&quot; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">name_regex = &quot;lyc&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">status     = &quot;Running&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">data &quot;alicloud_instances&quot; &quot;instance-test&quot; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">name_regex = &quot;lyc&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">status     = &quot;Running&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>vim output.tf</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">output &quot;name_regex_test&quot; {</span></span>
<span class="line"><span style="color:#e1e4e8;">  #输出结果，是list 的加*</span></span>
<span class="line"><span style="color:#e1e4e8;">  value       = data.alicloud_instances.instance-test.instances.*.id</span></span>
<span class="line"><span style="color:#e1e4e8;">  description = &quot;this is instance name test&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">output &quot;name_regex_test&quot; {</span></span>
<span class="line"><span style="color:#24292e;">  #输出结果，是list 的加*</span></span>
<span class="line"><span style="color:#24292e;">  value       = data.alicloud_instances.instance-test.instances.*.id</span></span>
<span class="line"><span style="color:#24292e;">  description = &quot;this is instance name test&quot;</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/20250711164114337.png" alt="image-20250711164112506"></p><blockquote><p>注意，alicloud_instances alicloud_instance 的区别</p><p>alicloud_instance 是resources中的资源，alicloud_instances 是data sources中的</p></blockquote><h2 id="_1-3-引用数据源✅" tabindex="-1">1.3 引用数据源✅ <a class="header-anchor" href="#_1-3-引用数据源✅" aria-label="Permalink to &quot;1.3 引用数据源✅&quot;">​</a></h2><p>引用数据源数据的语法是<code>data.&lt;TYPE&gt;.&lt;NAME&gt;.&lt;ATTRIBUTE&gt;</code>：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">data &quot;alicloud_instances&quot; &quot;instance-test&quot; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">name_regex = &quot;lyc&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">status     = &quot;Running&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">data &quot;alicloud_instances&quot; &quot;instance-test&quot; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">name_regex = &quot;lyc&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">status     = &quot;Running&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">output &quot;name_regex_test&quot; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">#输出结果，是list 的加*</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">value       = data.alicloud_instances.instance-test.instances.*.id</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">description = &quot;this is instance name test&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">output &quot;name_regex_test&quot; {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">#输出结果，是list 的加*</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">value       = data.alicloud_instances.instance-test.instances.*.id</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">description = &quot;this is instance name test&quot;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">💡 说明</p><ul><li>数据源允许查询或计算一些数据以供其他地方使用。使用数据源可以使得Terraform代码使用在Terraform管理范围之外的一些信息，或者是读取其他Terraform代码保存的状态。</li><li>可以在同一模块内的代码中通过数据源名称来引用数据源，但无法从模块外部直接访问数据源。</li><li>使用data的时候，data还未获取到该资源，或者获取到的是一个错误或不存在的资源，则会报错。需要先有data获取到的资源，才能引l用data的输出数据。</li></ul></div>`,20),l=[o];function p(c,i,r,u,d,h){return a(),n("div",null,l)}const m=s(t,[["render",p]]);export{g as __pageData,m as default};
