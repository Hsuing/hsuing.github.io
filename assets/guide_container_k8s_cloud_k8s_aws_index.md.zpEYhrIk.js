import{_ as e,o as a,c as t,R as r}from"./chunks/framework.zUbWieqp.js";const _=JSON.parse('{"title":"1. 什么是EKS？","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/cloud_k8s/aws/index.md","filePath":"guide/container/k8s/cloud_k8s/aws/index.md","lastUpdated":1755172914000}'),o={name:"guide/container/k8s/cloud_k8s/aws/index.md"},n=r('<h1 id="_1-什么是eks" tabindex="-1">1. 什么是<a href="https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/what-is-eks.html" target="_blank" rel="noreferrer">EKS</a>？ <a class="header-anchor" href="#_1-什么是eks" aria-label="Permalink to &quot;1. 什么是[EKS](https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/what-is-eks.html)？&quot;">​</a></h1><h2 id="_1-1-介绍" tabindex="-1">1.1 介绍 <a class="header-anchor" href="#_1-1-介绍" aria-label="Permalink to &quot;1.1 介绍&quot;">​</a></h2><h2 id="_1-2-分类" tabindex="-1">1.2 分类 <a class="header-anchor" href="#_1-2-分类" aria-label="Permalink to &quot;1.2 分类&quot;">​</a></h2><h3 id="_1-2-1自管理节点" tabindex="-1">1.2.1自管理节点 <a class="header-anchor" href="#_1-2-1自管理节点" aria-label="Permalink to &quot;1.2.1自管理节点&quot;">​</a></h3><p>只有控制层面由 Amazon EKS 管理。您完全控制和管理数据层面节点（包括预置、更新、监控和其他任务）。</p><h3 id="_1-2-2托管式节点" tabindex="-1">1.2.2托管式节点 <a class="header-anchor" href="#_1-2-2托管式节点" aria-label="Permalink to &quot;1.2.2托管式节点&quot;">​</a></h3><p>托管式节点组使用 Amazon EKS API 启动和管理 Amazon Elastic Compute Cloud (Amazon EC2) 实例，这些实例可针对 Amazon EKS 集群运行容器。虽然为您启动和管理了托管式节点组，但您仍然可以看到 AWS 账户中正在使用的所有资源，例如 EC2 实例和 Auto Scaling 组。您仍然可以获得所有控制、安全性和可见性，而且工作量更少。</p><ul><li><strong>预置</strong> – 只需一个命令，即可部署托管式节点组。然后，Amazon EKS 将使用最新的 Amazon EKS 优化的 Amazon Machine Image (AMI) 创建节点。AWS 服务将它们部署到多个可用区中，并由 Auto Scaling 组提供支持。您可以更改扩展参数。</li><li><strong>管理</strong> – Amazon EKS 负责管理您的托管式节点组的运行状况监控。Amazon EKS 会在有问题时自动通知您，包括正在删除、无法访问或不可用的所需资源。Amazon EKS 还会通知您更新问题、超出限制以及创建或删除的失败操作。您还可以从节点级 Secure Shell (SSH) 访问、开源日志路由器或 Amazon CloudWatch 获取日志。所有托管式节点组事件也会记录在 AWS CloudTrail 中。</li><li><strong>更新</strong> – 只需一个命令，您就可以根据需要更新托管式节点组。然后，Amazon EKS 会处理节点终止以进行滚动更新，并自动更新到您的 Kubernetes 版本的最新 AMI 版本。</li><li><strong>扩展</strong> – 托管式节点组负责为您扩展节点。但是，您仍然可以控制扩展参数，例如 Kubernetes 标签、AWS 标签和节点组的大小。</li><li><strong>工具</strong> – 您可以使用 eksctl 预置托管式节点组。</li></ul><h3 id="_1-2-3-fargate" tabindex="-1">1.2.3 <strong>Fargate</strong> <a class="header-anchor" href="#_1-2-3-fargate" aria-label="Permalink to &quot;1.2.3 **Fargate**&quot;">​</a></h3><p>借助托管式节点组，您可以减少花费在基础设施管理上的时间。但是，也许您希望完全专注于创建应用程序，让 Amazon EKS 全面管理您的数据层面。您可以通过在 Fargate 上运行您的 Pod 来实现此目的。</p><p>Fargate 可管理您的 Kubernetes 数据层面的完整基础设施。您只需要专心运行您的 Pod。</p><ul><li>原生 – Fargate 运行原生 Kubernetes Pod。无需更改或配置 AWS 的任何内容。</li><li>保持适当大小 – Fargate 可动态预置所需资源，以满足您的 Pod 和资源需求；不多不少，正好合适。</li><li>快速简单 – Fargate 可以为您快速扩展。无需设置 Cluster Autoscaler。</li><li>优化 – 您只需在 Pod 运行时为它们付费，并获得 Pod 级别的账单可见性。</li></ul><h1 id="_1-使用eks技术栈" tabindex="-1">1. 使用EKS技术栈 <a class="header-anchor" href="#_1-使用eks技术栈" aria-label="Permalink to &quot;1. 使用EKS技术栈&quot;">​</a></h1><h2 id="_1-1-推荐" tabindex="-1">1.1 推荐 <a class="header-anchor" href="#_1-1-推荐" aria-label="Permalink to &quot;1.1 推荐&quot;">​</a></h2><p>除非你预算极其紧张（并且你的时间毫无成本可言），否则没有理由自己运行控制平面，而不选择使用 EKS。使用 AWS 内其他替代方案（如 ECS）的主要优势在于它与 AWS 服务的深度集成。幸运的是，Kubernetes 在许多方面已经迎头赶上，比如通过 external-dns 与 Route53 集成。</p><ul><li><p>RDS</p></li><li><p>ECR</p></li><li><p>AWS VPN</p></li></ul><p>用 Okta 来管理 VPN</p><ul><li>Control Tower Account Factory for Terraform</li></ul><p>在集成 AFT（Account Factory for Terraform）之前，使用 Control Tower 非常繁琐，主要是因为自动化实现非常困难。自从将 AFT 集成到我们的技术栈后，账户创建流程变得更加顺畅。AFT 还简化了账户标签的标准化过程</p><ul><li>Karpenter</li></ul><p>自动扩展</p><ul><li><p>Helm</p></li><li><p>Helm Charts 存储在 ECR (OCI)</p></li></ul><p>用 OCI（Open Container Initiative）存储 Helm Charts，整个过程变得更加简化且高效</p><ul><li><p>OpenTelemetry</p></li><li><p>Renovatebot</p></li></ul><p>保持依赖更新的重要性</p><ul><li>ExternalSecrets</li></ul><p>ExternalSecrets 在同步 AWS 与 Kubernetes 密钥方面表现得非常好。这个过程简单易懂，开发者容易上手，并且让我们能够利用 Terraform 来轻松创建和更新 AWS 中的密钥，同时也为用户提供了一个界面来创建和更新密钥</p><ul><li>ExternalDNS</li></ul><p>ExternalDNS 是一个很棒的产品。它将我们的 Kubernetes 与 Route53 DNS 记录同步</p><ul><li>cert-manager</li></ul><p>用 cert-manager 管理 SSL 证书</p><ul><li>Terraform</li></ul><p>应急模板</p><p><a href="https://response.pagerduty.com/after/post_mortem_template/" target="_blank" rel="noreferrer">https://response.pagerduty.com/after/post_mortem_template/</a></p><hr><p><a href="https://aws.amazon.com/cn/ec2/instance-types/" target="_blank" rel="noreferrer">https://aws.amazon.com/cn/ec2/instance-types/</a></p><p><a href="https://aws.amazon.com/eks/" target="_blank" rel="noreferrer">Amazon Elastic Kubernetes Service（EKS）</a>就是这种情况，其中<a href="https://github.com/awslabs/amazon-eks-ami/blob/master/files/eni-max-pods.txt" target="_blank" rel="noreferrer">每个节点的最大 Pod 数</a>取决于实例类型</p><ul><li>支持节点大小</li></ul><p><a href="https://github.com/awslabs/amazon-eks-ami/blob/main/nodeadm/internal/kubelet/eni-max-pods.txt" target="_blank" rel="noreferrer">https://github.com/awslabs/amazon-eks-ami/blob/main/nodeadm/internal/kubelet/eni-max-pods.txt</a></p><p><a href="https://docs.aws.amazon.com/zh_cn/prescriptive-guidance/latest/patterns/place-kubernetes-pods-on-amazon-eks-by-using-node-affinity-taints-and-tolerations.html" target="_blank" rel="noreferrer">https://docs.aws.amazon.com/zh_cn/prescriptive-guidance/latest/patterns/place-kubernetes-pods-on-amazon-eks-by-using-node-affinity-taints-and-tolerations.html</a></p><ul><li>国内</li></ul><p><a href="https://docs.amazonaws.cn/eks/latest/userguide/managing-kube-proxy.html" target="_blank" rel="noreferrer">https://docs.amazonaws.cn/eks/latest/userguide/managing-kube-proxy.html</a></p><ul><li>eks work节点费用</li></ul><p><a href="https://aws.amazon.com/cn/ec2/pricing/on-demand/" target="_blank" rel="noreferrer">https://aws.amazon.com/cn/ec2/pricing/on-demand/</a></p><ul><li>视频</li></ul><p><a href="https://www.youtube.com/watch?v=RRCrY12VY_s" target="_blank" rel="noreferrer">https://www.youtube.com/watch?v=RRCrY12VY_s</a></p><p><a href="https://www.youtube.com/watch?v=pTmIoKUeU-A&amp;t=1955s" target="_blank" rel="noreferrer">https://www.youtube.com/watch?v=pTmIoKUeU-A&amp;t=1955s</a></p><p><a href="https://www.youtube.com/watch?v=X48VuDVv0do&amp;t=84s" target="_blank" rel="noreferrer">https://www.youtube.com/watch?v=X48VuDVv0do&amp;t=84s</a></p>',48),l=[n];function s(i,p,c,u,m,h){return a(),t("div",null,l)}const b=e(o,[["render",s]]);export{_ as __pageData,b as default};
