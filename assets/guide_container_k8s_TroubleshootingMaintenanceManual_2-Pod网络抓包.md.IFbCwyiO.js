import{_ as s,o as a,c as n,R as p}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"1. 宿主机上捕获","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/TroubleshootingMaintenanceManual/2-Pod网络抓包.md","filePath":"guide/container/k8s/TroubleshootingMaintenanceManual/2-Pod网络抓包.md","lastUpdated":1730904675000}'),l={name:"guide/container/k8s/TroubleshootingMaintenanceManual/2-Pod网络抓包.md"},o=p(`<h1 id="_1-宿主机上捕获" tabindex="-1">1. 宿主机上捕获 <a class="header-anchor" href="#_1-宿主机上捕获" aria-label="Permalink to &quot;1. 宿主机上捕获&quot;">​</a></h1><p>应用其实是运行在 Pod 内的 Container 里的，所以只要定位到 Container 被调度到了哪个 Node 上，在相应的 Node 里，对容器进行抓包即可。</p><h2 id="_2-1-定位pod-ip和containerid" tabindex="-1">2.1 定位Pod ip和containerID <a class="header-anchor" href="#_2-1-定位pod-ip和containerid" aria-label="Permalink to &quot;2.1 定位Pod ip和containerID&quot;">​</a></h2><p>定位 Pod 的 containerID 以及它所运行的宿主机 IP</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># kubectl get pod -n \${NAMESPACE}\${POD_NAME} -o json|jq &#39;.status|{hostIP: .hostIP, container: [.containerStatuses[]|{name: .name, containerID: .containerID}]}&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">&quot;hostIP&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;10.103.236.203&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">&quot;container&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">&quot;name&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;app&quot;,</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">&quot;containerID&quot;</span><span style="color:#79B8FF;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;docker://808605e67373b6dee49162c67745e8cd0f5062978385707c91e42d1c37bfba57&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  ]</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># kubectl get pod -n \${NAMESPACE}\${POD_NAME} -o json|jq &#39;.status|{hostIP: .hostIP, container: [.containerStatuses[]|{name: .name, containerID: .containerID}]}&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">&quot;hostIP&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;10.103.236.203&quot;,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">&quot;container&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">&quot;name&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;app&quot;,</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">&quot;containerID&quot;</span><span style="color:#005CC5;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;docker://808605e67373b6dee49162c67745e8cd0f5062978385707c91e42d1c37bfba57&quot;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">  ]</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="_2-2-查找网络接口索引" tabindex="-1">2.2 查找网络接口索引 <a class="header-anchor" href="#_2-2-查找网络接口索引" aria-label="Permalink to &quot;2.2 查找网络接口索引&quot;">​</a></h2><p>通过 ssh 登陆到 Pod 所在的宿主机上，然后在容器内执行 cat /sys/class/net/eth0/iflink，查找容器中的网卡与宿主机的 veth 网卡之间的对应关系</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">exec</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-it</span><span style="color:#E1E4E8;"> \${PodName} </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/bin/sh</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;cat /sys/class/net/eth0/iflink&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[root@kube-master </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]# kubectl exec -it app-prod-97dfb4bf-h59vq -- /bin/sh -c </span><span style="color:#9ECBFF;">&quot;cat /sys/class/net/eth0/iflink&quot;</span></span>
<span class="line"><span style="color:#B392F0;">14</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">exec</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-it</span><span style="color:#24292E;"> \${PodName} </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/bin/sh</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;cat /sys/class/net/eth0/iflink&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[root@kube-master </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]# kubectl exec -it app-prod-97dfb4bf-h59vq -- /bin/sh -c </span><span style="color:#032F62;">&quot;cat /sys/class/net/eth0/iflink&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">14</span></span></code></pre></div><h2 id="_2-3-查找网络接口信息" tabindex="-1">2.3 查找网络接口信息 <a class="header-anchor" href="#_2-3-查找网络接口信息" aria-label="Permalink to &quot;2.3 查找网络接口信息&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@kube-master </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]# ip link </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">grep</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">14</span></span>
<span class="line"><span style="color:#B392F0;">14:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cali3002ec233ba@if4:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">BROADCAST,MULTICAST,UP,LOWER_U</span><span style="color:#E1E4E8;">P</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mtu</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1480</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">qdisc</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">noqueue</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">state</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">UP</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mode</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">DEFAULT</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">group</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">default</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@kube-master </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]# ip link </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">grep</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">14</span></span>
<span class="line"><span style="color:#6F42C1;">14:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cali3002ec233ba@if4:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">BROADCAST,MULTICAST,UP,LOWER_U</span><span style="color:#24292E;">P</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mtu</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1480</span><span style="color:#24292E;"> </span><span style="color:#032F62;">qdisc</span><span style="color:#24292E;"> </span><span style="color:#032F62;">noqueue</span><span style="color:#24292E;"> </span><span style="color:#032F62;">state</span><span style="color:#24292E;"> </span><span style="color:#032F62;">UP</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mode</span><span style="color:#24292E;"> </span><span style="color:#032F62;">DEFAULT</span><span style="color:#24292E;"> </span><span style="color:#032F62;">group</span><span style="color:#24292E;"> </span><span style="color:#032F62;">default</span></span></code></pre></div><h2 id="_2-4-在宿主机上抓包" tabindex="-1">2.4 在宿主机上抓包 <a class="header-anchor" href="#_2-4-在宿主机上抓包" aria-label="Permalink to &quot;2.4 在宿主机上抓包&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">tcpdump</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ali3002ec233ba@if4</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-w</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/root/tcpdump.pcap</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">tcpdump</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ali3002ec233ba@if4</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-w</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/root/tcpdump.pcap</span></span></code></pre></div><h1 id="_2-在-pod-内抓包" tabindex="-1">2. 在 Pod 内抓包 <a class="header-anchor" href="#_2-在-pod-内抓包" aria-label="Permalink to &quot;2. 在 Pod 内抓包&quot;">​</a></h1><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">exec</span><span style="color:#E1E4E8;">\${POD_NAME}  </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tcpdump</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eth0</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-w</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">wireshark</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-k</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">-</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">exec</span><span style="color:#24292E;">\${POD_NAME}  </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tcpdump</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eth0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-w</span><span style="color:#24292E;"> </span><span style="color:#032F62;">-</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">wireshark</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-k</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">-</span></span></code></pre></div><p>这种方式的安装tcpdump ,增加了镜像的大小 ,不建议这种方式</p><h2 id="_2-1-通过nsenter" tabindex="-1">2.1 通过nsenter <a class="header-anchor" href="#_2-1-通过nsenter" aria-label="Permalink to &quot;2.1 通过nsenter&quot;">​</a></h2><h3 id="_2-1-1-nsenter是什么" tabindex="-1">2.1.1 nsenter是什么 <a class="header-anchor" href="#_2-1-1-nsenter是什么" aria-label="Permalink to &quot;2.1.1 nsenter是什么&quot;">​</a></h3><p>nsenter命令是一个可以在指定进程的命令空间下运行指定程序的命令</p><h3 id="_2-1-2-安装" tabindex="-1">2.1.2 安装 <a class="header-anchor" href="#_2-1-2-安装" aria-label="Permalink to &quot;2.1.2 安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#下载</span></span>
<span class="line"><span style="color:#B392F0;">wget</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://www.kernel.org/pub/linux/utils/util-linux/v2.40/util-linux-2.40.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#解压</span></span>
<span class="line"><span style="color:#B392F0;">tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">zxvf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">util-linux-2.40.tar.gz</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">util-linux-2.40</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#编译</span></span>
<span class="line"><span style="color:#B392F0;">./configure</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--without-ncurses</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">cp</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nsenter</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/bin/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#下载</span></span>
<span class="line"><span style="color:#6F42C1;">wget</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://www.kernel.org/pub/linux/utils/util-linux/v2.40/util-linux-2.40.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#解压</span></span>
<span class="line"><span style="color:#6F42C1;">tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">zxvf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">util-linux-2.40.tar.gz</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">util-linux-2.40</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#编译</span></span>
<span class="line"><span style="color:#6F42C1;">./configure</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--without-ncurses</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">cp</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nsenter</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/bin/</span></span></code></pre></div><ul><li>或者yum 安装</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">yum</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">util-linux</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yum</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">util-linux</span></span></code></pre></div><h3 id="_2-1-3-帮助" tabindex="-1">2.1.3 帮助 <a class="header-anchor" href="#_2-1-3-帮助" aria-label="Permalink to &quot;2.1.3 帮助&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">nsenter --help</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">选项：</span></span>
<span class="line"><span style="color:#e1e4e8;"> -a, --all              enter all namespaces</span></span>
<span class="line"><span style="color:#e1e4e8;"> -t, --target &lt;pid&gt;     要获取名字空间的目标进程</span></span>
<span class="line"><span style="color:#e1e4e8;"> -m, --mount[=&lt;文件&gt;]   进入 mount 名字空间</span></span>
<span class="line"><span style="color:#e1e4e8;"> -u, --uts[=&lt;文件&gt;]     进入 UTS 名字空间(主机名等)</span></span>
<span class="line"><span style="color:#e1e4e8;"> -i, --ipc[=&lt;文件&gt;]     进入 System V IPC 名字空间</span></span>
<span class="line"><span style="color:#e1e4e8;"> -n, --net[=&lt;文件&gt;]     进入网络名字空间</span></span>
<span class="line"><span style="color:#e1e4e8;"> -p, --pid[=&lt;文件&gt;]     进入 pid 名字空间</span></span>
<span class="line"><span style="color:#e1e4e8;"> -C, --cgroup[=&lt;文件&gt;]  进入 cgroup 名字空间</span></span>
<span class="line"><span style="color:#e1e4e8;"> -U, --user[=&lt;文件&gt;]    进入用户名字空间</span></span>
<span class="line"><span style="color:#e1e4e8;"> -S, --setuid &lt;uid&gt;     设置进入空间中的 uid</span></span>
<span class="line"><span style="color:#e1e4e8;"> -G, --setgid &lt;gid&gt;     设置进入名字空间中的 gid</span></span>
<span class="line"><span style="color:#e1e4e8;">     --preserve-credentials 不干涉 uid 或 gid</span></span>
<span class="line"><span style="color:#e1e4e8;"> -r, --root[=&lt;目录&gt;]     设置根目录</span></span>
<span class="line"><span style="color:#e1e4e8;"> -w, --wd[=&lt;dir&gt;]       设置工作目录</span></span>
<span class="line"><span style="color:#e1e4e8;"> -F, --no-fork          执行 &lt;程序&gt; 前不 fork</span></span>
<span class="line"><span style="color:#e1e4e8;"> -Z, --follow-context  根据 --target PID 设置 SELinux 环境</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"> -h, --help             display this help</span></span>
<span class="line"><span style="color:#e1e4e8;"> -V, --version          display version</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">nsenter --help</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">选项：</span></span>
<span class="line"><span style="color:#24292e;"> -a, --all              enter all namespaces</span></span>
<span class="line"><span style="color:#24292e;"> -t, --target &lt;pid&gt;     要获取名字空间的目标进程</span></span>
<span class="line"><span style="color:#24292e;"> -m, --mount[=&lt;文件&gt;]   进入 mount 名字空间</span></span>
<span class="line"><span style="color:#24292e;"> -u, --uts[=&lt;文件&gt;]     进入 UTS 名字空间(主机名等)</span></span>
<span class="line"><span style="color:#24292e;"> -i, --ipc[=&lt;文件&gt;]     进入 System V IPC 名字空间</span></span>
<span class="line"><span style="color:#24292e;"> -n, --net[=&lt;文件&gt;]     进入网络名字空间</span></span>
<span class="line"><span style="color:#24292e;"> -p, --pid[=&lt;文件&gt;]     进入 pid 名字空间</span></span>
<span class="line"><span style="color:#24292e;"> -C, --cgroup[=&lt;文件&gt;]  进入 cgroup 名字空间</span></span>
<span class="line"><span style="color:#24292e;"> -U, --user[=&lt;文件&gt;]    进入用户名字空间</span></span>
<span class="line"><span style="color:#24292e;"> -S, --setuid &lt;uid&gt;     设置进入空间中的 uid</span></span>
<span class="line"><span style="color:#24292e;"> -G, --setgid &lt;gid&gt;     设置进入名字空间中的 gid</span></span>
<span class="line"><span style="color:#24292e;">     --preserve-credentials 不干涉 uid 或 gid</span></span>
<span class="line"><span style="color:#24292e;"> -r, --root[=&lt;目录&gt;]     设置根目录</span></span>
<span class="line"><span style="color:#24292e;"> -w, --wd[=&lt;dir&gt;]       设置工作目录</span></span>
<span class="line"><span style="color:#24292e;"> -F, --no-fork          执行 &lt;程序&gt; 前不 fork</span></span>
<span class="line"><span style="color:#24292e;"> -Z, --follow-context  根据 --target PID 设置 SELinux 环境</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"> -h, --help             display this help</span></span>
<span class="line"><span style="color:#24292e;"> -V, --version          display version</span></span></code></pre></div><h3 id="_2-1-4-调试pod网络" tabindex="-1">2.1.4 调试Pod网络 <a class="header-anchor" href="#_2-1-4-调试pod网络" aria-label="Permalink to &quot;2.1.4 调试Pod网络&quot;">​</a></h3><ul><li>获取pid</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pods</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-A</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">wide</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pods</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-A</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">wide</span></span></code></pre></div><ul><li>到pod所在node节点上面</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">[root@kube-node02 ~]# docker inspect 808605e67373 |grep Pid</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;Pid&quot;: 7004,</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;PidMode&quot;: &quot;&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;PidsLimit&quot;: null,</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">[root@kube-node02 ~]# docker inspect 808605e67373 |grep Pid</span></span>
<span class="line"><span style="color:#24292e;">            &quot;Pid&quot;: 7004,</span></span>
<span class="line"><span style="color:#24292e;">            &quot;PidMode&quot;: &quot;&quot;,</span></span>
<span class="line"><span style="color:#24292e;">            &quot;PidsLimit&quot;: null,</span></span></code></pre></div><ul><li>进入到pod</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">nsenter</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">7004</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">nsenter</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">7004</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span></span></code></pre></div><h3 id="_2-1-5-抓包" tabindex="-1">2.1.5 抓包 <a class="header-anchor" href="#_2-1-5-抓包" aria-label="Permalink to &quot;2.1.5 抓包&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">tcpdump</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-nnnvv</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-As</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-i</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eth0</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">port</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-w</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">demo2.pcap</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">curl -O https://arthas.aliyun.com/arthas-boot.jar</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># 登录 Pod 所在 Node 节点，抓包</span></span>
<span class="line"><span style="color:#E1E4E8;">podName</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">xxx</span></span>
<span class="line"><span style="color:#B392F0;">nsenter -t $(nerdctl ps </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> grep $</span><span style="color:#E1E4E8;">{podName}</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">grep -v pause </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">awk </span><span style="color:#B392F0;">&#39;{print $1}&#39;</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;"> xargs nerdctl inspect -f </span><span style="color:#E1E4E8;">{{.State.Pid}</span><span style="color:#B392F0;">}</span><span style="color:#E1E4E8;">) -n tcpdump -i eth0 -nne -C 100 -W 30 -w /tmp/container.pcap</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">tcpdump</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-nnnvv</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-As</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-i</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eth0</span><span style="color:#24292E;"> </span><span style="color:#032F62;">port</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">80</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-w</span><span style="color:#24292E;"> </span><span style="color:#032F62;">demo2.pcap</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">curl -O https://arthas.aliyun.com/arthas-boot.jar</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6A737D;"># 登录 Pod 所在 Node 节点，抓包</span></span>
<span class="line"><span style="color:#24292E;">podName</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">xxx</span></span>
<span class="line"><span style="color:#6F42C1;">nsenter -t $(nerdctl ps </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;"> grep $</span><span style="color:#24292E;">{podName}</span><span style="color:#6F42C1;"> </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">grep -v pause </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">awk </span><span style="color:#6F42C1;">&#39;{print $1}&#39;</span><span style="color:#6F42C1;"> </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;"> xargs nerdctl inspect -f </span><span style="color:#24292E;">{{.State.Pid}</span><span style="color:#6F42C1;">}</span><span style="color:#24292E;">) -n tcpdump -i eth0 -nne -C 100 -W 30 -w /tmp/container.pcap</span></span></code></pre></div><p>参数解释</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">-nnn：</span></span>
<span class="line"><span style="color:#e1e4e8;">第一个 n 表示不将网络地址转换为名称。这意味着 tcpdump 会显示 IP 地址而不是尝试将它们解析为主机名。</span></span>
<span class="line"><span style="color:#e1e4e8;">第二个 n 也是同样的作用，但有些版本的 tcpdump 可能不支持重复使用 -n 选项。在这种情况下，第二个 n 可能会被忽略。</span></span>
<span class="line"><span style="color:#e1e4e8;">第三个 n（如果支持）通常表示不将端口号转换为服务名称，即显示端口号的数字而不是服务名称。</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">-vv：</span></span>
<span class="line"><span style="color:#e1e4e8;">第一个 v 表示详细输出。这会提供更多的信息，比如数据包的头部信息。</span></span>
<span class="line"><span style="color:#e1e4e8;">第二个 v 表示更详细的输出。这会提供比单个 -v 更详细的信息。</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">-A：表示以 ASCII 格式打印每个数据包的内容，方便阅读文本数据。</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">-s 0：</span></span>
<span class="line"><span style="color:#e1e4e8;">-s 选项后跟一个数值，表示从每个捕获的数据包中截取的字节数。0 表示不截取，即捕获每个数据包的全部内容，而不是只捕获前若干字节。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">-nnn：</span></span>
<span class="line"><span style="color:#24292e;">第一个 n 表示不将网络地址转换为名称。这意味着 tcpdump 会显示 IP 地址而不是尝试将它们解析为主机名。</span></span>
<span class="line"><span style="color:#24292e;">第二个 n 也是同样的作用，但有些版本的 tcpdump 可能不支持重复使用 -n 选项。在这种情况下，第二个 n 可能会被忽略。</span></span>
<span class="line"><span style="color:#24292e;">第三个 n（如果支持）通常表示不将端口号转换为服务名称，即显示端口号的数字而不是服务名称。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">-vv：</span></span>
<span class="line"><span style="color:#24292e;">第一个 v 表示详细输出。这会提供更多的信息，比如数据包的头部信息。</span></span>
<span class="line"><span style="color:#24292e;">第二个 v 表示更详细的输出。这会提供比单个 -v 更详细的信息。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">-A：表示以 ASCII 格式打印每个数据包的内容，方便阅读文本数据。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">-s 0：</span></span>
<span class="line"><span style="color:#24292e;">-s 选项后跟一个数值，表示从每个捕获的数据包中截取的字节数。0 表示不截取，即捕获每个数据包的全部内容，而不是只捕获前若干字节。</span></span></code></pre></div><h3 id="_2-1-6-脚本方式获取pid" tabindex="-1">2.1.6 脚本方式获取pid <a class="header-anchor" href="#_2-1-6-脚本方式获取pid" aria-label="Permalink to &quot;2.1.6 脚本方式获取pid&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">e_net</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-eu</span></span>
<span class="line"><span style="color:#E1E4E8;">  pod</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">\`</span><span style="color:#B392F0;">kubectl</span><span style="color:#9ECBFF;"> get pod \${</span><span style="color:#E1E4E8;">pod_name</span><span style="color:#9ECBFF;">} </span><span style="color:#79B8FF;">-n</span><span style="color:#9ECBFF;"> \${</span><span style="color:#E1E4E8;">namespace</span><span style="color:#9ECBFF;">} </span><span style="color:#79B8FF;">-o</span><span style="color:#9ECBFF;"> template </span><span style="color:#79B8FF;">--template=</span><span style="color:#9ECBFF;">&#39;{{range .status.containerStatuses}}{{.containerID}}{{end}}&#39; </span><span style="color:#F97583;">|</span><span style="color:#9ECBFF;"> </span><span style="color:#B392F0;">sed</span><span style="color:#9ECBFF;"> &#39;s/docker:\\/\\/\\(.*\\)$/\\1/&#39;\`</span></span>
<span class="line"><span style="color:#E1E4E8;">  pid</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">\`</span><span style="color:#B392F0;">docker</span><span style="color:#9ECBFF;"> inspect </span><span style="color:#79B8FF;">-f</span><span style="color:#9ECBFF;"> {{.State.Pid}} </span><span style="color:#E1E4E8;">$pod</span><span style="color:#9ECBFF;">\`</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;\\033[32m Entering pod netns for \${</span><span style="color:#E1E4E8;">namespace</span><span style="color:#9ECBFF;">}/\${</span><span style="color:#E1E4E8;">pod_name</span><span style="color:#9ECBFF;">} \\033[0m\\n&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  cmd</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;nsenter -n -t \${</span><span style="color:#E1E4E8;">pid</span><span style="color:#9ECBFF;">}&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;\\033[32m Execute the command: \${</span><span style="color:#E1E4E8;">cmd</span><span style="color:#9ECBFF;">} \\033[0m&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  \${cmd}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 运行函数</span></span>
<span class="line"><span style="color:#E1E4E8;">pod_name</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">$1</span></span>
<span class="line"><span style="color:#E1E4E8;">namespace</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">\${2</span><span style="color:#E1E4E8;">-</span><span style="color:#9ECBFF;">&quot;default&quot;</span><span style="color:#FFAB70;">}</span></span>
<span class="line"><span style="color:#B392F0;">e_net</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/usr/bin/env bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">e_net</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">set</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-eu</span></span>
<span class="line"><span style="color:#24292E;">  pod</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">\`</span><span style="color:#6F42C1;">kubectl</span><span style="color:#032F62;"> get pod \${</span><span style="color:#24292E;">pod_name</span><span style="color:#032F62;">} </span><span style="color:#005CC5;">-n</span><span style="color:#032F62;"> \${</span><span style="color:#24292E;">namespace</span><span style="color:#032F62;">} </span><span style="color:#005CC5;">-o</span><span style="color:#032F62;"> template </span><span style="color:#005CC5;">--template=</span><span style="color:#032F62;">&#39;{{range .status.containerStatuses}}{{.containerID}}{{end}}&#39; </span><span style="color:#D73A49;">|</span><span style="color:#032F62;"> </span><span style="color:#6F42C1;">sed</span><span style="color:#032F62;"> &#39;s/docker:\\/\\/\\(.*\\)$/\\1/&#39;\`</span></span>
<span class="line"><span style="color:#24292E;">  pid</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">\`</span><span style="color:#6F42C1;">docker</span><span style="color:#032F62;"> inspect </span><span style="color:#005CC5;">-f</span><span style="color:#032F62;"> {{.State.Pid}} </span><span style="color:#24292E;">$pod</span><span style="color:#032F62;">\`</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;\\033[32m Entering pod netns for \${</span><span style="color:#24292E;">namespace</span><span style="color:#032F62;">}/\${</span><span style="color:#24292E;">pod_name</span><span style="color:#032F62;">} \\033[0m\\n&quot;</span></span>
<span class="line"><span style="color:#24292E;">  cmd</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;nsenter -n -t \${</span><span style="color:#24292E;">pid</span><span style="color:#032F62;">}&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;\\033[32m Execute the command: \${</span><span style="color:#24292E;">cmd</span><span style="color:#032F62;">} \\033[0m&quot;</span></span>
<span class="line"><span style="color:#24292E;">  \${cmd}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 运行函数</span></span>
<span class="line"><span style="color:#24292E;">pod_name</span><span style="color:#D73A49;">=</span><span style="color:#E36209;">$1</span></span>
<span class="line"><span style="color:#24292E;">namespace</span><span style="color:#D73A49;">=</span><span style="color:#E36209;">\${2</span><span style="color:#24292E;">-</span><span style="color:#032F62;">&quot;default&quot;</span><span style="color:#E36209;">}</span></span>
<span class="line"><span style="color:#6F42C1;">e_net</span></span></code></pre></div><h1 id="_3-ksniff抓包" tabindex="-1">3. ksniff抓包 <a class="header-anchor" href="#_3-ksniff抓包" aria-label="Permalink to &quot;3. ksniff抓包&quot;">​</a></h1><p>推荐这个方式</p><h2 id="_3-1-介绍" tabindex="-1">3.1 介绍 <a class="header-anchor" href="#_3-1-介绍" aria-label="Permalink to &quot;3.1 介绍&quot;">​</a></h2><p>ksniff 是一个 kubectl 的插件，它利用 tcpdump 和 Wireshark 对 Kubernetes 集群中的任何 Pod 启动远程抓包</p><h2 id="_3-1-krew安装" tabindex="-1">3.1 krew安装 <a class="header-anchor" href="#_3-1-krew安装" aria-label="Permalink to &quot;3.1 krew安装&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">(</span></span>
<span class="line"><span style="color:#e1e4e8;">  set -x; cd&quot;$(mktemp -d)&quot; &amp;&amp;</span></span>
<span class="line"><span style="color:#e1e4e8;">  curl -fsSLO &quot;https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.tar.gz&quot; &amp;&amp;</span></span>
<span class="line"><span style="color:#e1e4e8;">  tar zxvf krew.tar.gz &amp;&amp;</span></span>
<span class="line"><span style="color:#e1e4e8;">  KREW=./krew-&quot;$(uname | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39;)_$(uname -m | sed -e &#39;s/x86_64/amd64/&#39; -e &#39;s/arm.*$/arm/&#39;)&quot; &amp;&amp;</span></span>
<span class="line"><span style="color:#e1e4e8;">  &quot;$KREW&quot; install krew</span></span>
<span class="line"><span style="color:#e1e4e8;">)</span></span>
<span class="line"><span style="color:#e1e4e8;">export PATH=&quot;\${KREW_ROOT:-$HOME/.krew}/bin:$PATH&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">(</span></span>
<span class="line"><span style="color:#24292e;">  set -x; cd&quot;$(mktemp -d)&quot; &amp;&amp;</span></span>
<span class="line"><span style="color:#24292e;">  curl -fsSLO &quot;https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.tar.gz&quot; &amp;&amp;</span></span>
<span class="line"><span style="color:#24292e;">  tar zxvf krew.tar.gz &amp;&amp;</span></span>
<span class="line"><span style="color:#24292e;">  KREW=./krew-&quot;$(uname | tr &#39;[:upper:]&#39; &#39;[:lower:]&#39;)_$(uname -m | sed -e &#39;s/x86_64/amd64/&#39; -e &#39;s/arm.*$/arm/&#39;)&quot; &amp;&amp;</span></span>
<span class="line"><span style="color:#24292e;">  &quot;$KREW&quot; install krew</span></span>
<span class="line"><span style="color:#24292e;">)</span></span>
<span class="line"><span style="color:#24292e;">export PATH=&quot;\${KREW_ROOT:-$HOME/.krew}/bin:$PATH&quot;</span></span></code></pre></div><h2 id="_3-2-sniff安装" tabindex="-1">3.2 sniff安装 <a class="header-anchor" href="#_3-2-sniff安装" aria-label="Permalink to &quot;3.2 sniff安装&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@kube-master </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;">]# kubectl krew install sniff</span></span>
<span class="line"><span style="color:#B392F0;">Updated</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">local</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">copy</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">plugin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">index.</span></span>
<span class="line"><span style="color:#B392F0;">Installing</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">plugin:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sniff</span></span>
<span class="line"><span style="color:#B392F0;">W0710</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">17</span><span style="color:#9ECBFF;">:54:14.755671</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">84252</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install.go:160]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Skipping</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">plugin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;sniff&quot;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">it</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">already</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">installed</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@kube-master </span><span style="color:#D73A49;">~</span><span style="color:#24292E;">]# kubectl krew install sniff</span></span>
<span class="line"><span style="color:#6F42C1;">Updated</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">local</span><span style="color:#24292E;"> </span><span style="color:#032F62;">copy</span><span style="color:#24292E;"> </span><span style="color:#032F62;">of</span><span style="color:#24292E;"> </span><span style="color:#032F62;">plugin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">index.</span></span>
<span class="line"><span style="color:#6F42C1;">Installing</span><span style="color:#24292E;"> </span><span style="color:#032F62;">plugin:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sniff</span></span>
<span class="line"><span style="color:#6F42C1;">W0710</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">17</span><span style="color:#032F62;">:54:14.755671</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">84252</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install.go:160]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Skipping</span><span style="color:#24292E;"> </span><span style="color:#032F62;">plugin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;sniff&quot;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">it</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">already</span><span style="color:#24292E;"> </span><span style="color:#032F62;">installed</span></span></code></pre></div><h2 id="_3-3-sniff抓包" tabindex="-1">3.3 sniff抓包 <a class="header-anchor" href="#_3-3-sniff抓包" aria-label="Permalink to &quot;3.3 sniff抓包&quot;">​</a></h2><ul><li>本地</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"># 注：需要替换 pod name 和 namespace ,这个本地会执行wireshark</span></span>
<span class="line"><span style="color:#e1e4e8;">kubectl sniff \${POD_NAME} -n \${NAMESPACE}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># 注：需要替换 pod name 和 namespace ,这个本地会执行wireshark</span></span>
<span class="line"><span style="color:#24292e;">kubectl sniff \${POD_NAME} -n \${NAMESPACE}</span></span></code></pre></div><ul><li>服务器</li></ul><p>服务器并没有安装 wireshark，你可以将报文输出到文件中，然后用本地的 wireshark 来解析报文</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sniff</span><span style="color:#E1E4E8;"> \${POD_NAME} </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> \${NAMESPACE} </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">httpbin.pcap</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sniff</span><span style="color:#24292E;"> \${POD_NAME} </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> \${NAMESPACE} </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">httpbin.pcap</span></span></code></pre></div><ul><li>案例</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tcpdump</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">at:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/root/.krew/store/sniff/v1.6.2/static-tcpdump&#39;</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">no</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">container</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">specified,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">taking</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">first</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">container</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">we</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">found</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pod.</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">selected</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">container:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;app&#39;</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sniffing</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">method:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">upload</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tcpdump</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sniffing</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pod:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;app-prod-97dfb4bf-h59vq&#39;</span><span style="color:#E1E4E8;"> [namespace: </span><span style="color:#9ECBFF;">&#39;default&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">container:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;app&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">filter:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">interface:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;any&#39;]</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">uploading</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tcpdump</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">binary</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">from:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/root/.krew/store/sniff/v1.6.2/static-tcpdump&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/tmp/static-tcpdump&#39;</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">uploading</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/root/.krew/store/sniff/v1.6.2/static-tcpdump&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;/tmp/static-tcpdump&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">container:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;app&#39;</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">executing</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">command:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;[/bin/sh -c test -f /tmp/static-tcpdump]&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">container:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;app&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pod:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;app-prod-97dfb4bf-h59vq&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">namespace:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;default&#39;</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">command:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;[/bin/sh -c test -f /tmp/static-tcpdump]&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">executing</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">successfully</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">exitCode:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;0&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stdErr</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">:&#39;&#39;</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">found:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">was</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">already</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">found</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remote</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pod</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tcpdump</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">uploaded</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">successfully</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">output</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">option</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">specified,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">storing</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">output</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">in:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;text.pcap&#39;</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sniffing</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remote</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">container</span></span>
<span class="line"><span style="color:#B392F0;">INFO[0000]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">executing</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">command:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;[/tmp/static-tcpdump -i any -U -w - ]&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">container:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;app&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pod:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;app-prod-97dfb4bf-h59vq&#39;,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">namespace:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;default&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">using</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tcpdump</span><span style="color:#24292E;"> </span><span style="color:#032F62;">path</span><span style="color:#24292E;"> </span><span style="color:#032F62;">at:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/root/.krew/store/sniff/v1.6.2/static-tcpdump&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">no</span><span style="color:#24292E;"> </span><span style="color:#032F62;">container</span><span style="color:#24292E;"> </span><span style="color:#032F62;">specified,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">taking</span><span style="color:#24292E;"> </span><span style="color:#032F62;">first</span><span style="color:#24292E;"> </span><span style="color:#032F62;">container</span><span style="color:#24292E;"> </span><span style="color:#032F62;">we</span><span style="color:#24292E;"> </span><span style="color:#032F62;">found</span><span style="color:#24292E;"> </span><span style="color:#032F62;">in</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pod.</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">selected</span><span style="color:#24292E;"> </span><span style="color:#032F62;">container:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;app&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sniffing</span><span style="color:#24292E;"> </span><span style="color:#032F62;">method:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">upload</span><span style="color:#24292E;"> </span><span style="color:#032F62;">static</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tcpdump</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sniffing</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pod:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;app-prod-97dfb4bf-h59vq&#39;</span><span style="color:#24292E;"> [namespace: </span><span style="color:#032F62;">&#39;default&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">container:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;app&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">filter:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">interface:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;any&#39;]</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">uploading</span><span style="color:#24292E;"> </span><span style="color:#032F62;">static</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tcpdump</span><span style="color:#24292E;"> </span><span style="color:#032F62;">binary</span><span style="color:#24292E;"> </span><span style="color:#032F62;">from:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/root/.krew/store/sniff/v1.6.2/static-tcpdump&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/tmp/static-tcpdump&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">uploading</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/root/.krew/store/sniff/v1.6.2/static-tcpdump&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;/tmp/static-tcpdump&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">container:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;app&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">executing</span><span style="color:#24292E;"> </span><span style="color:#032F62;">command:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;[/bin/sh -c test -f /tmp/static-tcpdump]&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">container:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;app&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pod:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;app-prod-97dfb4bf-h59vq&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">namespace:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;default&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">command:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;[/bin/sh -c test -f /tmp/static-tcpdump]&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">executing</span><span style="color:#24292E;"> </span><span style="color:#032F62;">successfully</span><span style="color:#24292E;"> </span><span style="color:#032F62;">exitCode:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;0&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stdErr</span><span style="color:#24292E;"> </span><span style="color:#032F62;">:&#39;&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">found:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">was</span><span style="color:#24292E;"> </span><span style="color:#032F62;">already</span><span style="color:#24292E;"> </span><span style="color:#032F62;">found</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remote</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pod</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tcpdump</span><span style="color:#24292E;"> </span><span style="color:#032F62;">uploaded</span><span style="color:#24292E;"> </span><span style="color:#032F62;">successfully</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">output</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file</span><span style="color:#24292E;"> </span><span style="color:#032F62;">option</span><span style="color:#24292E;"> </span><span style="color:#032F62;">specified,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">storing</span><span style="color:#24292E;"> </span><span style="color:#032F62;">output</span><span style="color:#24292E;"> </span><span style="color:#032F62;">in:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;text.pcap&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sniffing</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remote</span><span style="color:#24292E;"> </span><span style="color:#032F62;">container</span></span>
<span class="line"><span style="color:#6F42C1;">INFO[0000]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">executing</span><span style="color:#24292E;"> </span><span style="color:#032F62;">command:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;[/tmp/static-tcpdump -i any -U -w - ]&#39;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">container:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;app&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pod:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;app-prod-97dfb4bf-h59vq&#39;,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">namespace:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;default&#39;</span></span></code></pre></div><p>看原理是通过本地的/tmp/static-tcpdump 文件弄到pod中去抓包</p>`,54),e=[o];function t(c,r,y,E,i,F){return a(),n("div",null,e)}const C=s(l,[["render",t]]);export{u as __pageData,C as default};
