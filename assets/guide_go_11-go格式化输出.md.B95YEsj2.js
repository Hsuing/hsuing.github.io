import{_ as a,o as l,c as p,R as n,k as s}from"./chunks/framework.zUbWieqp.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/go/11-go格式化输出.md","filePath":"guide/go/11-go格式化输出.md","lastUpdated":1725267989000}'),t={name:"guide/go/11-go格式化输出.md"},o=n(`<h2 id="_1-golang格式化输出" tabindex="-1">1.golang格式化输出 <a class="header-anchor" href="#_1-golang格式化输出" aria-label="Permalink to &quot;1.golang格式化输出&quot;">​</a></h2><p>实例使用的结构体</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Website</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    Name </span><span style="color:#F97583;">string</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// %v var</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//定义结构体变量</span></span>
<span class="line"><span style="color:#E1E4E8;">    site </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> Website{Name:</span><span style="color:#9ECBFF;">&quot;360&quot;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">    fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;site: </span><span style="color:#79B8FF;">%#v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, site)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Website</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">struct</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    Name </span><span style="color:#D73A49;">string</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// %v var</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//定义结构体变量</span></span>
<span class="line"><span style="color:#24292E;">    site </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> Website{Name:</span><span style="color:#032F62;">&quot;360&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">    fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;site: </span><span style="color:#005CC5;">%#v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, site)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_1-1占位符" tabindex="-1">1.1占位符 <a class="header-anchor" href="#_1-1占位符" aria-label="Permalink to &quot;1.1占位符&quot;">​</a></h3><h4 id="普通占位符" tabindex="-1">普通占位符 <a class="header-anchor" href="#普通占位符" aria-label="Permalink to &quot;普通占位符&quot;">​</a></h4>`,5),e=s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"占位符"),s("th",null,"说明"),s("th",null,"举例")])]),s("tbody",null,[s("tr",null,[s("td",null,"%v"),s("td",null,"响应变量的默认格式，v = var"),s("td",null,'Printf("%v",site),')]),s("tr",null,[s("td",null,"%+v"),s("td",{"Name:360":""}),s("td",null,'Printf("%+v", site)')]),s("tr",null,[s("td",null,"%#v"),s("td",{"Name:360":""},"相应值go的语法表示,main.Website"),s("td",null,'Printf("%#v",site)')]),s("tr",null,[s("td",null,"%T"),s("td",null,"相应值类型go的语法表示，main.Website"),s("td",null,'Printf("%T",site)')]),s("tr",null,[s("td",null,"%%"),s("td",null,"字面上的百分号，并非值的占位符"),s("td",null,'Printf("%%")')])])],-1),c=n(`<h4 id="布尔占位符" tabindex="-1">布尔占位符 <a class="header-anchor" href="#布尔占位符" aria-label="Permalink to &quot;布尔占位符&quot;">​</a></h4><table><thead><tr><th>占位符</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>%t</td><td>单词 true或者false</td><td>Printf(&quot;%t&quot;, true)</td></tr></tbody></table><h4 id="整数占位符" tabindex="-1">整数占位符 <a class="header-anchor" href="#整数占位符" aria-label="Permalink to &quot;整数占位符&quot;">​</a></h4><table><thead><tr><th>占位符</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>%b</td><td>二进制表示</td><td>Printf(&quot;%b&quot;, 5)</td></tr><tr><td>%c</td><td>相应Unicode码点所表示的字符</td><td>Printf(&quot;%c&quot;, 0x4E2D)</td></tr><tr><td>%d</td><td>十进制表示</td><td>Printf(&quot;%d&quot;, 0x12)</td></tr><tr><td>%o</td><td>八进制表示</td><td>Printf(&quot;%d&quot;, 10)</td></tr><tr><td>%q</td><td>单引号围绕的字符字面值，由Go语法安全转义</td><td>Printf(&quot;%q&quot;, 0x12)</td></tr><tr><td>%x</td><td>十六进制表示，字母形式为小写a-f</td><td>Printf(&quot;%x&quot;, 13)</td></tr><tr><td>%X</td><td>十六进制表示，字母形式为大写A-F</td><td>Printf(&quot;%X&quot;, 13)</td></tr><tr><td>%U</td><td>Unicode格式，U+1234,等同于</td><td></td></tr></tbody></table><h4 id="浮点数和复数的组成部分" tabindex="-1">浮点数和复数的组成部分 <a class="header-anchor" href="#浮点数和复数的组成部分" aria-label="Permalink to &quot;浮点数和复数的组成部分&quot;">​</a></h4><table><thead><tr><th>占位符</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>%b</td><td>无小数部分的，指数为二的幂的科学计数法，与strconv.FormatFloat的<code>b</code>转换格式一致</td><td></td></tr><tr><td>%e</td><td>科学计数法</td><td></td></tr><tr><td>%E</td><td>科学计数法</td><td>Printf(&quot;%E&quot;, 10.2)</td></tr><tr><td>%f</td><td>有小数点而无指数</td><td>Printf(&quot;%f&quot;, 10.2)</td></tr><tr><td>%g</td><td>根据情况选择%e 或%f以产生更紧(无末尾的0)输出</td><td>Printf(&quot;%g&quot;, 10.20)</td></tr><tr><td>%G</td><td>根据情况选择%E或%F以产生更紧(无末尾的0)输出</td><td>Printf(&quot;%G&quot;, 10.20+2i)</td></tr></tbody></table><h4 id="字符串与字节切片" tabindex="-1">字符串与字节切片 <a class="header-anchor" href="#字符串与字节切片" aria-label="Permalink to &quot;字符串与字节切片&quot;">​</a></h4><table><thead><tr><th>占位符</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>%s</td><td>输出字符串表示(string类型或[]byte)</td><td>Printf(&quot;%s&quot;,[]byte(&quot;多&quot;))</td></tr><tr><td>%q</td><td>双引号围绕的字符串，由Go语法安全转义</td><td>Printf(&quot;%q&quot;,&quot;多多&quot;)</td></tr><tr><td>%x</td><td>十六进制，小写字母，每字节两个字符</td><td>Printf(&quot;%x&quot;,&quot;golang&quot;)</td></tr><tr><td>%X</td><td>十六进制，大写字母，每字节两个字符</td><td>Printf(&quot;%X&quot;,&quot;golang&quot;)</td></tr></tbody></table><h4 id="指针" tabindex="-1">指针 <a class="header-anchor" href="#指针" aria-label="Permalink to &quot;指针&quot;">​</a></h4><table><thead><tr><th>占位符</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>%p</td><td>十六进制表示</td><td>Printf(&quot;%p&quot;,&amp;site)</td></tr></tbody></table><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">//定义了两个变量，想用键盘来录入这个两个变量</span></span>
<span class="line"><span style="color:#E1E4E8;">fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">()</span><span style="color:#6A737D;">//打印并换行</span></span>
<span class="line"><span style="color:#E1E4E8;">fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">()</span><span style="color:#6A737D;">//格式化输出</span></span>
<span class="line"><span style="color:#E1E4E8;">fmt.</span><span style="color:#79B8FF;">Print</span><span style="color:#E1E4E8;">()</span><span style="color:#6A737D;">//打印输出</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">fmt.</span><span style="color:#79B8FF;">Scanln</span><span style="color:#E1E4E8;">() </span><span style="color:#6A737D;">//接收输入Scan</span></span>
<span class="line"><span style="color:#E1E4E8;">fmt.</span><span style="color:#79B8FF;">Scanf</span><span style="color:#E1E4E8;">()  </span><span style="color:#6A737D;">//接收输入格式化输入作业</span></span>
<span class="line"><span style="color:#E1E4E8;">fmt.</span><span style="color:#79B8FF;">Scan</span><span style="color:#E1E4E8;">()   </span><span style="color:#6A737D;">//接收输入作业</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">//定义了两个变量，想用键盘来录入这个两个变量</span></span>
<span class="line"><span style="color:#24292E;">fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">()</span><span style="color:#6A737D;">//打印并换行</span></span>
<span class="line"><span style="color:#24292E;">fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">()</span><span style="color:#6A737D;">//格式化输出</span></span>
<span class="line"><span style="color:#24292E;">fmt.</span><span style="color:#005CC5;">Print</span><span style="color:#24292E;">()</span><span style="color:#6A737D;">//打印输出</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">fmt.</span><span style="color:#005CC5;">Scanln</span><span style="color:#24292E;">() </span><span style="color:#6A737D;">//接收输入Scan</span></span>
<span class="line"><span style="color:#24292E;">fmt.</span><span style="color:#005CC5;">Scanf</span><span style="color:#24292E;">()  </span><span style="color:#6A737D;">//接收输入格式化输入作业</span></span>
<span class="line"><span style="color:#24292E;">fmt.</span><span style="color:#005CC5;">Scan</span><span style="color:#24292E;">()   </span><span style="color:#6A737D;">//接收输入作业</span></span></code></pre></div><h3 id="_1-2-常用" tabindex="-1">1.2 常用 <a class="header-anchor" href="#_1-2-常用" aria-label="Permalink to &quot;1.2 常用&quot;">​</a></h3><table><thead><tr><th><code>%c</code></th><th>字符型，可以把输入的数字按照 ASCII 码相应转换为对应字符</th></tr></thead><tbody><tr><td><code>%d</code></td><td>一个十进制数值（基数为 10）</td></tr><tr><td><code>%T</code></td><td>使用 Go 语法输出的值的类型</td></tr><tr><td><code>%v</code></td><td>使用默认格式输出的内置或自定义类型的值，或者是使用其类型的 String()方式输出的自定义值，如果该方法存在的话</td></tr></tbody></table><h4 id="输出" tabindex="-1">输出 <a class="header-anchor" href="#输出" aria-label="Permalink to &quot;输出&quot;">​</a></h4><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	a </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#E1E4E8;">	b </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hello&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	c </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3.14</span></span>
<span class="line"><span style="color:#E1E4E8;">	d </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// %T 操作变量所属类型</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;a: </span><span style="color:#79B8FF;">%T\\n</span><span style="color:#9ECBFF;">,b: </span><span style="color:#79B8FF;">%T\\n</span><span style="color:#9ECBFF;">,c: </span><span style="color:#79B8FF;">%T\\n</span><span style="color:#9ECBFF;">,d: </span><span style="color:#79B8FF;">%T\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, a, b, c, d)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// %d 对应整形格式输出</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// %s 对应字符串格式输出</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// %c 对应字符格式输出</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// %f 对应浮点格式输出</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;a: </span><span style="color:#79B8FF;">%d\\n</span><span style="color:#9ECBFF;">,b: </span><span style="color:#79B8FF;">%s\\n</span><span style="color:#9ECBFF;">,c: </span><span style="color:#79B8FF;">%f\\n</span><span style="color:#9ECBFF;">,d: </span><span style="color:#79B8FF;">%t\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, a, b, c, d)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;#########################&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// %v 自动匹配格式</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;a: </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">,b: </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">,c: </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">,d: </span><span style="color:#79B8FF;">%v\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, a, b, c, d)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	a </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#24292E;">	b </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello&quot;</span></span>
<span class="line"><span style="color:#24292E;">	c </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3.14</span></span>
<span class="line"><span style="color:#24292E;">	d </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// %T 操作变量所属类型</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;a: </span><span style="color:#005CC5;">%T\\n</span><span style="color:#032F62;">,b: </span><span style="color:#005CC5;">%T\\n</span><span style="color:#032F62;">,c: </span><span style="color:#005CC5;">%T\\n</span><span style="color:#032F62;">,d: </span><span style="color:#005CC5;">%T\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, a, b, c, d)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// %d 对应整形格式输出</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// %s 对应字符串格式输出</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// %c 对应字符格式输出</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// %f 对应浮点格式输出</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;a: </span><span style="color:#005CC5;">%d\\n</span><span style="color:#032F62;">,b: </span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">,c: </span><span style="color:#005CC5;">%f\\n</span><span style="color:#032F62;">,d: </span><span style="color:#005CC5;">%t\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, a, b, c, d)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;#########################&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// %v 自动匹配格式</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;a: </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">,b: </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">,c: </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">,d: </span><span style="color:#005CC5;">%v\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, a, b, c, d)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="输入" tabindex="-1">输入 <a class="header-anchor" href="#输入" aria-label="Permalink to &quot;输入&quot;">​</a></h4><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Scan2</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">string</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> age </span><span style="color:#F97583;">int</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;请输入姓名和年龄:&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// fmt.Scanln(&amp;name, &amp;age)</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Scan</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">name, </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">age)</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;name: </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">, age: </span><span style="color:#79B8FF;">%d\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, name, age)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Scan2</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">string</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> age </span><span style="color:#D73A49;">int</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;请输入姓名和年龄:&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// fmt.Scanln(&amp;name, &amp;age)</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Scan</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">name, </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">age)</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;name: </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">, age: </span><span style="color:#005CC5;">%d\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, name, age)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h4 id="类型别名" tabindex="-1">类型别名 <a class="header-anchor" href="#类型别名" aria-label="Permalink to &quot;类型别名&quot;">​</a></h4><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Types</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 类型别名 关键字是type</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 给 int定义一个类型别名myint</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">myint</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> a myint </span><span style="color:#6A737D;">// 等价于 var a int</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;a: </span><span style="color:#79B8FF;">%v</span><span style="color:#9ECBFF;">, type: </span><span style="color:#79B8FF;">%T\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, a, a)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Types</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 类型别名 关键字是type</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 给 int定义一个类型别名myint</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">myint</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> a myint </span><span style="color:#6A737D;">// 等价于 var a int</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;a: </span><span style="color:#005CC5;">%v</span><span style="color:#032F62;">, type: </span><span style="color:#005CC5;">%T\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, a, a)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><a href="https://www.bilibili.com/video/BV1zR4y1t7Wj/?p=16&amp;spm_id_from=pageDriver&amp;vd_source=271cfb4bb43eae8c9b0543f4ae14ec31" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1zR4y1t7Wj/?p=16&amp;spm_id_from=pageDriver&amp;vd_source=271cfb4bb43eae8c9b0543f4ae14ec31</a></p>`,20),r=[o,e,c];function y(E,i,d,F,u,h){return l(),p("div",null,r)}const m=a(t,[["render",y]]);export{f as __pageData,m as default};
