import{_ as e,o as t,c as r,R as a}from"./chunks/framework.zUbWieqp.js";const g=JSON.parse('{"title":"1. OpenTelemetry","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/Monitor/OpenTelemetry/index.md","filePath":"guide/Linux/Monitor/OpenTelemetry/index.md","lastUpdated":1745483579000}'),n={name:"guide/Linux/Monitor/OpenTelemetry/index.md"},o=a('<h1 id="_1-opentelemetry" tabindex="-1">1. OpenTelemetry <a class="header-anchor" href="#_1-opentelemetry" aria-label="Permalink to &quot;1. OpenTelemetry&quot;">​</a></h1><h2 id="_1-1-介绍" tabindex="-1">1.1 介绍 <a class="header-anchor" href="#_1-1-介绍" aria-label="Permalink to &quot;1.1 介绍&quot;">​</a></h2><p>OpenTelemetry，也被称为 OTel，是一个供应商中立的开放源码 观测性框架 用于仪器化、生成、收集和导出诸如遥测数据等信息 <a href="https://opentelemetry.io/docs/concepts/signals/traces/" target="_blank" rel="noreferrer">痕迹</a>, <a href="https://opentelemetry.io/docs/concepts/signals/metrics/" target="_blank" rel="noreferrer">指标</a>, 和 <a href="https://opentelemetry.io/docs/concepts/signals/logs/" target="_blank" rel="noreferrer">日志</a>。</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/20250423165157506.png" alt="img"></p><p>OpenTelemetry 是一个开源的可观测性框架和标准。</p><p>它的主要目标是为云原生应用程序提供统一的方式来生成、收集、处理和导出遥测数据（如跟踪、指标和日志）。</p><h2 id="_1-2-特点" tabindex="-1">1.2 特点 <a class="header-anchor" href="#_1-2-特点" aria-label="Permalink to &quot;1.2 特点&quot;">​</a></h2><p>1.统一标准：提供了一种标准化的方法来处理可观测性数据，使得不同的服务和技术能够以一致的方式生成和共享数据。</p><p>2.多语言支持：支持多种编程语言，开发人员可以在他们所使用的语言环境中轻松集成 OpenTelemetry 库。</p><p>3.丰富的遥测类型：涵盖了跟踪（Tracing）以了解请求在系统中的流程，指标（Metrics）用于衡量系统的性能和状态，以及日志（Logs）用于记录事件和消息。</p><p>4.灵活的配置和扩展：可以根据具体的需求进行配置和扩展，以适应各种复杂的架构和业务场景。</p><p>5.与多种后端兼容：能够将收集到的数据导出到各种流行的可观测性后端工具，如 Prometheus、Jaeger 等</p>',12),s=[o];function i(p,l,c,_,d,m){return t(),r("div",null,s)}const u=e(n,[["render",i]]);export{g as __pageData,u as default};
