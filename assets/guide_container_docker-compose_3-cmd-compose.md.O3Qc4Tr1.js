import{_ as t,o as e,c as o,R as s}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"1. compse创建服务","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/docker-compose/3-cmd-compose.md","filePath":"guide/container/docker-compose/3-cmd-compose.md","lastUpdated":1730715813000}'),a={name:"guide/container/docker-compose/3-cmd-compose.md"},n=s(`<p><a href="https://docs.docker.com/reference/cli/docker/compose/" target="_blank" rel="noreferrer">官当</a></p><p><a href="https://github.com/docker/compose/blob/main/docs/reference/compose.md" target="_blank" rel="noreferrer">gitbub</a></p><h1 id="_1-compse创建服务" tabindex="-1">1. compse创建服务 <a class="header-anchor" href="#_1-compse创建服务" aria-label="Permalink to &quot;1. compse创建服务&quot;">​</a></h1><h2 id="_1-1-create" tabindex="-1">1.1 create <a class="header-anchor" href="#_1-1-create" aria-label="Permalink to &quot;1.1 create&quot;">​</a></h2><p>描述：只是创建一个服务，并不会启动容器</p><p>语法：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">docker compose --help</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">docker compose --help</span></span></code></pre></div><table><thead><tr><th style="text-align:left;">Description</th><th>Creates containers for a service</th></tr></thead><tbody><tr><td style="text-align:left;">Usage</td><td><code>docker compose create [OPTIONS] [SERVICE...]</code></td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">compose</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--help</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">compose</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--help</span></span></code></pre></div><table><thead><tr><th>Option</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>--build</code></td><td></td><td>Build images before starting containers</td></tr><tr><td><code>--force-recreate</code></td><td></td><td>Recreate containers even if their configuration and image haven&#39;t changed</td></tr><tr><td><code>--no-build</code></td><td></td><td>Don&#39;t build an image, even if it&#39;s policy</td></tr><tr><td><code>--no-recreate</code></td><td></td><td>If containers already exist, don&#39;t recreate them. Incompatible with --force-recreate.</td></tr><tr><td><code>--pull</code></td><td><code>policy</code></td><td>Pull image before running (&quot;always&quot;|&quot;missing&quot;|&quot;never&quot;|&quot;build&quot;)</td></tr><tr><td><code>--quiet-pull</code></td><td></td><td>Pull without printing progress information</td></tr><tr><td><code>--remove-orphans</code></td><td></td><td>Remove containers for services not defined in the Compose file</td></tr><tr><td><code>--scale</code></td><td></td><td>Scale SERVICE to NUM instances. Overrides the <code>scale</code> setting in the Compose file if present.</td></tr></tbody></table><h2 id="_1-2-run" tabindex="-1">1.2 run <a class="header-anchor" href="#_1-2-run" aria-label="Permalink to &quot;1.2 run&quot;">​</a></h2><p>描述：运行一次性命令</p><table><thead><tr><th style="text-align:left;">Description</th><th>Run a one-off command on a service</th></tr></thead><tbody><tr><td style="text-align:left;">Usage</td><td><code>docker compose run [OPTIONS] SERVICE [COMMAND] [ARGS...]</code></td></tr></tbody></table><table><thead><tr><th>Option</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>--build</code></td><td></td><td>Build image before starting container</td></tr><tr><td><code>--cap-add</code></td><td></td><td>Add Linux capabilities</td></tr><tr><td><code>--cap-drop</code></td><td></td><td>Drop Linux capabilities</td></tr><tr><td><code>-d, --detach</code></td><td></td><td>Run container in background and print container ID</td></tr><tr><td><code>--entrypoint</code></td><td></td><td>Override the entrypoint of the image</td></tr><tr><td><code>-e, --env</code></td><td></td><td>Set environment variables</td></tr><tr><td><code>-i, --interactive</code></td><td><code>true</code></td><td>Keep STDIN open even if not attached</td></tr><tr><td><code>-l, --label</code></td><td></td><td>Add or override a label</td></tr><tr><td><code>--name</code></td><td></td><td>Assign a name to the container</td></tr><tr><td><code>-T, --no-TTY</code></td><td><code>true</code></td><td>Disable pseudo-TTY allocation (default: auto-detected)</td></tr><tr><td><code>--no-deps</code></td><td></td><td>Don&#39;t start linked services</td></tr><tr><td><code>-p, --publish</code></td><td></td><td>Publish a container&#39;s port(s) to the host</td></tr><tr><td><code>--quiet-pull</code></td><td></td><td>Pull without printing progress information</td></tr><tr><td><code>--remove-orphans</code></td><td></td><td>Remove containers for services not defined in the Compose file</td></tr><tr><td><code>--rm</code></td><td></td><td>Automatically remove the container when it exits</td></tr><tr><td><code>-P, --service-ports</code></td><td></td><td>Run command with all service&#39;s ports enabled and mapped to the host</td></tr><tr><td><code>--use-aliases</code></td><td></td><td>Use the service&#39;s network useAliases in the network(s) the container connects to</td></tr><tr><td><code>-u, --user</code></td><td></td><td>Run as specified username or uid</td></tr><tr><td><code>-v, --volume</code></td><td></td><td>Bind mount a volume</td></tr><tr><td><code>-w, --workdir</code></td><td></td><td>Working directory inside the container</td></tr></tbody></table><p>比如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">compose</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">web</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">bash</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#F97583;">&gt;</span><span style="color:#79B8FF;">执行你所运行的命令</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">compose</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">web</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">bash</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#D73A49;">&gt;</span><span style="color:#005CC5;">执行你所运行的命令</span></span></code></pre></div><h2 id="_1-3-up" tabindex="-1">1.3 up <a class="header-anchor" href="#_1-3-up" aria-label="Permalink to &quot;1.3 up&quot;">​</a></h2><p>描述：这个会创建并启动服务。这个对已经存在的服务会重新停止并创建。</p><table><thead><tr><th style="text-align:left;">Description</th><th>Create and start containers</th></tr></thead><tbody><tr><td style="text-align:left;">Usage</td><td><code>docker compose up [OPTIONS] [SERVICE...]</code></td></tr></tbody></table><table><thead><tr><th>Option</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>--abort-on-container-exit</code></td><td></td><td>Stops all containers if any container was stopped. Incompatible with -d</td></tr><tr><td><code>--abort-on-container-failure</code></td><td></td><td>Stops all containers if any container exited with failure. Incompatible with -d</td></tr><tr><td><code>--always-recreate-deps</code></td><td></td><td>Recreate dependent containers. Incompatible with --no-recreate.</td></tr><tr><td><code>--attach</code></td><td></td><td>Restrict attaching to the specified services. Incompatible with --attach-dependencies.</td></tr><tr><td><code>--attach-dependencies</code></td><td></td><td>Automatically attach to log output of dependent services</td></tr><tr><td><code>--build</code></td><td></td><td>Build images before starting containers</td></tr><tr><td><code>-d, --detach</code></td><td></td><td>Detached mode: Run containers in the background</td></tr><tr><td><code>--exit-code-from</code></td><td></td><td>Return the exit code of the selected service container. Implies --abort-on-container-exit</td></tr><tr><td><code>--force-recreate</code></td><td></td><td>Recreate containers even if their configuration and image haven&#39;t changed</td></tr><tr><td><code>--menu</code></td><td></td><td>Enable interactive shortcuts when running attached. Incompatible with --detach. Can also be enable/disable by setting COMPOSE_MENU environment var.</td></tr><tr><td><code>--no-attach</code></td><td></td><td>Do not attach (stream logs) to the specified services</td></tr><tr><td><code>--no-build</code></td><td></td><td>Don&#39;t build an image, even if it&#39;s policy</td></tr><tr><td><code>--no-color</code></td><td></td><td>Produce monochrome output</td></tr><tr><td><code>--no-deps</code></td><td></td><td>Don&#39;t start linked services</td></tr><tr><td><code>--no-log-prefix</code></td><td></td><td>Don&#39;t print prefix in logs</td></tr><tr><td><code>--no-recreate</code></td><td></td><td>If containers already exist, don&#39;t recreate them. Incompatible with --force-recreate.</td></tr><tr><td><code>--no-start</code></td><td></td><td>Don&#39;t start the services after creating them</td></tr><tr><td><code>--pull</code></td><td><code>policy</code></td><td>Pull image before running (&quot;always&quot;|&quot;missing&quot;|&quot;never&quot;)</td></tr><tr><td><code>--quiet-pull</code></td><td></td><td>Pull without printing progress information</td></tr><tr><td><code>--remove-orphans</code></td><td></td><td>Remove containers for services not defined in the Compose file</td></tr><tr><td><code>-V, --renew-anon-volumes</code></td><td></td><td>Recreate anonymous volumes instead of retrieving data from the previous containers</td></tr><tr><td><code>--scale</code></td><td></td><td>Scale SERVICE to NUM instances. Overrides the <code>scale</code> setting in the Compose file if present.</td></tr><tr><td><code>-t, --timeout</code></td><td></td><td>Use this timeout in seconds for container shutdown when attached or when containers are already running</td></tr><tr><td><code>--timestamps</code></td><td></td><td>Show timestamps</td></tr><tr><td><code>--wait</code></td><td></td><td>Wait for services to be running|healthy. Implies detached mode.</td></tr><tr><td><code>--wait-timeout</code></td><td></td><td>Maximum duration to wait for the project to be running|healthy</td></tr><tr><td><code>-w, --watch</code></td><td></td><td>Watch source code and rebuild/refresh containers when files are updated.</td></tr></tbody></table><h1 id="_2-compose启动服务" tabindex="-1">2. compose启动服务 <a class="header-anchor" href="#_2-compose启动服务" aria-label="Permalink to &quot;2. compose启动服务&quot;">​</a></h1><h2 id="_2-1-start" tabindex="-1">2.1 start <a class="header-anchor" href="#_2-1-start" aria-label="Permalink to &quot;2.1 start&quot;">​</a></h2><p>描述：这个是启动已经存在的服务</p><table><thead><tr><th style="text-align:left;">Description</th><th>Start services</th></tr></thead><tbody><tr><td style="text-align:left;">Usage</td><td><code>docker compose start [SERVICE...]</code></td></tr></tbody></table><h1 id="_3-compose关闭服务" tabindex="-1">3. compose关闭服务 <a class="header-anchor" href="#_3-compose关闭服务" aria-label="Permalink to &quot;3. compose关闭服务&quot;">​</a></h1><h2 id="_3-1-stop" tabindex="-1">3.1 stop <a class="header-anchor" href="#_3-1-stop" aria-label="Permalink to &quot;3.1 stop&quot;">​</a></h2><p>描述：停止运行容器并不是删除。</p><table><thead><tr><th style="text-align:left;">Description</th><th>Stop services</th></tr></thead><tbody><tr><td style="text-align:left;">Usage</td><td><code>docker compose stop [OPTIONS] [SERVICE...]</code></td></tr></tbody></table><table><thead><tr><th>Option</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>-t, --timeout</code></td><td></td><td>Specify a shutdown timeout in seconds</td></tr></tbody></table><h2 id="_3-2-kill" tabindex="-1">3.2 kill <a class="header-anchor" href="#_3-2-kill" aria-label="Permalink to &quot;3.2 kill&quot;">​</a></h2><p>描述：强制停止服务</p><table><thead><tr><th style="text-align:left;">Description</th><th>Force stop service containers</th></tr></thead><tbody><tr><td style="text-align:left;">Usage</td><td><code>docker compose kill [OPTIONS] [SERVICE...]</code>、</td></tr></tbody></table><table><thead><tr><th>Option</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>--remove-orphans</code></td><td></td><td>Remove containers for services not defined in the Compose file</td></tr><tr><td><code>-s, --signal</code></td><td><code>SIGKILL</code></td><td>SIGNAL to send to the container</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">compose</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kill</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">SIGINT</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">compose</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kill</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-s</span><span style="color:#24292E;"> </span><span style="color:#032F62;">SIGINT</span></span></code></pre></div><h1 id="_4-compose删除服务" tabindex="-1">4. compose删除服务 <a class="header-anchor" href="#_4-compose删除服务" aria-label="Permalink to &quot;4. compose删除服务&quot;">​</a></h1><h2 id="_4-1-down" tabindex="-1">4.1 down <a class="header-anchor" href="#_4-1-down" aria-label="Permalink to &quot;4.1 down&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Description</th><th>Stop and remove containers, networks</th></tr></thead><tbody><tr><td style="text-align:left;">Usage</td><td><code>docker compose down [OPTIONS] [SERVICES]</code></td></tr></tbody></table><table><thead><tr><th>Option</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>--remove-orphans</code></td><td></td><td>Remove containers for services not defined in the Compose file</td></tr><tr><td><code>--rmi</code></td><td></td><td>Remove images used by services. &quot;local&quot; remove only images that don&#39;t have a custom tag (&quot;local&quot;|&quot;all&quot;)</td></tr><tr><td><code>-t, --timeout</code></td><td></td><td>Specify a shutdown timeout in seconds</td></tr><tr><td><code>-v, --volumes</code></td><td></td><td>Remove named volumes declared in the &quot;volumes&quot; section of the Compose file and anonymous volumes attached to containers</td></tr></tbody></table><h2 id="_4-2-rm" tabindex="-1">4.2 rm <a class="header-anchor" href="#_4-2-rm" aria-label="Permalink to &quot;4.2 rm&quot;">​</a></h2><p>描述：删除已经停止的服务</p><table><thead><tr><th style="text-align:left;">Description</th><th>Removes stopped service containers</th></tr></thead><tbody><tr><td style="text-align:left;">Usage</td><td><code>docker compose rm [OPTIONS] [SERVICE...]</code></td></tr></tbody></table><table><thead><tr><th>Option</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>-f, --force</code></td><td></td><td>Don&#39;t ask to confirm removal</td></tr><tr><td><code>-s, --stop</code></td><td></td><td>Stop the containers, if required, before removing</td></tr><tr><td><code>-v, --volumes</code></td><td></td><td>Remove any anonymous volumes attached to containers</td></tr></tbody></table><h1 id="_5-compose查看" tabindex="-1">5. compose查看 <a class="header-anchor" href="#_5-compose查看" aria-label="Permalink to &quot;5. compose查看&quot;">​</a></h1><h2 id="_5-1-ps" tabindex="-1">5.1 ps <a class="header-anchor" href="#_5-1-ps" aria-label="Permalink to &quot;5.1 ps&quot;">​</a></h2><p>描述：列出容器</p><table><thead><tr><th style="text-align:left;">Description</th><th>List containers</th></tr></thead><tbody><tr><td style="text-align:left;">Usage</td><td><code>docker compose ps [OPTIONS] [SERVICE...]</code></td></tr></tbody></table><table><thead><tr><th>Option</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>-a, --all</code></td><td></td><td>Show all stopped containers (including those created by the run command)</td></tr><tr><td><a href="https://docs.docker.com/reference/cli/docker/compose/ps/#filter" target="_blank" rel="noreferrer"><code>--filter</code></a></td><td></td><td>Filter services by a property (supported filters: status)</td></tr><tr><td><a href="https://docs.docker.com/reference/cli/docker/compose/ps/#format" target="_blank" rel="noreferrer"><code>--format</code></a></td><td><code>table</code></td><td>Format output using a custom template: &#39;table&#39;: Print output in table format with column headers (default) &#39;table TEMPLATE&#39;: Print output in table format using the given Go template &#39;json&#39;: Print in JSON format &#39;TEMPLATE&#39;: Print output using the given Go template. Refer to <a href="https://docs.docker.com/go/formatting/" target="_blank" rel="noreferrer">https://docs.docker.com/go/formatting/</a> for more information about formatting output with templates</td></tr><tr><td><code>--no-trunc</code></td><td></td><td>Don&#39;t truncate output</td></tr><tr><td><code>--orphans</code></td><td><code>true</code></td><td>Include orphaned services (not declared by project)</td></tr><tr><td><code>-q, --quiet</code></td><td></td><td>Only display IDs</td></tr><tr><td><code>--services</code></td><td></td><td>Display services</td></tr><tr><td><a href="https://docs.docker.com/reference/cli/docker/compose/ps/#status" target="_blank" rel="noreferrer"><code>--status</code></a></td><td></td><td>Filter services by status. Values: [paused | restarting | removing | running | dead | created | exited]</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">compose</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ps</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--format</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">json</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">jq</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;ID&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1553b0236cf4d2715845f053a4ee97042c4f9a2ef655731ee34f1f7940eaa41a&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;example-bar-1&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Command&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;/docker-entrypoint.sh nginx -g &#39;daemon off;&#39;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Project&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;example&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Service&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;bar&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;State&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;exited&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Health&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;ExitCode&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Publishers&quot;</span><span style="color:#E1E4E8;">: null</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;ID&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;f02a4efaabb67416e1ff127d51c4b5578634a0ad5743bd65225ff7d1909a3fa0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Name&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;example-foo-1&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Command&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;/docker-entrypoint.sh nginx -g &#39;daemon off;&#39;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Project&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;example&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Service&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;foo&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;State&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;running&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Health&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;ExitCode&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;Publishers&quot;</span><span style="color:#E1E4E8;">: [</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;URL&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;0.0.0.0&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;TargetPort&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;PublishedPort&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8080</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;Protocol&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;tcp&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    ]</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">compose</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ps</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--format</span><span style="color:#24292E;"> </span><span style="color:#032F62;">json</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">jq</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span>
<span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;ID&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1553b0236cf4d2715845f053a4ee97042c4f9a2ef655731ee34f1f7940eaa41a&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;example-bar-1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Command&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/docker-entrypoint.sh nginx -g &#39;daemon off;&#39;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Project&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;example&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Service&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;bar&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;State&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;exited&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Health&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;ExitCode&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Publishers&quot;</span><span style="color:#24292E;">: null</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;ID&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;f02a4efaabb67416e1ff127d51c4b5578634a0ad5743bd65225ff7d1909a3fa0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Name&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;example-foo-1&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Command&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;/docker-entrypoint.sh nginx -g &#39;daemon off;&#39;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Project&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;example&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Service&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;foo&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;State&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;running&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Health&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;ExitCode&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;Publishers&quot;</span><span style="color:#24292E;">: [</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;URL&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;0.0.0.0&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;TargetPort&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">80</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;PublishedPort&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8080</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;Protocol&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;tcp&quot;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    ]</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">]</span></span></code></pre></div><h2 id="_5-2-ls" tabindex="-1">5.2 ls <a class="header-anchor" href="#_5-2-ls" aria-label="Permalink to &quot;5.2 ls&quot;">​</a></h2><p>描述：列出正在运行的项目</p><table><thead><tr><th style="text-align:left;">Description</th><th>List running compose projects</th></tr></thead><tbody><tr><td style="text-align:left;">Usage</td><td><code>docker compose ls [OPTIONS]</code></td></tr></tbody></table><table><thead><tr><th>Option</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>-a, --all</code></td><td></td><td>Show all stopped Compose projects</td></tr><tr><td><code>--filter</code></td><td></td><td>Filter output based on conditions provided</td></tr><tr><td><code>--format</code></td><td><code>table</code></td><td>Format the output. Values: [table | json]</td></tr><tr><td><code>-q, --quiet</code></td><td></td><td>Only display IDs</td></tr></tbody></table><h2 id="_5-3-logs" tabindex="-1">5.3 logs <a class="header-anchor" href="#_5-3-logs" aria-label="Permalink to &quot;5.3 logs&quot;">​</a></h2><p>描述：查看服务日志</p><table><thead><tr><th style="text-align:left;">Description</th><th>View output from containers</th></tr></thead><tbody><tr><td style="text-align:left;">Usage</td><td><code>docker compose logs [OPTIONS] [SERVICE...]</code></td></tr></tbody></table><table><thead><tr><th>Option</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>-f, --follow</code></td><td></td><td>Follow log output</td></tr><tr><td><code>--index</code></td><td></td><td>index of the container if service has multiple replicas</td></tr><tr><td><code>--no-color</code></td><td></td><td>Produce monochrome output</td></tr><tr><td><code>--no-log-prefix</code></td><td></td><td>Don&#39;t print prefix in logs</td></tr><tr><td><code>--since</code></td><td></td><td>Show logs since timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)</td></tr><tr><td><code>-n, --tail</code></td><td><code>all</code></td><td>Number of lines to show from the end of the logs for each container</td></tr><tr><td><code>-t, --timestamps</code></td><td></td><td>Show timestamps</td></tr><tr><td><code>--until</code></td><td></td><td>Show logs before a timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)</td></tr></tbody></table><h2 id="_5-4-images" tabindex="-1">5.4 images <a class="header-anchor" href="#_5-4-images" aria-label="Permalink to &quot;5.4 images&quot;">​</a></h2><p>描述：查看镜像</p><table><thead><tr><th style="text-align:left;">Description</th><th>List images used by the created containers</th></tr></thead><tbody><tr><td style="text-align:left;">Usage</td><td><code>docker compose images [OPTIONS] [SERVICE...]</code></td></tr></tbody></table><table><thead><tr><th>Option</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>--format</code></td><td><code>table</code></td><td>Format the output. Values: [table | json]</td></tr><tr><td><code>-q, --quiet</code></td><td></td><td>Only display IDs</td></tr></tbody></table><h2 id="_5-5-version" tabindex="-1">5.5 version <a class="header-anchor" href="#_5-5-version" aria-label="Permalink to &quot;5.5 version&quot;">​</a></h2><p>描述：查看版本</p><table><thead><tr><th style="text-align:left;">Description</th><th>Show the Docker Compose version information</th></tr></thead><tbody><tr><td style="text-align:left;">Usage</td><td><code>docker compose version [OPTIONS]</code></td></tr></tbody></table><table><thead><tr><th>Option</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>-f, --format</code></td><td></td><td>Format the output. Values: [pretty | json]. (Default: pretty)</td></tr><tr><td><code>--short</code></td><td></td><td>Shows only Compose&#39;s version number</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">compose</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">version</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">compose</span><span style="color:#24292E;"> </span><span style="color:#032F62;">version</span></span></code></pre></div>`,65),l=[n];function d(r,p,c,i,h,y){return e(),o("div",null,l)}const m=t(a,[["render",d]]);export{u as __pageData,m as default};
