import{_ as s,o as a,c as n,R as e}from"./chunks/framework.zUbWieqp.js";const g=JSON.parse('{"title":"1. 插件安装","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/CICD/base_jenkins/2-config.md","filePath":"guide/container/k8s/CICD/base_jenkins/2-config.md","lastUpdated":1723447064000}'),l={name:"guide/container/k8s/CICD/base_jenkins/2-config.md"},p=e(`<h1 id="_1-插件安装" tabindex="-1">1. 插件安装 <a class="header-anchor" href="#_1-插件安装" aria-label="Permalink to &quot;1. 插件安装&quot;">​</a></h1><h2 id="_1-1-手动安装" tabindex="-1">1.1 手动安装 <a class="header-anchor" href="#_1-1-手动安装" aria-label="Permalink to &quot;1.1 手动安装&quot;">​</a></h2><p><a href="https://updates.jenkins-ci.org/download/plugins/" target="_blank" rel="noreferrer">https://updates.jenkins-ci.org/download/plugins/</a></p><h2 id="_1-2-在线安装" tabindex="-1">1.2 在线安装 <a class="header-anchor" href="#_1-2-在线安装" aria-label="Permalink to &quot;1.2 在线安装&quot;">​</a></h2><p>“系统管理” –&gt; “插件管理” –&gt; “可选插件”</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"># 推荐插件</span></span>
<span class="line"><span style="color:#e1e4e8;">Chinese  中文</span></span>
<span class="line"><span style="color:#e1e4e8;">Gitlab</span></span>
<span class="line"><span style="color:#e1e4e8;">Git Parameter</span></span>
<span class="line"><span style="color:#e1e4e8;">Extended Choice Parameter  构建job时实用插件</span></span>
<span class="line"><span style="color:#e1e4e8;">Docker</span></span>
<span class="line"><span style="color:#e1e4e8;">Groovy</span></span>
<span class="line"><span style="color:#e1e4e8;">Kubernetes</span></span>
<span class="line"><span style="color:#e1e4e8;">Pipeline</span></span>
<span class="line"><span style="color:#e1e4e8;">Config File Provider</span></span>
<span class="line"><span style="color:#e1e4e8;">active choices</span></span>
<span class="line"><span style="color:#e1e4e8;">kubernetes Continuous Deploy</span></span>
<span class="line"><span style="color:#e1e4e8;">http request</span></span>
<span class="line"><span style="color:#e1e4e8;">build user vars</span></span>
<span class="line"><span style="color:#e1e4e8;">description setter</span></span>
<span class="line"><span style="color:#e1e4e8;">Describe With Params</span></span>
<span class="line"><span style="color:#e1e4e8;">Build Name and Description Setter</span></span>
<span class="line"><span style="color:#e1e4e8;">Pipeline Stage View</span></span>
<span class="line"><span style="color:#e1e4e8;">Post build task</span></span>
<span class="line"><span style="color:#e1e4e8;">Blue Ocean</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"># 推荐插件</span></span>
<span class="line"><span style="color:#24292e;">Chinese  中文</span></span>
<span class="line"><span style="color:#24292e;">Gitlab</span></span>
<span class="line"><span style="color:#24292e;">Git Parameter</span></span>
<span class="line"><span style="color:#24292e;">Extended Choice Parameter  构建job时实用插件</span></span>
<span class="line"><span style="color:#24292e;">Docker</span></span>
<span class="line"><span style="color:#24292e;">Groovy</span></span>
<span class="line"><span style="color:#24292e;">Kubernetes</span></span>
<span class="line"><span style="color:#24292e;">Pipeline</span></span>
<span class="line"><span style="color:#24292e;">Config File Provider</span></span>
<span class="line"><span style="color:#24292e;">active choices</span></span>
<span class="line"><span style="color:#24292e;">kubernetes Continuous Deploy</span></span>
<span class="line"><span style="color:#24292e;">http request</span></span>
<span class="line"><span style="color:#24292e;">build user vars</span></span>
<span class="line"><span style="color:#24292e;">description setter</span></span>
<span class="line"><span style="color:#24292e;">Describe With Params</span></span>
<span class="line"><span style="color:#24292e;">Build Name and Description Setter</span></span>
<span class="line"><span style="color:#24292e;">Pipeline Stage View</span></span>
<span class="line"><span style="color:#24292e;">Post build task</span></span>
<span class="line"><span style="color:#24292e;">Blue Ocean</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">💡 说明</p><p>新版本jenkins中已弃用kubernetes Continuous Deploy</p><p>下载地址<a href="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/kubernetes_Continuous_Deploy.hpi" target="_blank" rel="noreferrer">https://nnaigos.oss-cn-hangzhou.aliyuncs.com/kubernetes_Continuous_Deploy.hpi</a></p><ul><li>支持以下资源类型: <ul><li>Deployment</li><li>Replica Set</li><li>Daemon Set</li><li>Pod</li><li>Job</li><li>Service</li><li>Ingress</li><li>Secret</li></ul></li></ul></div><h1 id="_2-全局凭据-unrestricted" tabindex="-1">2. 全局凭据(unrestricted) <a class="header-anchor" href="#_2-全局凭据-unrestricted" aria-label="Permalink to &quot;2. 全局凭据(unrestricted)&quot;">​</a></h1><p>1、gitlab-auth-passwd，类型:Username with password</p><p>2、Harbor，类型:Username with password</p><p>3、kubeconfig，类型: Secret file</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407311544654.png" alt="image-20240731154422825"></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407311545399.png" alt="image-20240731154515032"></p><p>点击全局</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407311546144.png" alt="image-20240731154644199"></p><h2 id="_2-1-添加k8s凭据" tabindex="-1">2.1 添加k8s凭据 <a class="header-anchor" href="#_2-1-添加k8s凭据" aria-label="Permalink to &quot;2.1 添加k8s凭据&quot;">​</a></h2><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407311559432.png" alt="image-20240731155930124"></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407311559285.png" alt="image-20240731155948980"></p><p>或者通过</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202408061224995.png" alt="image"></p><h2 id="_2-2-添加k8s" tabindex="-1">2.2 添加k8s <a class="header-anchor" href="#_2-2-添加k8s" aria-label="Permalink to &quot;2.2 添加k8s&quot;">​</a></h2><p>Kubeconfig：如果是kubeadm部署的，配置文件：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">1.方式获取k8s密钥</span></span>
<span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.kube/config</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">2.导出方式或者密钥</span></span>
<span class="line"><span style="color:#B392F0;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">view</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--raw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">k8s-config-admin</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">1.方式获取k8s密钥</span></span>
<span class="line"><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.kube/config</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">2.导出方式或者密钥</span></span>
<span class="line"><span style="color:#6F42C1;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">view</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--raw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">k8s-config-admin</span></span></code></pre></div><p>系统管理 –&gt; 节点管理 –&gt; Configure Cloud</p><blockquote><p>由于jenkins是直接部署在k8s之内的，就比较简单，不需要填写证书，直接这样</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#kubernetes 地址采用了kube的服务器发现：</span></span>
<span class="line"><span style="color:#B392F0;">https://kubernetes.default.svc.cluster.local</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#点击Test Connection，如果出现 Connection test successful 的提示信息证明 Jenkins 已经可以和 Kubernetes 系统正常通信</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#Jenkins URL地址：</span></span>
<span class="line"><span style="color:#B392F0;">http://jenkins.devops.svc.cluster.local:8080（port处填写当前集群内jenkins</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pod的端口）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#kubernetes 地址采用了kube的服务器发现：</span></span>
<span class="line"><span style="color:#6F42C1;">https://kubernetes.default.svc.cluster.local</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#点击Test Connection，如果出现 Connection test successful 的提示信息证明 Jenkins 已经可以和 Kubernetes 系统正常通信</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#Jenkins URL地址：</span></span>
<span class="line"><span style="color:#6F42C1;">http://jenkins.devops.svc.cluster.local:8080（port处填写当前集群内jenkins</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pod的端口）</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407311606956.png" alt="image-20240731160649646"></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407311612520.png" alt="image-20240731161158286"></p><h2 id="_2-3-添加gitlab凭证" tabindex="-1">2.3 添加gitlab凭证 <a class="header-anchor" href="#_2-3-添加gitlab凭证" aria-label="Permalink to &quot;2.3 添加gitlab凭证&quot;">​</a></h2><h3 id="username-password类型" tabindex="-1">username password类型 <a class="header-anchor" href="#username-password类型" aria-label="Permalink to &quot;username password类型&quot;">​</a></h3><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202408051134871.png" alt="image-20240805113222144"></p><h3 id="添加ssh类型" tabindex="-1">添加ssh类型 <a class="header-anchor" href="#添加ssh类型" aria-label="Permalink to &quot;添加ssh类型&quot;">​</a></h3><p>将id_rsa.pub内容拷贝出来，然后打开github，进入setting-&gt; SSH and GPG keys 点击<code>New SSH key</code></p><p>将id_rsa内容拷贝出来,进入jenkins manager---&gt;添加凭证---&gt;选择<code>SSH Username with private key</code>认证方式</p><h2 id="_2-4-添加habor凭证" tabindex="-1">2.4 添加Habor凭证 <a class="header-anchor" href="#_2-4-添加habor凭证" aria-label="Permalink to &quot;2.4 添加Habor凭证&quot;">​</a></h2><p>和gitlab添加方式一样</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">secret</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker-registry</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">registry-pull-secret</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--docker-server=10.100.24.85</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--docker-username=admin</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--docker-password=Aa123456</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--docker-email=admin@admin.com</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#032F62;">secret</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker-registry</span><span style="color:#24292E;"> </span><span style="color:#032F62;">registry-pull-secret</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--docker-server=10.100.24.85</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--docker-username=admin</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--docker-password=Aa123456</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--docker-email=admin@admin.com</span></span></code></pre></div>`,37),o=[p];function t(c,i,r,d,y,u){return a(),n("div",null,o)}const k=s(l,[["render",t]]);export{g as __pageData,k as default};
