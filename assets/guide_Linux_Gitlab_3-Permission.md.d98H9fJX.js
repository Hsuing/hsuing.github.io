import{_ as e,o as t,c as a,R as r}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"2. 设置受保护分支","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/Gitlab/3-Permission.md","filePath":"guide/Linux/Gitlab/3-Permission.md","lastUpdated":1712917766000}'),i={name:"guide/Linux/Gitlab/3-Permission.md"},o=r('<p>官方文档，<a href="https://docs.gitlab.com/ee/user/permissions.html" target="_blank" rel="noreferrer">https://docs.gitlab.com/ee/user/permissions.html</a></p><p><a href="https://www.tutorialspoint.com/gitlab/gitlab_user_permissions.htm" target="_blank" rel="noreferrer">https://www.tutorialspoint.com/gitlab/gitlab_user_permissions.htm</a></p><h2 id="_1-1-设置用户权限" tabindex="-1">1.1. 设置用户权限 <a class="header-anchor" href="#_1-1-设置用户权限" aria-label="Permalink to &quot;1.1. 设置用户权限&quot;">​</a></h2><p>GitLab用户在组中有五种权限：<strong>Guest、Reporter、Developer、Maintainer、Owner</strong>。</p><p>Guest：可以创建issue、发表评论，不能读写版本库</p><p>Reporter：可以克隆代码，不能提交，QA、PM可以赋予这个权限</p><p>Developer：可以克隆代码、开发、提交、push，RD可以赋予这个权限</p><p>Maintainer：可以创建项目、添加tag、保护分支、添加项目成员、编辑项目，核心RD负责人可以赋予这个权限。</p><p>Owner：可以设置项目访问权限 - Visibility Level、删除项目、迁移项目、管理组成员，开发组leader可以赋予这个权限。</p><p>Gitlab中的组和项目有三种访问权限：<strong>Private、Internal、Public</strong>。</p><p>Private：只有组成员才能看到；Internal：只要登录的用户就能看到；Public：所有人都能看到。开源项目和组设置的是Internal</p><h2 id="_1-2-设置project权限" tabindex="-1">1.2 设置Project权限 <a class="header-anchor" href="#_1-2-设置project权限" aria-label="Permalink to &quot;1.2 设置Project权限&quot;">​</a></h2><p>进入Project页面，通过【Settings】-&gt;【Members】进入配置页面，新增用户可以通过【Gitlab member or Email address】和【Choose a role permission】选择用户和权限，然后点击【Invite】加入项目</p><h1 id="_2-设置受保护分支" tabindex="-1">2. 设置受保护分支 <a class="header-anchor" href="#_2-设置受保护分支" aria-label="Permalink to &quot;2. 设置受保护分支&quot;">​</a></h1><p>GitLab默认对master分支进行了保护，Developer和Maintainer可以提交commit，但是仅有Maintainer才可以将commit merge到master分支</p><h2 id="_2-1-设置受保护分支" tabindex="-1">2.1 设置受保护分支 <a class="header-anchor" href="#_2-1-设置受保护分支" aria-label="Permalink to &quot;2.1 设置受保护分支&quot;">​</a></h2><p>进入Project页面，通过【Settings】-&gt;【Repository】</p><p>如果需要对更多分支进行保护，可以在【Branch】、【Allowed to merge】、【Allowed to push】选择分支、merge对应权限、push对应权限。</p><p>同时对于【Branch】还可以通过通配符进行一类型分支保护</p>',19),s=[o];function n(p,l,c,m,h,_){return t(),a("div",null,s)}const b=e(i,[["render",n]]);export{u as __pageData,b as default};
