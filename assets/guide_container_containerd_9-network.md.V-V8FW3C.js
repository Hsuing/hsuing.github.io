import{_ as s,o as n,c as a,R as l}from"./chunks/framework.zUbWieqp.js";const h=JSON.parse('{"title":"1. CNI为Containerd容器添加网络能力","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/containerd/9-network.md","filePath":"guide/container/containerd/9-network.md","lastUpdated":1731157838000}'),o={name:"guide/container/containerd/9-network.md"},p=l(`<h1 id="_1-cni为containerd容器添加网络能力" tabindex="-1">1. CNI为Containerd容器添加网络能力 <a class="header-anchor" href="#_1-cni为containerd容器添加网络能力" aria-label="Permalink to &quot;1. CNI为Containerd容器添加网络能力&quot;">​</a></h1><h2 id="_1-1-什么是cni" tabindex="-1">1.1 什么是CNI <a class="header-anchor" href="#_1-1-什么是cni" aria-label="Permalink to &quot;1.1 什么是CNI&quot;">​</a></h2><p>CNI (Container Network Interface)也是CNCF旗下的一个项目。CNI包含一些用于配置linux容器网络接口的规范、库，以及一些支持插件。CNI只关心容器创建时的网络分配，以及当容器被删除时已经分配网络资源的释放。 CNI作为容器网络的标准，使得各个容器管理平台可以通过相同的接口调用各种各样的网络插件来为容器配置网络。Kubernetes就内置了CNI并通过CNI配置网络。</p><h3 id="_1-cni规范" tabindex="-1">1.CNI规范 <a class="header-anchor" href="#_1-cni规范" aria-label="Permalink to &quot;1.CNI规范&quot;">​</a></h3><p>当前CNI规范的版本是0.4.0，规范的地址是<a href="https://github.com/containernetworking/cni/blob/spec-v0.4.0/SPEC.md%E3%80%82" target="_blank" rel="noreferrer">https://github.com/containernetworking/cni/blob/spec-v0.4.0/SPEC.md。</a></p><p>CNI规范主要是为Linux容器提出了一个通用的基于插件的网络解决方案，这个解决方案被称作CNI即容器网络接口。</p><p>在CNI规范中对<code>container</code>容器和<code>network</code>网络的定义如下:</p><p><code>container</code>容器: 可以认为是linux newtwork namespace的同义词，一个network namespace具体对应什么，与具体的容器运行时有关 <code>network</code>网络: 是指可以唯一寻址且可互相通信的实体。这些实体可以是一个单独容器(如上定义)，一台机器，或者其他的网络设备(如一台路由器)。容器container可以加入一个或多个网络network，也可以从一个或多个network中移除。</p><h2 id="_1-2-部署cni插件" tabindex="-1">1.2 部署CNI插件 <a class="header-anchor" href="#_1-2-部署cni插件" aria-label="Permalink to &quot;1.2 部署CNI插件&quot;">​</a></h2><p>高版本之后，可以自带cni插件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;"> https://github.com/containernetworking/plugins/releases</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;"> https://github.com/containernetworking/plugins/releases</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@kubeadm-master01 bin]# tree -L 1</span></span>
<span class="line"><span style="color:#79B8FF;">.</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bandwidth</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bridge</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">calico</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">calico-ipam</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dhcp</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dummy</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">firewall</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">flannel</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">host-device</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">host-local</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ipvlan</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">loopback</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">macvlan</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">portmap</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ptp</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sbr</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">static</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tuning</span></span>
<span class="line"><span style="color:#B392F0;">├──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vlan</span></span>
<span class="line"><span style="color:#B392F0;">└──</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vrf</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@kubeadm-master01 bin]# tree -L 1</span></span>
<span class="line"><span style="color:#005CC5;">.</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bandwidth</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bridge</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">calico</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">calico-ipam</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dhcp</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dummy</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">firewall</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">flannel</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">host-device</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">host-local</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ipvlan</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">loopback</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">macvlan</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">portmap</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ptp</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sbr</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">static</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tuning</span></span>
<span class="line"><span style="color:#6F42C1;">├──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vlan</span></span>
<span class="line"><span style="color:#6F42C1;">└──</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vrf</span></span></code></pre></div><p>从功能上看可以分为三类：</p><ul><li>主插件: 用于创建网络设备 <ul><li>bridge: 创建一个网桥设备，并添加宿主机和容器到该网桥</li><li>ipvlan: 为容器添加ipvlan网络接口</li><li>loopback: 设置lo网络接口的状态为up</li><li>macvlan: 创建一个新的MAC地址，并将所有流量转发到容器</li><li>ptp: 创建Veth对</li><li>vlan: 分配一个vlan设备</li><li>host-device: 将已存在的设备移入容器内</li></ul></li><li>IPAM插件: 用于IP地址的分配 <ul><li>dhcp: 在宿主机上运行dhcp守护程序，代表容器发出dhcp请求</li><li>host-local: 维护一个分配ip的本地数据库</li><li>static: 为容器分配一个静态IPv4/IPv6地址，主要用于调试</li></ul></li><li>Meta插件: 其他插件，非单独使用插件 <ul><li>flannel: flannel网络方案的CNI插件，根据flannel的配置文件创建网络接口</li><li>tuning: 调整现有网络接口的sysctl参数</li><li>portmap: 一个基于iptables的portmapping插件。将端口从主机的地址空间映射到容器</li><li>bandwidth: 允许使用TBF进行限流的插件</li><li>sbr: 一个为网络接口配置基于源路由的插件</li><li>firewall: 过iptables给容器网络的进出流量进行一系列限制的插件</li></ul></li></ul><p>参考：</p><ul><li><a href="https://github.com/containernetworking/cni" target="_blank" rel="noreferrer">CNI - the Container Network Interface</a></li><li><a href="https://github.com/containernetworking/plugins" target="_blank" rel="noreferrer">CNI Plugins</a></li><li><a href="https://github.com/containernetworking/cni/blob/master/SPEC.md" target="_blank" rel="noreferrer">Container Network Interface (CNI) Specification</a></li></ul><h2 id="_1-3-cni网络配置" tabindex="-1">1.3 CNI网络配置 <a class="header-anchor" href="#_1-3-cni网络配置" aria-label="Permalink to &quot;1.3 CNI网络配置&quot;">​</a></h2><h3 id="_1-重要字段" tabindex="-1">1.重要字段 <a class="header-anchor" href="#_1-重要字段" aria-label="Permalink to &quot;1.重要字段&quot;">​</a></h3><p>cni json配置文件中的一些重要字段:</p><ul><li><code>cniVersion</code>(string): 描述cni配置遵循的cni规范版本(版本号为语义化版本,如0.4.0)</li><li><code>name</code>(string): 表示network name，在主机(或其他管理域)上的所有容器中应该是唯一的</li><li><code>type</code>(string): 表示cni插件的可执行文件名</li><li><code>args</code>(dictionary, optional): 由容器运行时提供的可选参数。例如，可以通过将标签添加到args下的标签字段，将标签字典传递给CNI插件</li><li><code>ipMasq</code>(boolean, optional): 如果插件支持此字段，将为这个网络上的主机设置一个ip伪装(ip masquerade)。如果主机将充当分配给容器的子网的网管，那么这个配置字段是必须的</li><li>ipam(boolean, optional): 包含具体IPAM(IP地址管理)值的键值对 <ul><li><code>type</code>(string) 表示ipam插件的可执行文件名，如<code>dhscp</code>, <code>host-local</code>, <code>static</code></li></ul></li><li>dns(dictionary, optional): 包含具体DNS配置的键值对 <ul><li><code>nameservers</code>(list of strings, optional): 一个对配置网络可见的按优先级顺序排列的dns服务器列表，列表中的每个值是一个IPV4或IPV6的字符串</li><li><code>domain</code>(string, optional): 用于短主机名查找的本地域名</li><li><code>search</code>(list of strings, optional): 用于短主机名查找的优先级排序搜索域列表，被大多数解析器(resolver)在解析时优先于<code>domain</code></li><li><code>options</code> (list of strings, optional): 一组可以传递给解析器(resolver)的选项值</li></ul></li></ul><p>参考：</p><ul><li><a href="https://www.cni.dev/" target="_blank" rel="noreferrer">https://www.cni.dev/</a></li><li><a href="https://github.com/containernetworking/cni/blob/spec-v0.4.0/SPEC.md" target="_blank" rel="noreferrer">CNI Specification 0.4.0</a></li></ul><h1 id="_2-网络" tabindex="-1">2. 网络 <a class="header-anchor" href="#_2-网络" aria-label="Permalink to &quot;2. 网络&quot;">​</a></h1><blockquote><p>nerdctl 所使用的网络及模式和 docker 完全一致</p></blockquote><h2 id="_1-1-查看网络" tabindex="-1">1.1 查看网络 <a class="header-anchor" href="#_1-1-查看网络" aria-label="Permalink to &quot;1.1 查看网络&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[root@kube-master-01 init_pack]# nerdctl network ls</span></span>
<span class="line"><span style="color:#B392F0;">NETWORK</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ID</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">NAME</span><span style="color:#E1E4E8;">              </span><span style="color:#9ECBFF;">FILE</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">containerd-net</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">/etc/cni/net.d/10-containerd-net.conflist</span></span>
<span class="line"><span style="color:#B392F0;">17f29b073143</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">bridge</span><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">/etc/cni/net.d/nerdctl-bridge.conflist</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">host</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#B392F0;">none</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[root@kube-master-01 init_pack]# nerdctl network ls</span></span>
<span class="line"><span style="color:#6F42C1;">NETWORK</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ID</span><span style="color:#24292E;">      </span><span style="color:#032F62;">NAME</span><span style="color:#24292E;">              </span><span style="color:#032F62;">FILE</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">containerd-net</span><span style="color:#24292E;">    </span><span style="color:#032F62;">/etc/cni/net.d/10-containerd-net.conflist</span></span>
<span class="line"><span style="color:#6F42C1;">17f29b073143</span><span style="color:#24292E;">    </span><span style="color:#032F62;">bridge</span><span style="color:#24292E;">            </span><span style="color:#032F62;">/etc/cni/net.d/nerdctl-bridge.conflist</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">host</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6F42C1;">none</span></span></code></pre></div><h2 id="_2-2-创建网桥" tabindex="-1">2.2 创建网桥 <a class="header-anchor" href="#_2-2-创建网桥" aria-label="Permalink to &quot;2.2 创建网桥&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">nerdctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">network</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">create</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bridge</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--subnet</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10.244</span><span style="color:#9ECBFF;">.0.0/16</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mynet</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">nerdctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">network</span><span style="color:#24292E;"> </span><span style="color:#032F62;">create</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bridge</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--subnet</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10.244</span><span style="color:#032F62;">.0.0/16</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mynet</span></span></code></pre></div>`,28),e=[p];function t(c,r,i,y,d,E){return n(),a("div",null,e)}const C=s(o,[["render",t]]);export{h as __pageData,C as default};
