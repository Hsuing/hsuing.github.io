import{_ as s,o as a,c as n,R as e}from"./chunks/framework.zUbWieqp.js";const h=JSON.parse('{"title":"1.yum方式安装","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/containerd/3-yum.md","filePath":"guide/container/containerd/3-yum.md","lastUpdated":1714386587000}'),l={name:"guide/container/containerd/3-yum.md"},o=e(`<p><code>基于centos8_x</code></p><h1 id="_1-yum方式安装" tabindex="-1">1.yum方式安装 <a class="header-anchor" href="#_1-yum方式安装" aria-label="Permalink to &quot;1.yum方式安装&quot;">​</a></h1><ul><li>获取阿里源</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">wget</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/yum.repos.d/docker-ce.repo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">wget</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/yum.repos.d/docker-ce.repo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span></code></pre></div><ul><li>安装</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">yum</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-y</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">containerd.io</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">yum</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-y</span><span style="color:#24292E;"> </span><span style="color:#032F62;">containerd.io</span></span></code></pre></div><h1 id="_2-配置文件" tabindex="-1">2.配置文件 <a class="header-anchor" href="#_2-配置文件" aria-label="Permalink to &quot;2.配置文件&quot;">​</a></h1><ul><li>生成配置文件</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/containerd</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#生成配置文件</span></span>
<span class="line"><span style="color:#B392F0;">containerd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">defaul</span><span style="color:#E1E4E8;">t</span><span style="color:#F97583;">&gt;</span><span style="color:#9ECBFF;">/etc/containerd/config.toml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/containerd</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#生成配置文件</span></span>
<span class="line"><span style="color:#6F42C1;">containerd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#032F62;">defaul</span><span style="color:#24292E;">t</span><span style="color:#D73A49;">&gt;</span><span style="color:#032F62;">/etc/containerd/config.toml</span></span></code></pre></div><ul><li>编辑配置文件</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#编辑配置文件</span></span>
<span class="line"><span style="color:#e1e4e8;">vim /etc/containerd/config.toml</span></span>
<span class="line"><span style="color:#e1e4e8;">Systemdcgroup = false 改为 Systemdcgroup = true</span></span>
<span class="line"><span style="color:#e1e4e8;">sandbox_image = &quot;registry.aliyuncs.com/google_containers/pause:3.9&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#编辑配置文件</span></span>
<span class="line"><span style="color:#24292e;">vim /etc/containerd/config.toml</span></span>
<span class="line"><span style="color:#24292e;">Systemdcgroup = false 改为 Systemdcgroup = true</span></span>
<span class="line"><span style="color:#24292e;">sandbox_image = &quot;registry.aliyuncs.com/google_containers/pause:3.9&quot;</span></span></code></pre></div><h1 id="_3-启动" tabindex="-1">3.启动 <a class="header-anchor" href="#_3-启动" aria-label="Permalink to &quot;3.启动&quot;">​</a></h1><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">enable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">containerd</span></span>
<span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">containerd</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">enable</span><span style="color:#24292E;"> </span><span style="color:#032F62;">containerd</span></span>
<span class="line"><span style="color:#6F42C1;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span><span style="color:#24292E;"> </span><span style="color:#032F62;">containerd</span></span></code></pre></div>`,13),p=[o];function t(c,r,i,d,y,u){return a(),n("div",null,p)}const g=s(l,[["render",t]]);export{h as __pageData,g as default};
