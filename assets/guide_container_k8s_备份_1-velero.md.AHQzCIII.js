import{_ as e,o,c as l,R as r}from"./chunks/framework.zUbWieqp.js";const _=JSON.parse('{"title":"1. 什么是velero","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/备份/1-velero.md","filePath":"guide/container/k8s/备份/1-velero.md","lastUpdated":1723081464000}'),a={name:"guide/container/k8s/备份/1-velero.md"},t=r('<h1 id="_1-什么是velero" tabindex="-1">1. 什么是velero <a class="header-anchor" href="#_1-什么是velero" aria-label="Permalink to &quot;1. 什么是velero&quot;">​</a></h1><p>Velero 是一个云原生的灾难恢复和迁移工具，它本身也是开源的, 采用 Go 语言编写，可以安全的备份、恢复和迁移Kubernetes集群资源和持久卷。</p><p>Velero 是西班牙语，意思是帆船，非常符合 Kubernetes 社区的命名风格。Velero 的开发公司 Heptio，之前已被 VMware 收购，其创始人2014就职于Google，当时被认为是 Kubernetes 核心成员。</p><p>Velero 是一种云原生的Kubernetes优化方法，支持标准的K8S集群，既可以是私有云平台也可以是公有云。除了灾备之外它还能做资源移转，支持把容器应用从一个集群迁移到另一个集群。</p><p>Heptio Velero ( 以前的名字为 ARK) 是一款用于 Kubernetes 集群资源和持久存储卷（PV）的备份、迁移以及灾难恢复等的开源工具。</p><p>使用velero可以对集群进行备份和恢复，降低集群DR造成的影响。velero的基本原理就是将集群的数据备份到对象存储中，在恢复的时候将数据从对象存储中拉取下来。可以从官方文档查看可接收的对象存储，本地存储可以使用Minio</p><h2 id="_1-1-velero功能" tabindex="-1">1.1 velero功能 <a class="header-anchor" href="#_1-1-velero功能" aria-label="Permalink to &quot;1.1 velero功能&quot;">​</a></h2><ul><li>Velero是用于Kubernetes资源备份、恢复、迁移的开源工具（复制同步开发，测试，生产环境的集群配置，简化环境配置）</li><li>客户端(velero命令行) -&gt; 服务端(部署在k8s) -&gt; 对象储存(s3或兼容s3储存)</li><li>velero将k8s资源备份为json文件,可以通过namespace、label等进行筛选备份或恢复</li></ul><h2 id="_1-2-velero工作流程" tabindex="-1">1.2 velero工作流程 <a class="header-anchor" href="#_1-2-velero工作流程" aria-label="Permalink to &quot;1.2 velero工作流程&quot;">​</a></h2><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407251200025.png" alt="img"></p><h2 id="_1-3-velero备份过程" tabindex="-1">1.3 velero备份过程 <a class="header-anchor" href="#_1-3-velero备份过程" aria-label="Permalink to &quot;1.3 velero备份过程&quot;">​</a></h2><p><a href="https://velero.io/docs/v1.9/how-velero-works/" target="_blank" rel="noreferrer">https://velero.io/docs/v1.9/how-velero-works/</a></p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407251353882.png" alt="image-20240725135258429"></p><ol><li>本地 <code>Velero</code> 客户端发送备份指令。</li><li><code>Kubernetes</code> 集群内就会创建一个 <code>Backup</code> 对象。</li><li><code>BackupController</code> 监测 <code>Backup</code> 对象并开始备份过程。</li><li><code>BackupController</code> 会向 <code>API Server</code> 查询相关数据。</li><li><code>BackupController</code> 将查询到的数据备份到远端的对象存储。</li></ol><h2 id="_1-4-velero组成" tabindex="-1">1.4 velero组成 <a class="header-anchor" href="#_1-4-velero组成" aria-label="Permalink to &quot;1.4 velero组成&quot;">​</a></h2><p><code>Velero</code> 组件一共分两部分，分别是服务端和客户端。</p><ul><li>服务端：运行在你 <code>Kubernetes</code> 的集群中</li><li>客户端：是一些运行在本地的命令行的工具，需要已配置好 <code>kubectl</code> 及集群 <code>kubeconfig</code> 的机器上</li></ul><h2 id="_1-5-velero支持备份" tabindex="-1">1.5 velero支持备份 <a class="header-anchor" href="#_1-5-velero支持备份" aria-label="Permalink to &quot;1.5 velero支持备份&quot;">​</a></h2><ul><li>AWS S3 以及兼容 S3 的存储，比如：Minio</li><li>Azure BloB 存储</li><li>Google Cloud 存储</li><li>Aliyun OSS 存储(<a href="https://github.com/AliyunContainerService/velero-plugin" target="_blank" rel="noreferrer">https://github.com/AliyunContainerService/velero-plugin</a>)</li></ul><blockquote><p>项目地址：<a href="https://github.com/heptio/velero" target="_blank" rel="noreferrer">https://github.com/heptio/velero</a></p></blockquote><h2 id="_1-6-和etcd区别" tabindex="-1">1.6 和etcd区别 <a class="header-anchor" href="#_1-6-和etcd区别" aria-label="Permalink to &quot;1.6 和etcd区别&quot;">​</a></h2><p>与 Etcd 备份相比，直接备份 <code>Etcd</code> 是将集群的全部资源备份起来。而 <code>Velero</code> 就是可以对 <code>Kubernetes</code> 集群内对象级别进行备份。除了对 <code>Kubernetes</code> 集群进行整体备份外，<code>Velero</code> 还可以通过对 <code>Type</code>、<code>Namespace</code>、<code>Label</code> 等对象进行分类备份或者恢复。</p><div class="warning custom-block"><p class="custom-block-title">💡 说明</p><p>备份过程中创建的对象是不会被备份的</p></div>',23),c=[t];function i(n,d,s,h,u,p){return o(),l("div",null,c)}const b=e(a,[["render",i]]);export{_ as __pageData,b as default};
