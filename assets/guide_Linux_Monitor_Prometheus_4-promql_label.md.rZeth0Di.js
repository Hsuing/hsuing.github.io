import{_ as s,o as e,c as t,R as a}from"./chunks/framework.zUbWieqp.js";const h=JSON.parse('{"title":"1. 定义标签规范","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/Monitor/Prometheus/4-promql_label.md","filePath":"guide/Linux/Monitor/Prometheus/4-promql_label.md","lastUpdated":1739441864000}'),l={name:"guide/Linux/Monitor/Prometheus/4-promql_label.md"},n=a(`<h1 id="_1-定义标签规范" tabindex="-1">1. 定义标签规范 <a class="header-anchor" href="#_1-定义标签规范" aria-label="Permalink to &quot;1. 定义标签规范&quot;">​</a></h1><p>随着业务复杂度增加，标签规范也开始现的重要起来</p><h2 id="_1-1-通用标签" tabindex="-1">1.1 通用标签 <a class="header-anchor" href="#_1-1-通用标签" aria-label="Permalink to &quot;1.1 通用标签&quot;">​</a></h2><p>我定了 5 个通用标签(这 5 个标签的范围是层层缩进的)，这 5 个标签是添加 instance 的时候，必须要添加。</p><table><thead><tr><th style="text-align:left;">标签</th><th style="text-align:left;">值</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>env</code></td><td style="text-align:left;"><code>prod</code> / <code>test</code></td><td style="text-align:left;">表示环境，prod 是生产环境，test 是测试环境</td></tr><tr><td style="text-align:left;"><code>product_line</code></td><td style="text-align:left;"><code>biz</code> / <code>personal</code></td><td style="text-align:left;">表示产品线， toC 产品或者 toB 产品</td></tr><tr><td style="text-align:left;"><code>region</code></td><td style="text-align:left;"><code>cn</code> / <code>jp</code> / <code>us-east</code> / <code>us-west</code> 等等</td><td style="text-align:left;">实例所在主机的云服务区域 这个按照自己项目的使用情况来定义</td></tr><tr><td style="text-align:left;"><code>cloud_platform</code></td><td style="text-align:left;"><code>aws</code> / <code>tx</code> / <code>aliyun</code></td><td style="text-align:left;">实例所属主机的云服务厂商，比如 aws， 腾讯云，阿里云</td></tr><tr><td style="text-align:left;"><code>server_type</code></td><td style="text-align:left;"><code>mysql</code> / <code>redis</code> / <code>push</code> / <code>mqtt</code></td><td style="text-align:left;">当前实例的服务类别，有第三方的，比如 nginx，mysql，也有自研的，比如 push， mqtt 这种</td></tr></tbody></table><p>这一样就可以很快的定位到某一个环境，某一个产品线，某一个区域下，某一个云服务厂商下的某一个服务，比如 我要添加线上环境，个人线产品在美西地区的 aws 主机的一台 mysql 的实例，那么就是:</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">- </span><span style="color:#85E89D;">targets</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#9ECBFF;">172.xx.xx.5:9104</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">env</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">prod</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">product_line</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">personal</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">region</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">us-west</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">cloud_platform</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">aws</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">server_type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">mysql</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">- </span><span style="color:#22863A;">targets</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#032F62;">172.xx.xx.5:9104</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">env</span><span style="color:#24292E;">: </span><span style="color:#032F62;">prod</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">product_line</span><span style="color:#24292E;">: </span><span style="color:#032F62;">personal</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">region</span><span style="color:#24292E;">: </span><span style="color:#032F62;">us-west</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">cloud_platform</span><span style="color:#24292E;">: </span><span style="color:#032F62;">aws</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">server_type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">mysql</span></span></code></pre></div><h2 id="_1-2-自定义标签" tabindex="-1">1.2 自定义标签 <a class="header-anchor" href="#_1-2-自定义标签" aria-label="Permalink to &quot;1.2 自定义标签&quot;">​</a></h2><p>最常用的自定义标签就是 <code>wan</code>, 也就是外网 ip 地址， 因为在请求 metrics 接口的时候，一般都是走内网地址，在看内网地址的时候，我们一般都是很难辨别是哪一台， 所以针对这种 target 是内网地址的，我们一般都会再添加一个 <code>wan</code> 的标签，来指定所对应的外网地址</p>`,9),o=[n];function p(c,r,d,i,y,E){return e(),t("div",null,o)}const u=s(l,[["render",p]]);export{h as __pageData,u as default};
