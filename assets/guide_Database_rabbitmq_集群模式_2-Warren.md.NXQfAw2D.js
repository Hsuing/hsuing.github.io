import{_ as a,o as e,c as t,R as r}from"./chunks/framework.zUbWieqp.js";const n="/assets/w1.G5rN90hm.png",g=JSON.parse('{"title":"1.RabbitMQ集群架构模式-主备模式（Warren）","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Database/rabbitmq/集群模式/2-Warren.md","filePath":"guide/Database/rabbitmq/集群模式/2-Warren.md","lastUpdated":1710405635000}'),o={name:"guide/Database/rabbitmq/集群模式/2-Warren.md"},i=r('<h1 id="_1-rabbitmq集群架构模式-主备模式-warren" tabindex="-1">1.RabbitMQ集群架构模式-主备模式（Warren） <a class="header-anchor" href="#_1-rabbitmq集群架构模式-主备模式-warren" aria-label="Permalink to &quot;1.RabbitMQ集群架构模式-主备模式（Warren）&quot;">​</a></h1><p><strong>并发和数据量不高</strong></p><p>主备模式，实现RabbitMQ的高可用集群，一般在并发和数据量不高的情况下，这种模型非常的好用且简短。主备模式也称为warren模式</p><ul><li><code>主备模式</code>:<strong>主节点提供读写，从节点不提供读写服务</strong>，只是负责提供备份服务,备份节点的主要功能是在主节点宕机时，完成自动切换 从--&gt;主</li><li><code>主从模式</code>:<strong>主节点提供读写，从节点只读</strong></li></ul><p><img src="'+n+'" alt=""></p><ul><li>主备模式：所谓rabbitmq另外一种模式就是warren（兔子窝），就是一个主/备方案（主节点如果挂了，从节点提供服务而已，和activemq利用zookeeper做主/备一样）</li></ul>',6),s=[i];function _(c,b,d,l,p,m){return e(),t("div",null,s)}const h=a(o,[["render",_]]);export{g as __pageData,h as default};
