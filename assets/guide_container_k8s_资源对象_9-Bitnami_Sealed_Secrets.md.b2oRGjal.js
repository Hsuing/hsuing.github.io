import{_ as e,o as t,c as a,R as i}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"1. Bitnami Sealed Secrets 简介","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/资源对象/9-Bitnami_Sealed_Secrets.md","filePath":"guide/container/k8s/资源对象/9-Bitnami_Sealed_Secrets.md","lastUpdated":1723447113000}'),r={name:"guide/container/k8s/资源对象/9-Bitnami_Sealed_Secrets.md"},s=i('<h1 id="_1-bitnami-sealed-secrets-简介" tabindex="-1">1. Bitnami Sealed Secrets 简介 <a class="header-anchor" href="#_1-bitnami-sealed-secrets-简介" aria-label="Permalink to &quot;1. Bitnami Sealed Secrets 简介&quot;">​</a></h1><p>Bitnami Sealed Secrets: Kubernetes 的“<strong>加密的 Secrets</strong>”.</p><p>典型使用场景：</p><p><strong>遇到的问题</strong>：“我可以在 git 中管理我所有的 K8s 配置，除了 Secrets。” <strong>解决方案</strong>：将您的 Secret 加密到 SealedSecret 中，即使在公共存储库中也可以安全存储。SealedSecret 只能由目标集群中运行的控制器解密，其他人（甚至原始作者）无法从 SealedSecret 中获得原始 Secret。</p><h2 id="_1-1-使用流程" tabindex="-1">1.1 使用流程 <a class="header-anchor" href="#_1-1-使用流程" aria-label="Permalink to &quot;1.1 使用流程&quot;">​</a></h2><p>使用 Bitnami Sealed Secrets 的工作流程示例如下：</p><ol><li>集群管理员在 K8s 集群上部署 Sealed secrets 控制器</li><li>开发者需要在本地计算机上安装 <code>kubeseal</code> CLI。</li><li>开发者创建一个 Secret 资源，然后由 <code>kubeseal</code> CLI 在运行时从控制器中获取密钥，对该资源进行加密或密封。对于网络受限的环境，公钥也可以存储在本地并由 kubeseal 使用。 Kubeseal 将创建一个 <code>SealedSecret</code> 自定义资源。</li><li>开发者将此 CR 推送到自己的 git 仓库中</li><li>可使用 ArgoCD 等 CD 工具在集群上部署 CR。</li><li>控制器将检测到 SealedSecret 资源，并使用集群上的私钥对其进行解密。</li></ol>',7),c=[s];function l(n,o,d,_,S,m){return t(),a("div",null,c)}const h=e(r,[["render",l]]);export{u as __pageData,h as default};
