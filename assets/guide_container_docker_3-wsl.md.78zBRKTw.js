import{_ as e,o as s,c as a,R as n}from"./chunks/framework.zUbWieqp.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/docker/3-wsl.md","filePath":"guide/container/docker/3-wsl.md","lastUpdated":1715756786000}'),t={name:"guide/container/docker/3-wsl.md"},i=n('<h2 id="introduction-to-windows-subsystem-for-linux" tabindex="-1">Introduction to Windows Subsystem for Linux <a class="header-anchor" href="#introduction-to-windows-subsystem-for-linux" aria-label="Permalink to &quot;Introduction to Windows Subsystem for Linux&quot;">​</a></h2><p>Windows Subsystem for Linux is an optional feature added to Windows 10 and later versions that allows users to run a Linux instance, including most command-line tools and applications, directly on Windows without using any traditional virtual machine or dual-boot configuration.</p><p>The WSL feature was originally added to Windows 10 version 1607 (Anniversary Update) and requires an x64-bit version of Windows. On Server operating systems, it is available for installation in Server 2016 version 1803.</p><p>The initial version of WSL (now known as WSL v1 or WSL 1) does not use the <em>real</em> Linux kernel. Instead, a translation layer between the Linux distribution and the Windows NT kernel translates and handles all the kernel-level operations.</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151025427.png" alt="Windows Subsystem for Linux v1 architecture"> Windows Subsystem for Linux v1 architecture</p><p>A lot has changed since the initial launch of WSL. The newer version (known as WSL v2 or WSL 2) was released with Windows 10 version 1903, build 18362 (May 2019 Update); it included various architectural and performance improvements, particularly the use of the real Linux kernel. In WSL 2, in place of the translation layer, a <em>real</em> Linux kernel runs inside a lightweight utility virtual machine (VM), though this is not a <em>traditional VM</em>. This new architecture has resulted in a significant increase in file system performance and full system call compatibility.</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151025621.png" alt="Windows Subsystem for Linux v2 architecture"></p><p>Windows Subsystem for Linux v2 architecture</p><h2 id="differences-between-wsl-and-traditional-vm" tabindex="-1">Differences between WSL and traditional VM <a class="header-anchor" href="#differences-between-wsl-and-traditional-vm" aria-label="Permalink to &quot;Differences between WSL and traditional VM&quot;">​</a></h2><p>While WSL 2 uses Microsoft&#39;s Hyper-V as a hypervisor under the hood to run the utility VM, it does not require you to enable Windows&#39; <em>Hyper-V role or feature</em>; WSL works perfectly fine without it.</p><p>Please remember that WSL is not a full replacement for a traditional VM. Let me tell you why.</p><p>With the help of a hypervisor, a traditional VM creates an isolated environment in your host system that acts as a separate virtual computer with all the hardware components, such as CPU, RAM, and storage. This architecture allows a user to have a completely isolated system with a guest operating system.</p><p>However, this is not the case with WSL. While WSL 2 does run a real Linux kernel in a Hyper-V–based utility VM, it works completely behind the scenes; hence, the user does not need to install and manage the operating system or any other resources as with a traditional VM.</p><h3 id="when-to-choose-wsl-2" tabindex="-1">When to choose WSL 2 <a class="header-anchor" href="#when-to-choose-wsl-2" aria-label="Permalink to &quot;When to choose WSL 2&quot;">​</a></h3><ul><li>You have a less powerful computer.</li><li>You need a smaller memory or storage footprint.</li><li>You need faster I/O performance.</li><li>You don&#39;t want to waste your time installing and managing the virtual machine.</li><li>You need to run a Linux distribution (distro) for development and testing purposes.</li></ul><h3 id="when-to-choose-a-traditional-vm" tabindex="-1">When to choose a traditional VM <a class="header-anchor" href="#when-to-choose-a-traditional-vm" aria-label="Permalink to &quot;When to choose a traditional VM&quot;">​</a></h3><ul><li>You have a powerful computer for which resources (such as memory, CPU, and storage) are not a concern.</li><li>You need to run an operating system other than GNU/Linux.</li><li>You need a completely isolated and full-fledged system environment.</li><li>You want to manage the operating system, applications, and resources.</li><li>You want to run production-level workloads.</li><li>You need advanced virtualization features, such as snapshots and load balancing.</li></ul><p>In a nutshell, both WSL and traditional VM have several pros and cons; whether you want to run a Linux distro within WSL or within a traditional virtualization platform (such as VirtualBox, Hyper-V, or VMware Workstation) depends entirely on your interest and use case. I hope the aforementioned points will help you make an informed decision.</p><h2 id="prerequisites-for-wsl" tabindex="-1">Prerequisites for WSL <a class="header-anchor" href="#prerequisites-for-wsl" aria-label="Permalink to &quot;Prerequisites for WSL&quot;">​</a></h2><p>Your system must have certain prerequisites before you can run WSL.</p><ul><li>It must have x64-bit and ARM64 processors.</li><li>To run WSL 1 on an x64 system, it must be running at least Windows 10 version 1607 (Anniversary Update).</li><li>To run WSL 2 on an x64 system, it must be running at least Windows 10 version 1903, build 18362 (May 2019 Update).</li><li>To run WSL 2 on an ARM64 system, it must be running at least Windows 10 version 2004 (build 19041 or higher).</li></ul><p>To check the operating system version and build number, you can type the <em>winver</em> command in the RUN dialog and press Enter.</p><h2 id="install-wsl-in-windows-11" tabindex="-1">Install WSL in Windows 11 <a class="header-anchor" href="#install-wsl-in-windows-11" aria-label="Permalink to &quot;Install WSL in Windows 11&quot;">​</a></h2><p>If your system is running Windows 10 version 2004 (build 19041 or higher) or Windows 11, Microsoft has made it incredibly easy to install WSL 2. Just launch the PowerShell console with an elevated privilege and run the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --install</span></span></code></pre></div><p>This command enables the optional Windows features required for WSL, downloads the latest Linux kernel, sets WSL 2 as the default, and installs the Ubuntu Linux distro for you.</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151026367.png" alt="Install WSL using PowerShell The latest method"></p><p>Install WSL using PowerShell The latest method</p><p>Once the command is finished, you can restart your computer using the Restart-Computer -Force command.</p><p>After the restart, the WSL installation will resume automatically, and you will see an <em>Ubuntu Linux</em> terminal, which will ask you to set the username and password for the Ubuntu WSL instance.</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151026157.png" alt="Ubuntu Linux running in the WSL instance"></p><p>Ubuntu Linux running in the WSL instance</p><h3 id="manually-install-windows-subsystem-for-linux" tabindex="-1">Manually install Windows Subsystem for Linux <a class="header-anchor" href="#manually-install-windows-subsystem-for-linux" aria-label="Permalink to &quot;Manually install Windows Subsystem for Linux&quot;">​</a></h3><p>If you are running an older Windows 10 build or prefer installing WSL manually, you can follow the manual installation steps laid out below.</p><p>Launch the Windows PowerShell console with an elevated privilege and run the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Enable-WindowsOptionalFeature -Online -FeatureName &#39;Microsoft-Windows-Subsystem-Linux&#39; -All -NoRestart</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Enable-WindowsOptionalFeature -Online -FeatureName &#39;Microsoft-Windows-Subsystem-Linux&#39; -All -NoRestart</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151026259.png" alt="Enable the WSL feature using PowerShell The manual method"></p><p>Enable the WSL feature using PowerShell The manual method</p><p>Many people still prefer using WSL 1. If you also want the same, you can restart your system at this stage and directly jump to Point 5 after rebooting. If you would rather use WSL 2, please continue to the next point. Make sure your system meets the prerequisites for running WSL 2.</p><p>The next step is to run the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Enable-WindowsOptionalFeature -Online -FeatureName &#39;VirtualMachinePlatform&#39; -All -NoRestart</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Enable-WindowsOptionalFeature -Online -FeatureName &#39;VirtualMachinePlatform&#39; -All -NoRestart</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151026608.png" alt="Enable the Virtual Machine Platform feature using PowerShell The manual method"></p><p>Enable the Virtual Machine Platform feature using PowerShell The manual method</p><p>Now use the following command to restart your system:</p><p>Restart-Computer -Force</p><p>After the system has restarted, download the latest kernel package for your system using the following links and install the package:</p><ul><li><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi" target="_blank" rel="noreferrer">WSL 2 Linux kernel for x64 systems</a></li><li><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi" target="_blank" rel="noreferrer">WSL 2 Linux kernel for ARM64 systems</a></li></ul><p>Once the kernel package is installed, your system should be running WSL 1 by default. To change the default version to WSL 2, run the following command in an elevated PowerShell console:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --set-default-version 2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --set-default-version 2</span></span></code></pre></div><p>Now you can install any Linux distro of your choice. We will cover that in the next section.</p><h2 id="install-and-manage-linux-distros-in-wsl" tabindex="-1">Install and manage Linux distros in WSL <a class="header-anchor" href="#install-and-manage-linux-distros-in-wsl" aria-label="Permalink to &quot;Install and manage Linux distros in WSL&quot;">​</a></h2><p>Now that you have installed WSL in your system, you can run and manage your Linux distros using PowerShell. Launch the PowerShell console with an elevated privilege and use the commands mentioned in this section.</p><h3 id="list-the-available-linux-distros" tabindex="-1">List the available Linux distros <a class="header-anchor" href="#list-the-available-linux-distros" aria-label="Permalink to &quot;List the available Linux distros&quot;">​</a></h3><p>To see the list of all the Linux distros available for installation with WSL in the online store, you can use the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --list --online</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --list --online</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151027330.png" alt="WSL list online"></p><p>WSL list online</p><p>You can also use the short-version command <em>wsl -l -o</em>, which will yield a list of all the supported Linux distros available online for installation in your system.</p><p>If you&#39;re thinking that this list is quite small and that you cannot see the distro of your choice, rest assured that there is a way you can import any Linux distro in WSL. But that is a manual method involving multiple steps. Hopefully, we&#39;ll discuss that later.</p><h3 id="install-a-linux-distro" tabindex="-1">Install a Linux distro <a class="header-anchor" href="#install-a-linux-distro" aria-label="Permalink to &quot;Install a Linux distro&quot;">​</a></h3><p>Once you have the list of available distros for your system, you can use the following command for installation:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --install -d kali-linux</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --install -d kali-linux</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151027725.png" alt="Install a Linux distro in WSL"></p><p>Install a Linux distro in WSL</p><p>This command installs <em>Kali Linux</em> in WSL. Of course, you can replace <em>kali-linux</em> with the name of the distro you want to install. Once installed, Kali Linux will be launched in a terminal.</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151027063.png" alt="Kali Linux in WSL Initial setup"></p><p>Kali Linux in WSL Initial setup</p><h3 id="list-installed-linux-distros" tabindex="-1">List installed Linux distros <a class="header-anchor" href="#list-installed-linux-distros" aria-label="Permalink to &quot;List installed Linux distros&quot;">​</a></h3><p>To see the list of all the Linux distros installed in your system, you can use the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --list --verbose</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --list --verbose</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151027658.png" alt="WSL list verbose"></p><p>WSL list verbose</p><p>You can also use the short-version command <em>wsl -l -v</em>, which will show a list of all the Linux distros installed in your system.</p><p>To list only the instances that are currently running, you can use the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --list --running</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --list --running</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151027032.png" alt="List of only the running instances in WSL"></p><p>List of only the running instances in WSL</p><h3 id="change-the-default-wsl-distro" tabindex="-1">Change the default WSL Distro <a class="header-anchor" href="#change-the-default-wsl-distro" aria-label="Permalink to &quot;Change the default WSL Distro&quot;">​</a></h3><p>Have you noticed a small asterisk (*) right next to the distro name when you run the <em>wsl -l -v</em> command? This asterisk represents the default distro for WSL. The <em>wsl --status</em> command also shows the current default distro. The default distro is the one that runs when you run <em>wsl</em> in a command line without specifying the <em>--distribution (or -d)</em> parameter.</p><p>For example, in my system, <em>docker-desktop</em> is set as the default distro. Changing the default distro to <em>kali-linux</em> can be done with the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --set-default kali-linux</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --set-default kali-linux</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151028309.png" alt="Changing the default distro in WSL"></p><p>Changing the default distro in WSL</p><h3 id="run-and-terminate-linux-distros" tabindex="-1">Run and terminate Linux distros <a class="header-anchor" href="#run-and-terminate-linux-distros" aria-label="Permalink to &quot;Run and terminate Linux distros&quot;">​</a></h3><p>To run any distro and connect to it, you can directly use the following command in PowerShell or the command prompt:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --distribution kali-linux --user surender</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --distribution kali-linux --user surender</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151028243.png" alt="Run and connect a WSL distro with a specific user"></p><p>Run and connect a WSL distro with a specific user</p><p>Run and connect a WSL distro with a specific user.</p><p>After using the above command, you will be directly logged in to the Kali Linux bash shell. The good thing is that your Windows drives are automatically mounted under <em>/mnt</em>, so you can seamlessly transfer the files between Windows and the WSL instance.</p><p>To terminate (or stop) a WSL instance, you can use the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --terminate kali-linux</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --terminate kali-linux</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151028025.png" alt="Terminate or stop a single WSL instance"> Terminate or stop a single WSL instance</p><p>This command stops a particular Linux distro (Kali Linux in this case). If your system has multiple Linux distros that are running, you can use the following command to stop them all at once:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --shutdown</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --shutdown</span></span></code></pre></div><p>[<img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151028797.png" alt="Stop all Linux instances using WSL shutdown"></p><p>Stop all Linux instances using WSL shutdown</p><p>This command immediately stops all the running Linux distros as well as the utility VM.</p><h3 id="change-the-wsl-version" tabindex="-1">Change the WSL version <a class="header-anchor" href="#change-the-wsl-version" aria-label="Permalink to &quot;Change the WSL version&quot;">​</a></h3><p>As mentioned earlier, WSL 1 runs by default after installation. To change the WSL version globally, you can use the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --set-default-version 2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --set-default-version 2</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151028178.png" alt="Set the default WSL version"></p><p>Set the default WSL version</p><p>This command changes the default WSL to <em>WSL 2</em>. If you want to use WSL 1, you can type <em>1</em> instead of <em>2</em> in the command. Setting the default version to WSL 2 means that every Linux distro you will install in this system will be running in WSL 2.</p><p>Apart from changing the WSL version globally, which will affect all future WSL instances, you can set the WSL version specifically for the selected Linux distro. To do this, use the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --set-version kali-linux 1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --set-version kali-linux 1</span></span></code></pre></div><p>This command converts the <em>Kali Linux</em> distro to WSL 1. It could take a while for the conversion process to finish and for the change to be verified; you will see the VERSION column of the <em>wsl -l -v</em> command, as shown in the following image:</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151028175.png" alt="Change the WSL version for a particular distro"></p><p>Change the WSL version for a particular distro</p><p>Please note that the WSL instance will be stopped during the version change process.</p><h3 id="remove-a-linux-distro" tabindex="-1">Remove a Linux distro <a class="header-anchor" href="#remove-a-linux-distro" aria-label="Permalink to &quot;Remove a Linux distro&quot;">​</a></h3><p>To remove or uninstall a Linux distro from WSL, you need to unregister the distro using the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --unregister ubuntu</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --unregister ubuntu</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151028349.png" alt="Unregister a distro from WSL"></p><p>Unregister a distro from WSL</p><p>This command unregisters a Linux distro (Ubuntu in this case). Please note that this command will permanently erase all the data, settings, and applications within that distro.</p><h3 id="mount-a-disk-in-wsl-2" tabindex="-1">Mount a disk in WSL 2 <a class="header-anchor" href="#mount-a-disk-in-wsl-2" aria-label="Permalink to &quot;Mount a disk in WSL 2&quot;">​</a></h3><p>A cool feature available in WSL 2 is the ability to mount disks that are not supported by Windows. Please note that this feature is available only in WSL 2 running on Windows 11 (build 22000 or higher). Furthermore, the Linux distro in which you plan to mount the disk should be running in WSL 2.</p><p>This feature is particularly useful when you want to access the contents of a disk formatted with a Linux file system that is not supported by Windows. To do this, you can mount the disk using the wsl --mount command and then access the contents using WSL.</p><p>A quick overview—Windows can recognize FAT, NTFS, ReFS, exFAT, and a few other file systems, but the <em>EXT3</em> and <em>EXT4</em> file systems are not supported. exFAT is a cross-platform file system that is equally supported on Windows, Linux, and MacOS.</p><p>For demonstration purposes, I just connected a virtual disk formatted with the EXT4 file system. As this disk is formatted in EXT4, Windows won&#39;t recognize it, and nothing will show up in File Explorer.</p><p>To access its contents, we can mount this storage device and make it available for Linux distros. However, before mounting the disk, we need to get the device ID for the particular disk using the following PowerShell command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Get-CimInstance -query &#39;SELECT * from Win32_DiskDrive&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Get-CimInstance -query &#39;SELECT * from Win32_DiskDrive&#39;</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151029844.png" alt="The Get CimInstance command used to obtain the device ID"></p><p>The Get CimInstance command used to obtain the device ID</p><p>Note down the device ID returned by the above command and use it to mount the disk using the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --mount &lt;DeviceID&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --mount &lt;DeviceID&gt;</span></span></code></pre></div><p>This command mounts the specified disk and makes it available to all the Linux distros in WSL. You can use the <em>--bare</em> parameter to make the disk available in WSL without mounting it to all distros. The <em>--type</em> parameter can be used to specify the file system for the disk. If you don&#39;t know the file system, you can skip this parameter.</p><p>The image below displays the commands I used:</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151050019.png" alt="Mount and access a disk in WSL"></p><p>Mount and access a disk in WSL</p><p>After entering the bash terminal, I used the lsblkid command to list the partitions available on the disk. Once I obtained the partition&#39;s name, I mounted the partition inside the <em>/mnt/vdisk/</em> directory using the regular <em>mount</em> command. Following this, I could read the contents of the disk.</p><p>Once you finish accessing the contents and want to unmount the disk, you can use the following command:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --unmount &lt;DeviceID&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --unmount &lt;DeviceID&gt;</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151051392.png" alt="Unmount the disk in WSL"></p><p>Unmount the disk in WSL</p><h3 id="update-the-wsl-linux-kernel" tabindex="-1">Update the WSL Linux kernel <a class="header-anchor" href="#update-the-wsl-linux-kernel" aria-label="Permalink to &quot;Update the WSL Linux kernel&quot;">​</a></h3><p>By default, the WSL Linux kernel will be automatically updated with Windows updates. However, to manually check and update the kernel, you can use the following commands:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --status</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --status</span></span></code></pre></div><p>This command shows the status of WSL, including the default distro name, WSL version, and kernel version.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">wsl --update</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">wsl --update</span></span></code></pre></div><p>This command forcefully checks and updates the kernel version if an update is available.</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151052343.png" alt="Check and update the kernel in WSL"></p><p>Check and update the kernel in WSL</p><h3 id="file-sharing-between-windows-and-the-wsl-distro" tabindex="-1">File sharing between Windows and the WSL distro <a class="header-anchor" href="#file-sharing-between-windows-and-the-wsl-distro" aria-label="Permalink to &quot;File sharing between Windows and the WSL distro&quot;">​</a></h3><p>As mentioned above, your Windows drives are automatically mounted under <em>/mnt</em> inside the Linux distro; hence, you can seamlessly transfer files between Windows and the WSL instance. To transfer files, you should navigate to the mounted drive and start accessing the files as you normally would in the Linux terminal.</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151052699.png" alt="Access Windows drives in WSL"> Access Windows drives in WSL</p><p>If you would like to view the Linux files directly inside Windows File Explorer, you can use the following command in the bash terminal of the Linux distro:</p><p>explorer.exe .</p><p>Please make sure you don&#39;t miss the period (.) at the end of the command.</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151052593.png" alt="Launch File Explorer in WSL"> Launch File Explorer in WSL</p><p>This will open File Explorer in Windows directly inside your current working directory in the Linux distro.</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202405151053740.png" alt="Open File Explorer in WSL"></p>',153),o=[i];function l(r,p,d,c,u,h){return s(),a("div",null,o)}const y=e(t,[["render",l]]);export{g as __pageData,y as default};
