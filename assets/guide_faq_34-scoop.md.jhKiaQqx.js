import{_ as e,o as s,c as o,R as a}from"./chunks/framework.zUbWieqp.js";const y=JSON.parse('{"title":"1. scoop包管理","description":"","frontmatter":{},"headers":[],"relativePath":"guide/faq/34-scoop.md","filePath":"guide/faq/34-scoop.md","lastUpdated":1759588418000}'),t={name:"guide/faq/34-scoop.md"},p=a(`<h1 id="_1-scoop包管理" tabindex="-1">1. scoop包管理 <a class="header-anchor" href="#_1-scoop包管理" aria-label="Permalink to &quot;1. scoop包管理&quot;">​</a></h1><h2 id="_1-1-打开-powershell" tabindex="-1">1.1 打开 PowerShell <a class="header-anchor" href="#_1-1-打开-powershell" aria-label="Permalink to &quot;1.1 打开 PowerShell&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Set-ExecutionPolicy RemoteSigned -scope CurrentUser</span></span>
<span class="line"><span style="color:#e1e4e8;">irm get.scoop.sh | iex</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Set-ExecutionPolicy RemoteSigned -scope CurrentUser</span></span>
<span class="line"><span style="color:#24292e;">irm get.scoop.sh | iex</span></span></code></pre></div><h2 id="_1-2-修改scoop安装路径" tabindex="-1">1.2 修改scoop安装路径 <a class="header-anchor" href="#_1-2-修改scoop安装路径" aria-label="Permalink to &quot;1.2 修改scoop安装路径&quot;">​</a></h2><p>打开 PowerShell</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$env:SCOOP=&#39;D:\\Scoop&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">[environment]::setEnvironmentVariable(&#39;SCOOP&#39;, $env:SCOOP, &#39;User&#39;)</span></span>
<span class="line"><span style="color:#e1e4e8;">irm get.scoop.sh | iex</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$env:SCOOP=&#39;D:\\Scoop&#39;</span></span>
<span class="line"><span style="color:#24292e;">[environment]::setEnvironmentVariable(&#39;SCOOP&#39;, $env:SCOOP, &#39;User&#39;)</span></span>
<span class="line"><span style="color:#24292e;">irm get.scoop.sh | iex</span></span></code></pre></div><h2 id="_1-3-默认安装路径" tabindex="-1">1.3 默认安装路径 <a class="header-anchor" href="#_1-3-默认安装路径" aria-label="Permalink to &quot;1.3 默认安装路径&quot;">​</a></h2><table><thead><tr><th>类型</th><th>路径</th></tr></thead><tbody><tr><td>Scoop 主目录</td><td><code>C:\\Users\\&lt;你的用户名&gt;\\scoop</code></td></tr><tr><td>主软件目录</td><td><code>C:\\Users\\&lt;你的用户名&gt;\\scoop\\apps</code></td></tr><tr><td>全局软件目录（管理员安装）</td><td><code>C:\\ProgramData\\scoop</code></td></tr><tr><td>当前 Bucket（软件源）</td><td><code>C:\\Users\\&lt;你的用户名&gt;\\scoop\\buckets</code></td></tr><tr><td>缓存目录</td><td><code>C:\\Users\\&lt;你的用户名&gt;\\scoop\\cache</code></td></tr><tr><td>shim（命令软链接）目录</td><td><code>C:\\Users\\&lt;你的用户名&gt;\\scoop\\shims</code></td></tr></tbody></table><h1 id="_2-安装案例" tabindex="-1">2. 安装案例 <a class="header-anchor" href="#_2-安装案例" aria-label="Permalink to &quot;2. 安装案例&quot;">​</a></h1><h2 id="_2-1-python" tabindex="-1">2.1 python <a class="header-anchor" href="#_2-1-python" aria-label="Permalink to &quot;2.1 python&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">scoop install python</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">scoop install python</span></span></code></pre></div><p>现象，</p><p>Windows 10/11 自带一个“命令别名”机制：</p><blockquote><p>它会把 <code>python.exe</code> / <code>python3.exe</code> 这两个命令“拦截”并重定向到 Microsoft Store。</p></blockquote><p>所以即使你已经正确安装了 Scoop 的 Python， 系统仍然优先匹配到这个“伪 Python”，导致打开商店。</p><blockquote><p>此方法会彻底删除 Store 的 Python 快捷入口</p><p>Remove-Item &quot;$env:LOCALAPPDATA\\Microsoft\\WindowsApps\\python*.exe&quot;</p></blockquote><h2 id="_2-2-安装pgcli" tabindex="-1">2.2 安装pgcli <a class="header-anchor" href="#_2-2-安装pgcli" aria-label="Permalink to &quot;2.2 安装pgcli&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">scoop install python</span></span>
<span class="line"><span style="color:#e1e4e8;">pip install pgcli</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">scoop install python</span></span>
<span class="line"><span style="color:#24292e;">pip install pgcli</span></span></code></pre></div><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/20251004214455788.gif" alt="image preview of pgcli"></p>`,19),n=[p];function l(c,i,r,d,h,g){return s(),o("div",null,n)}const _=e(t,[["render",l]]);export{y as __pageData,_ as default};
