import{_ as s,o as a,c as n,R as p}from"./chunks/framework.zUbWieqp.js";const F=JSON.parse('{"title":"1.share_buffers","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Database/pgSql/monitor/1-vacuum监控.md","filePath":"guide/Database/pgSql/monitor/1-vacuum监控.md","lastUpdated":1711535325000}'),l={name:"guide/Database/pgSql/monitor/1-vacuum监控.md"},o=p(`<p><a href="https://www.jianshu.com/p/ffee8939e2ed" target="_blank" rel="noreferrer">https://www.jianshu.com/p/ffee8939e2ed</a></p><p><a href="https://blog.csdn.net/qq276726581/article/details/72843773" target="_blank" rel="noreferrer">https://blog.csdn.net/qq276726581/article/details/72843773</a></p><p><a href="https://www.cnblogs.com/ryanzheng/p/9874230.html" target="_blank" rel="noreferrer">https://www.cnblogs.com/ryanzheng/p/9874230.html</a></p><p><a href="https://www.modb.pro/db/28959" target="_blank" rel="noreferrer">https://www.modb.pro/db/28959</a></p><h1 id="_1-share-buffers" tabindex="-1">1.share_buffers <a class="header-anchor" href="#_1-share-buffers" aria-label="Permalink to &quot;1.share_buffers&quot;">​</a></h1><p><strong>四个设置对系统性能有着全局性的影响，建议你在实际环境下通过实测来找到最优值</strong></p><p>share_buffers</p><p>于缓存最近访问过的数据页的内存区大小，所有用户会话均可共享此缓存区</p><p>一般来说越大越好，至少应该达到系统总内存的25%，但不宜超过8GB，因为超过后会出现“边际收益递减”效应。</p><p>需重启postgreSQL服务</p><h1 id="_2-effective-cache-size" tabindex="-1">2.effective_cache_size <a class="header-anchor" href="#_2-effective-cache-size" aria-label="Permalink to &quot;2.effective_cache_size&quot;">​</a></h1><p>一个查询执行过程中可以使用的最大缓存，包括操作系统使用的部分以及PostgreSQL使用部分，系统并不会根据这个值来真实地分配这么多内存，但是规划器会根据这个值来判断系统能否提供查询执行过程中所需的内存。如果将此设置设得过小，远远小于系统真实可用内存量，那么可能会给规划器造成误导，让规划器认为系统可用内存有限，从而选择不使用索引而是走全表扫描（因为使用索引虽然速度快，但需要占用更多的中间内存）。</p><p>在一台专用于运行PostgreSQL数据库服务的服务器上，建议将effective_cache_size的值设为系统总内存的一半或者更多。</p><p>此设置可动态生效，执行重新加载即可</p><h1 id="_3-work-mem" tabindex="-1">3.work_mem <a class="header-anchor" href="#_3-work-mem" aria-label="Permalink to &quot;3.work_mem&quot;">​</a></h1><p>此设置指定了用于执行排序，哈希关联，表扫描等操作的最大内存量。</p><p>此设置可动态生效，执行重新加载即可</p><h1 id="_4-mintenance-work-mem" tabindex="-1">4.mintenance_work_mem <a class="header-anchor" href="#_4-mintenance-work-mem" aria-label="Permalink to &quot;4.mintenance_work_mem&quot;">​</a></h1><p>此设置指定可用于vaccum操作（即清空已标记为“被删除”状态的记录）这类系统内部维护操作的内存总量。</p><p>其值不应大于1GB</p><p>此设置可动态生效，执行重新加载即可</p><h2 id="修改参数命令" tabindex="-1">修改参数命令 <a class="header-anchor" href="#修改参数命令" aria-label="Permalink to &quot;修改参数命令&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">postgres</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">#</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">alter</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">system</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">work_mem=</span><span style="color:#79B8FF;">8192</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">ALTER</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">SYSTEM</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">设置重新加载命令</span></span>
<span class="line"><span style="color:#E1E4E8;">postgres</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">#select</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">pg_reload_conf</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">postgres</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">#</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">alter</span><span style="color:#24292E;"> </span><span style="color:#032F62;">system</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set</span><span style="color:#24292E;"> </span><span style="color:#032F62;">work_mem=</span><span style="color:#005CC5;">8192</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">ALTER</span><span style="color:#24292E;"> </span><span style="color:#032F62;">SYSTEM</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">设置重新加载命令</span></span>
<span class="line"><span style="color:#24292E;">postgres</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">#select</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">pg_reload_conf</span><span style="color:#24292E;">();</span></span></code></pre></div><h1 id="_5-vacuum监控和调优" tabindex="-1">5,<strong>vacuum监控和调优</strong> <a class="header-anchor" href="#_5-vacuum监控和调优" aria-label="Permalink to &quot;5,**vacuum监控和调优**&quot;">​</a></h1><h2 id="_5-1-监控" tabindex="-1">5.1 监控 <a class="header-anchor" href="#_5-1-监控" aria-label="Permalink to &quot;5.1 监控&quot;">​</a></h2><h3 id="_5-1-1dead-tuple" tabindex="-1">5.1.1dead tuple <a class="header-anchor" href="#_5-1-1dead-tuple" aria-label="Permalink to &quot;5.1.1dead tuple&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 死行的存在会导致表持续膨胀，相应的查询也会变慢，所以需要持续关注表中dead tuple的状况</span></span>
<span class="line"><span style="color:#E1E4E8;">postgres@postgres</span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">select</span><span style="color:#E1E4E8;"> relname,n_dead_tup,n_live_tup </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pg_stat_user_tables;</span></span>
<span class="line"><span style="color:#E1E4E8;"> relname | n_dead_tup | n_live_tup </span></span>
<span class="line"><span style="color:#6A737D;">---------+------------+------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> job     |          </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> |          </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;"> emp1    |          </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> |          </span><span style="color:#79B8FF;">7</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">postgres@postgres</span><span style="color:#F97583;">=&gt;select</span><span style="color:#E1E4E8;"> relname,</span><span style="color:#79B8FF;">coalesce</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">round</span><span style="color:#E1E4E8;">(n_dead_tup </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">when</span><span style="color:#E1E4E8;"> n_live_tup </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> n_dead_tup </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">then</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> n_live_tup </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> n_dead_tup </span><span style="color:#F97583;">end</span><span style="color:#E1E4E8;"> ),</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">),</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">00</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> dead_tup_ratio </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pg_stat_user_tables </span><span style="color:#F97583;">order by</span><span style="color:#E1E4E8;"> dead_tup_ratio </span><span style="color:#F97583;">desc</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">limit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> relname | dead_tup_ratio </span></span>
<span class="line"><span style="color:#6A737D;">---------+----------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> job     |         </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">00</span></span>
<span class="line"><span style="color:#E1E4E8;"> emp1    |           </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">00</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">rows</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 死行的存在会导致表持续膨胀，相应的查询也会变慢，所以需要持续关注表中dead tuple的状况</span></span>
<span class="line"><span style="color:#24292E;">postgres@postgres</span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">select</span><span style="color:#24292E;"> relname,n_dead_tup,n_live_tup </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pg_stat_user_tables;</span></span>
<span class="line"><span style="color:#24292E;"> relname | n_dead_tup | n_live_tup </span></span>
<span class="line"><span style="color:#6A737D;">---------+------------+------------</span></span>
<span class="line"><span style="color:#24292E;"> job     |          </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> |          </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;"> emp1    |          </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> |          </span><span style="color:#005CC5;">7</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">postgres@postgres</span><span style="color:#D73A49;">=&gt;select</span><span style="color:#24292E;"> relname,</span><span style="color:#005CC5;">coalesce</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">round</span><span style="color:#24292E;">(n_dead_tup </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">when</span><span style="color:#24292E;"> n_live_tup </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> n_dead_tup </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">then</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> n_live_tup </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> n_dead_tup </span><span style="color:#D73A49;">end</span><span style="color:#24292E;"> ),</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">),</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">00</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> dead_tup_ratio </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pg_stat_user_tables </span><span style="color:#D73A49;">order by</span><span style="color:#24292E;"> dead_tup_ratio </span><span style="color:#D73A49;">desc</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">limit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;"> relname | dead_tup_ratio </span></span>
<span class="line"><span style="color:#6A737D;">---------+----------------</span></span>
<span class="line"><span style="color:#24292E;"> job     |         </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">00</span></span>
<span class="line"><span style="color:#24292E;"> emp1    |           </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">00</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">rows</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="_5-1-2tuple的空间" tabindex="-1">5.1.2tuple的空间 <a class="header-anchor" href="#_5-1-2tuple的空间" aria-label="Permalink to &quot;5.1.2tuple的空间&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">postgres@postgres</span><span style="color:#F97583;">=&gt;select</span><span style="color:#E1E4E8;"> relname,relpages </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> reltuples </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> per_tuple_page </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pg_class </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> reltuples</span><span style="color:#F97583;">!=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    relname                    |    per_tuple_page     </span></span>
<span class="line"><span style="color:#6A737D;">-----------------------------------------------+-----------------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> jobid_seq                                     |                     </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;"> pg_statistic                                  |  </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">045023696682464455</span></span>
<span class="line"><span style="color:#E1E4E8;"> pg_type                                       |  </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">024630541871921183</span></span>
<span class="line"><span style="color:#E1E4E8;"> pg_toast_2618                                 |    </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">2289156626506024</span></span>
<span class="line"><span style="color:#E1E4E8;"> pg_toast_2618_index                           |  </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">008032128514056224</span></span>
<span class="line"><span style="color:#E1E4E8;"> pg_toast_2619                                 |   </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">23076923076923078</span></span>
<span class="line"><span style="color:#E1E4E8;">.......</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">postgres@postgres</span><span style="color:#F97583;">=&gt;select</span><span style="color:#E1E4E8;"> relname,reltuples </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> relpages </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> per_page_tuple </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pg_class </span><span style="color:#F97583;">where</span><span style="color:#E1E4E8;"> reltuples</span><span style="color:#F97583;">!=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">                    relname                    |   per_page_tuple   </span></span>
<span class="line"><span style="color:#6A737D;">-----------------------------------------------+--------------------</span></span>
<span class="line"><span style="color:#E1E4E8;"> jobid_seq                                     |                  </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;"> pg_statistic                                  | </span><span style="color:#79B8FF;">22</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">210526315789473</span></span>
<span class="line"><span style="color:#E1E4E8;"> pg_type                                       |               </span><span style="color:#79B8FF;">40</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">6</span></span>
<span class="line"><span style="color:#E1E4E8;"> pg_toast_2618                                 |  </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">368421052631579</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">postgres@postgres</span><span style="color:#D73A49;">=&gt;select</span><span style="color:#24292E;"> relname,relpages </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> reltuples </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> per_tuple_page </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pg_class </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> reltuples</span><span style="color:#D73A49;">!=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                    relname                    |    per_tuple_page     </span></span>
<span class="line"><span style="color:#6A737D;">-----------------------------------------------+-----------------------</span></span>
<span class="line"><span style="color:#24292E;"> jobid_seq                                     |                     </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;"> pg_statistic                                  |  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">045023696682464455</span></span>
<span class="line"><span style="color:#24292E;"> pg_type                                       |  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">024630541871921183</span></span>
<span class="line"><span style="color:#24292E;"> pg_toast_2618                                 |    </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">2289156626506024</span></span>
<span class="line"><span style="color:#24292E;"> pg_toast_2618_index                           |  </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">008032128514056224</span></span>
<span class="line"><span style="color:#24292E;"> pg_toast_2619                                 |   </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">23076923076923078</span></span>
<span class="line"><span style="color:#24292E;">.......</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">postgres@postgres</span><span style="color:#D73A49;">=&gt;select</span><span style="color:#24292E;"> relname,reltuples </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> relpages </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> per_page_tuple </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pg_class </span><span style="color:#D73A49;">where</span><span style="color:#24292E;"> reltuples</span><span style="color:#D73A49;">!=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">                    relname                    |   per_page_tuple   </span></span>
<span class="line"><span style="color:#6A737D;">-----------------------------------------------+--------------------</span></span>
<span class="line"><span style="color:#24292E;"> jobid_seq                                     |                  </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;"> pg_statistic                                  | </span><span style="color:#005CC5;">22</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">210526315789473</span></span>
<span class="line"><span style="color:#24292E;"> pg_type                                       |               </span><span style="color:#005CC5;">40</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">6</span></span>
<span class="line"><span style="color:#24292E;"> pg_toast_2618                                 |  </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">368421052631579</span></span></code></pre></div><h3 id="_5-1-3pgstattuple" tabindex="-1">5.1.3pgstattuple <a class="header-anchor" href="#_5-1-3pgstattuple" aria-label="Permalink to &quot;5.1.3pgstattuple&quot;">​</a></h3><p>pgstattuple模块提供了各种功能来获取元组级别的统计信息。</p><p>参考<a href="https://www.PostgreSQL.org/docs/current/pgstattuple.html" target="_blank" rel="noreferrer">https://www.PostgreSQL.org/docs/current/pgstattuple.html</a></p><p><a href="https://www.modb.pro/db/26061" target="_blank" rel="noreferrer">https://www.modb.pro/db/26061</a></p>`,33),e=[o];function t(r,c,y,E,i,_){return a(),n("div",null,e)}const u=s(l,[["render",t]]);export{F as __pageData,u as default};
