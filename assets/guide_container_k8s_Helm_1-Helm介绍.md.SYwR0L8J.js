import{_ as e,o as l,c as a,R as t}from"./chunks/framework.zUbWieqp.js";const g=JSON.parse('{"title":"1. 什么是 Helm","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/k8s/Helm/1-Helm介绍.md","filePath":"guide/container/k8s/Helm/1-Helm介绍.md","lastUpdated":1720533756000}'),r={name:"guide/container/k8s/Helm/1-Helm介绍.md"},s=t('<h1 id="_1-什么是-helm" tabindex="-1">1. 什么是 Helm <a class="header-anchor" href="#_1-什么是-helm" aria-label="Permalink to &quot;1. 什么是 Helm&quot;">​</a></h1><h2 id="_1-1-概述" tabindex="-1">1.1 概述 <a class="header-anchor" href="#_1-1-概述" aria-label="Permalink to &quot;1.1 概述&quot;">​</a></h2><p>Helm 是 Kubernetes 应用程序的包管理器,和redhat中yum 管理包类似.</p><h2 id="_1-2-helm-发展" tabindex="-1">1.2 helm 发展 <a class="header-anchor" href="#_1-2-helm-发展" aria-label="Permalink to &quot;1.2 helm 发展&quot;">​</a></h2><p><code>Helm 2</code> 主要采用客户端-服务器架构，由客户端和集群内服务器组成</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407091430503.png" alt="image-20240709143039425"></p><ul><li>Tiller Server：Helm 通过安装在 Kubernetes 集群中的 Tiller Server 管理 Kubernetes 应用程序。 Tiller 与 Kubernetes API 服务器交互以安装、升级、查询和删除 Kubernetes 资源。</li><li>Helm 客户端：Helm 为用户提供了使用 Helm Charts 的命令行界面。它负责与 Tiller 服务器交互以执行安装、升级和回滚chart等各种操作</li></ul><p><code>Helm 3</code> 2019年发布,已转向完全仅客户端的架构，其中集群内服务器已被删除：</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407091430791.png" alt="image-20240709143055848"></p><p>Helm 3 中的客户端工作方式几乎相同，但直接与 Kubernetes API 服务器而不是 Tiller 服务器交互。这一举措简化了 Helm 的架构，并使其能够利用 Kubernetes 用户集群的安全性.</p><h2 id="_1-3-helm特点" tabindex="-1">1.3 helm特点 <a class="header-anchor" href="#_1-3-helm特点" aria-label="Permalink to &quot;1.3 helm特点&quot;">​</a></h2><ul><li><strong>简化部署</strong> ：Helm允许使用单个命令轻松部署和管理应用程序，从而简化了整个部署过程；</li><li><strong>高度可配置</strong>：Helm Charts提供了高度可配置的选项，可以轻松自定义和修改应用程序的部署配置；</li><li><strong>版本控制</strong> ：Helm允许管理应用程序的多个版本，从而轻松实现版本控制和回滚；</li><li><strong>模板化</strong>：Helm Charts使用YAML模板来定义Kubernetes对象的配置，从而简化了配置过程，并提高了可重复性和可扩展性；</li><li><strong>应用程序库</strong>：Helm具有应用程序库的概念，可以轻松地共享和重用Helm Charts，从而简化了多个应用程序的部署和管理；</li><li><strong>插件系统</strong>：Helm拥有一个强大的插件系统，允许您扩展和定制Helm的功能，以满足特定的需求和要求。</li></ul><h2 id="_1-4-架构图v3" tabindex="-1">1.4 架构图v3 <a class="header-anchor" href="#_1-4-架构图v3" aria-label="Permalink to &quot;1.4 架构图v3&quot;">​</a></h2><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202407082301500.png" alt="image-20240708230102875"></p>',14),n=[s];function i(o,m,h,c,_,d){return l(),a("div",null,n)}const p=e(r,[["render",i]]);export{g as __pageData,p as default};
