import{_ as n,o as e,c as a,R as t}from"./chunks/framework.zUbWieqp.js";const u=JSON.parse('{"title":"1. Containerd启动容器涉及的模块","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/containerd/1-Containerd.md","filePath":"guide/container/containerd/1-Containerd.md","lastUpdated":1732616842000}'),r={name:"guide/container/containerd/1-Containerd.md"},o=t('<h1 id="_1-containerd启动容器涉及的模块" tabindex="-1">1. Containerd启动容器涉及的模块 <a class="header-anchor" href="#_1-containerd启动容器涉及的模块" aria-label="Permalink to &quot;1. Containerd启动容器涉及的模块&quot;">​</a></h1><p>单从containerd的角度来看启动一个容器的过程大致是下图所示的流程:</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202411091949740.png" alt="containerd-run-container-1.png"></p><p>从containerd作为k8s的容器运行时来看，启动一个容器的过程大致是下图所示流程:</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202411091949407.png" alt="containerd-run-container-2.png"></p><p>containerd实现了k8s的CRI接口，提供容器运行时核心功能，如镜像管理、容器管理等，当前containerd实现CRI接口的代码位于containerd代码的<a href="https://github.com/containerd/containerd/tree/master/pkg/cri" target="_blank" rel="noreferrer">pkg/cri</a> 包下。 也就是说containerd同样是一个k8s CRI的实现，可以使用k8s提供的<a href="https://github.com/kubernetes-sigs/cri-tools" target="_blank" rel="noreferrer">cri-tools </a>中的<code>crictl</code>命令行工具与containerd的CRI实现交互。</p><h1 id="_2-container发布" tabindex="-1">2. Container发布 <a class="header-anchor" href="#_2-container发布" aria-label="Permalink to &quot;2. Container发布&quot;">​</a></h1><h2 id="_2-1-发布2-0-0" tabindex="-1">2.1 发布2.0.0 <a class="header-anchor" href="#_2-1-发布2-0-0" aria-label="Permalink to &quot;2.1 发布2.0.0&quot;">​</a></h2><p><a href="https://github.com/containerd/containerd/releases/tag/v2.0.0" target="_blank" rel="noreferrer">https://github.com/containerd/containerd/releases/tag/v2.0.0</a></p><p>发布时间2024-11</p><p>特点：</p>',11),i=[o];function c(s,d,p,h,l,_){return e(),a("div",null,i)}const m=n(r,[["render",c]]);export{u as __pageData,m as default};
