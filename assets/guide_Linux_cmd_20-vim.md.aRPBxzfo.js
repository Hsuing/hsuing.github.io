import{_ as t,o as d,c as a,R as e}from"./chunks/framework.zUbWieqp.js";const v=JSON.parse('{"title":"1. vim命令大全","description":"","frontmatter":{},"headers":[],"relativePath":"guide/Linux/cmd/20-vim.md","filePath":"guide/Linux/cmd/20-vim.md","lastUpdated":1733304370000}'),r={name:"guide/Linux/cmd/20-vim.md"},i=e('<h1 id="_1-vim命令大全" tabindex="-1">1. vim命令大全 <a class="header-anchor" href="#_1-vim命令大全" aria-label="Permalink to &quot;1. vim命令大全&quot;">​</a></h1><h2 id="_1-1-快捷键" tabindex="-1">1.1 快捷键 <a class="header-anchor" href="#_1-1-快捷键" aria-label="Permalink to &quot;1.1 快捷键&quot;">​</a></h2><table><thead><tr><th><strong>快捷键</strong></th><th>功能描述</th></tr></thead><tbody><tr><td>p</td><td>将剪贴板中的内容粘贴到光标后</td></tr><tr><td>P（大写）</td><td>将剪贴板中的内容粘贴到光标前</td></tr><tr><td>y</td><td>复制已选中的文本到剪贴板</td></tr><tr><td>yy</td><td>将光标所在行复制到剪贴板，此命令前可以加数字 n，可复制多行</td></tr><tr><td>yw</td><td>将光标位置的单词复制到剪贴板</td></tr><tr><td>x</td><td>删除光标所在位置的字符</td></tr><tr><td>dd</td><td>删除光标所在行</td></tr><tr><td>ndd</td><td>删除当前行（包括此行）后 n 行文本</td></tr><tr><td>dG</td><td>删除光标所在行一直到文件末尾的所有内容</td></tr><tr><td>D</td><td>删除光标位置到行尾的内容</td></tr><tr><td>vim filename</td><td>打开或新建一个文件，并将光标置于第一行的首部</td></tr><tr><td>vim -r filename</td><td>恢复</td></tr><tr><td>vim -R filename</td><td>把指定的文件以只读方式放入 Vim 编辑器中</td></tr><tr><td>vim + filename</td><td>打开文件，并将光标置于最后一行的首部</td></tr><tr><td>vi +n filename</td><td>打开文件，并将光标置于第 n 行的首部</td></tr><tr><td>vi +/pattern filename</td><td>打幵文件，并将光标置于第一个与 pattern 匹配的位置</td></tr><tr><td>vi -c command</td><td>在对文件进行编辑前，先执行指定的命令</td></tr><tr><td>i</td><td>在当前光标所在位置插入随后输入的文本，光标后的文本相应向右移动</td></tr><tr><td>I</td><td>在光标所在行的行首插入随后输入的文本，行首是该行的第一个非空白字符，相当于光标移动到行首执行 i 命令</td></tr><tr><td>o</td><td>在光标所在行的下面插入新的一行。光标停在空行首，等待输入文本</td></tr><tr><td>O（大写）</td><td>在光标所在行的上面插入新的一行。光标停在空行的行首，等待输入文本</td></tr><tr><td>a</td><td>在当前光标所在位置之后插入随后输入的文本</td></tr><tr><td>A</td><td>在光标所在行的行尾插入随后输入的文本，相当于光标移动到行尾再执行 a 命令</td></tr><tr><td>/abc</td><td>从光标所在位置向前查找字符串 abc</td></tr><tr><td>/^abc</td><td>查找以 abc 为行首的行</td></tr><tr><td>/abc$</td><td>查找以 abc 为行尾的行</td></tr><tr><td>?abc</td><td>从光标所在为主向后查找字符串 abc</td></tr><tr><td>n</td><td>向同一方向重复上次的查找指令</td></tr><tr><td>N</td><td>向相反方向重复上次的查找指定</td></tr><tr><td>r</td><td>替换光标所在位置的字符</td></tr><tr><td>R</td><td>从光标所在位置开始替换字符，其输入内容会覆盖掉后面等长的文本内容，按“Esc”可以结束</td></tr><tr><td>/a1/a2/g</td><td>将当前光标所在行中的所有 a1 用 a2 替换</td></tr><tr><td>:n1,n2s/a1/a2/g</td><td>将文件中 n1 到 n2 行中所有 a1 都用 a2 替换</td></tr><tr><td>:g/a1/a2/g</td><td>将文件中所有的 a1 都用 a2 替换</td></tr><tr><td>:wq</td><td>保存并退出 Vim 编辑器</td></tr><tr><td>:wq!</td><td>保存并强制退出 Vim 编辑器</td></tr><tr><td>:q</td><td>不保存就退出 Vim 编辑器</td></tr><tr><td>:q!</td><td>不保存，且强制退出 Vim 编辑器</td></tr><tr><td>:w</td><td>保存但是不退出 Vim 编辑器</td></tr><tr><td>:w!</td><td>强制保存文本</td></tr><tr><td>:w</td><td>filename 另存到 filename 文件</td></tr><tr><td>x!</td><td>保存文本，并退出 Vim 编辑器，更通用的一个 vim 命令</td></tr></tbody></table><h2 id="_1-2-vim常用模式" tabindex="-1">1.2 vim常用模式 <a class="header-anchor" href="#_1-2-vim常用模式" aria-label="Permalink to &quot;1.2 vim常用模式&quot;">​</a></h2><h3 id="_1-vim的命令模式" tabindex="-1">1.Vim的命令模式 <a class="header-anchor" href="#_1-vim的命令模式" aria-label="Permalink to &quot;1.Vim的命令模式&quot;">​</a></h3><p>用 Vim 编辑文件时，默认处于命令模式。此模式下，可使用方向键（上、下、左、右键）或 k、j、h、i 移动光标的位置，还可以对文件内容进行复制、粘贴、替换、删除等操作。</p><h3 id="_2-vim的输入模式" tabindex="-1">2.Vim的输入模式 <a class="header-anchor" href="#_2-vim的输入模式" aria-label="Permalink to &quot;2.Vim的输入模式&quot;">​</a></h3><ul><li>在输入模式下，Vim 可以对文件执行写操作，类似于在 Windows 系统的文档中输入内容。</li><li>使 Vim 进行输入模式的方式是在命令模式状态下输入 i、I、a、A、o、O 等插入命令（各指令的具体功能如表 3 所示），当编辑文件完成后按 Esc 键即可返回命令模式。</li></ul><h3 id="_3-vim-的编辑模式" tabindex="-1">3.Vim 的编辑模式 <a class="header-anchor" href="#_3-vim-的编辑模式" aria-label="Permalink to &quot;3.Vim 的编辑模式&quot;">​</a></h3><ul><li>编辑模式用于对文件中的指定内容执行保存、查找或替换等操作。</li><li>使 Vim 切换到编辑模式的方法是在命令模式状态下按“：”键，此时 Vim 窗口的左下方出现一个“：”符号，这是就可以输入相关指令进行操作了。</li></ul><h2 id="_1-2-删除" tabindex="-1">1.2 删除 <a class="header-anchor" href="#_1-2-删除" aria-label="Permalink to &quot;1.2 删除&quot;">​</a></h2><ul><li>删除以#开头的注释</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">g/^#/d</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">g/^#/d</span></span></code></pre></div><ul><li>删除空行</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">g/^\\s*$/d</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">g/^\\s*$/d</span></span></code></pre></div><ul><li>删除#后面的行</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">g/#.*/d</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">g/#.*/d</span></span></code></pre></div><ul><li>vim删除所有内容</li></ul><ol><li>切换到命令模式输入：之后的命令 <code>:%d</code></li><li>不管光标在哪里，删除所有 gg dG</li></ol><blockquote><p>gg的意思是光标切换到第一行</p></blockquote><h2 id="_1-3-替换" tabindex="-1">1.3 替换 <a class="header-anchor" href="#_1-3-替换" aria-label="Permalink to &quot;1.3 替换&quot;">​</a></h2><ul><li>vim批量替换</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">:%s/source_pattern/target_pattern/g</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">:%s/source_pattern/target_pattern/g</span></span></code></pre></div>',23),l=[i];function s(n,o,c,p,h,m){return d(),a("div",null,l)}const g=t(r,[["render",s]]);export{v as __pageData,g as default};
