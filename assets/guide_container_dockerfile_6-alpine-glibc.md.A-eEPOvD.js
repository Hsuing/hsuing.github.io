import{_ as s,o as a,c as n,R as p}from"./chunks/framework.zUbWieqp.js";const A=JSON.parse('{"title":"1.基于alpine的glibc基础镜像","description":"","frontmatter":{},"headers":[],"relativePath":"guide/container/dockerfile/6-alpine-glibc.md","filePath":"guide/container/dockerfile/6-alpine-glibc.md","lastUpdated":1731157838000}'),l={name:"guide/container/dockerfile/6-alpine-glibc.md"},e=p(`<h1 id="_1-基于alpine的glibc基础镜像" tabindex="-1">1.基于alpine的glibc基础镜像 <a class="header-anchor" href="#_1-基于alpine的glibc基础镜像" aria-label="Permalink to &quot;1.基于alpine的glibc基础镜像&quot;">​</a></h1><p>实际上我们基于<a href="https://github.com/sgerrand/alpine-pkg-glibc" target="_blank" rel="noreferrer">https://github.com/sgerrand/alpine-pkg-glibc</a> 这个项目，从官方的alpine镜像构建出了alpine-glibc作为我们的基础镜像。alpine-glibc基础镜像参考了<a href="https://github.com/Docker-Hub-frolvlad/docker-alpine-glibc/blob/master/Dockerfile" target="_blank" rel="noreferrer">https://github.com/Docker-Hub-frolvlad/docker-alpine-glibc/blob/master/Dockerfile</a> 这个Dockerfile。我们在这个Dockerfile的基础上加了一层对时区的定制，将时区修改为中国时区。</p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> alpine:3.14</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">ENV</span><span style="color:#E1E4E8;"> LANG=C.UTF-8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Here we install GNU libc (aka glibc) and set C.UTF-8 locale as default.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">RUN</span><span style="color:#E1E4E8;"> sed -i </span><span style="color:#9ECBFF;">&#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#39;</span><span style="color:#E1E4E8;"> /etc/apk/repositories &amp;&amp;\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    ALPINE_GLIBC_BASE_URL=</span><span style="color:#9ECBFF;">&quot;https://github.com/sgerrand/alpine-pkg-glibc/releases/download&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    ALPINE_GLIBC_PACKAGE_VERSION=</span><span style="color:#9ECBFF;">&quot;2.33-r0&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    ALPINE_GLIBC_BASE_PACKAGE_FILENAME=</span><span style="color:#9ECBFF;">&quot;glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    ALPINE_GLIBC_BIN_PACKAGE_FILENAME=</span><span style="color:#9ECBFF;">&quot;glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    ALPINE_GLIBC_I18N_PACKAGE_FILENAME=</span><span style="color:#9ECBFF;">&quot;glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk add --no-cache --virtual=.build-dependencies wget ca-certificates &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    echo \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;-----BEGIN PUBLIC KEY-----\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        1QIDAQAB\\</span></span>
<span class="line"><span style="color:#9ECBFF;">        -----END PUBLIC KEY-----&quot;</span><span style="color:#E1E4E8;"> | sed </span><span style="color:#9ECBFF;">&#39;s/   */</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">/g&#39;</span><span style="color:#E1E4E8;"> &gt; </span><span style="color:#9ECBFF;">&quot;/etc/apk/keys/sgerrand.rsa.pub&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    wget \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk add --no-cache \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BASE_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BIN_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_I18N_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    rm </span><span style="color:#9ECBFF;">&quot;/etc/apk/keys/sgerrand.rsa.pub&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 </span><span style="color:#9ECBFF;">&quot;$LANG&quot;</span><span style="color:#E1E4E8;"> || true &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    echo </span><span style="color:#9ECBFF;">&quot;export LANG=$LANG&quot;</span><span style="color:#E1E4E8;"> &gt; /etc/profile.d/locale.sh &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk del glibc-i18n &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    rm </span><span style="color:#9ECBFF;">&quot;/root/.wget-hsts&quot;</span><span style="color:#E1E4E8;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk del .build-dependencies &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    rm \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BASE_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_BIN_PACKAGE_FILENAME&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;$ALPINE_GLIBC_I18N_PACKAGE_FILENAME&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">RUN</span><span style="color:#E1E4E8;"> apk update --no-cache &amp;&amp; apk add ca-certificates --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk add tzdata --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    echo </span><span style="color:#9ECBFF;">&quot;Asia/Shanghai&quot;</span><span style="color:#E1E4E8;"> &gt; /etc/timezone</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> alpine:3.14</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">ENV</span><span style="color:#24292E;"> LANG=C.UTF-8</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Here we install GNU libc (aka glibc) and set C.UTF-8 locale as default.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">RUN</span><span style="color:#24292E;"> sed -i </span><span style="color:#032F62;">&#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#39;</span><span style="color:#24292E;"> /etc/apk/repositories &amp;&amp;\\</span></span>
<span class="line"><span style="color:#24292E;">    ALPINE_GLIBC_BASE_URL=</span><span style="color:#032F62;">&quot;https://github.com/sgerrand/alpine-pkg-glibc/releases/download&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    ALPINE_GLIBC_PACKAGE_VERSION=</span><span style="color:#032F62;">&quot;2.33-r0&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    ALPINE_GLIBC_BASE_PACKAGE_FILENAME=</span><span style="color:#032F62;">&quot;glibc-$ALPINE_GLIBC_PACKAGE_VERSION.apk&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    ALPINE_GLIBC_BIN_PACKAGE_FILENAME=</span><span style="color:#032F62;">&quot;glibc-bin-$ALPINE_GLIBC_PACKAGE_VERSION.apk&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    ALPINE_GLIBC_I18N_PACKAGE_FILENAME=</span><span style="color:#032F62;">&quot;glibc-i18n-$ALPINE_GLIBC_PACKAGE_VERSION.apk&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    apk add --no-cache --virtual=.build-dependencies wget ca-certificates &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    echo \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;-----BEGIN PUBLIC KEY-----\\</span></span>
<span class="line"><span style="color:#032F62;">        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApZ2u1KJKUu/fW4A25y9m\\</span></span>
<span class="line"><span style="color:#032F62;">        y70AGEa/J3Wi5ibNVGNn1gT1r0VfgeWd0pUybS4UmcHdiNzxJPgoWQhV2SSW1JYu\\</span></span>
<span class="line"><span style="color:#032F62;">        tOqKZF5QSN6X937PTUpNBjUvLtTQ1ve1fp39uf/lEXPpFpOPL88LKnDBgbh7wkCp\\</span></span>
<span class="line"><span style="color:#032F62;">        m2KzLVGChf83MS0ShL6G9EQIAUxLm99VpgRjwqTQ/KfzGtpke1wqws4au0Ab4qPY\\</span></span>
<span class="line"><span style="color:#032F62;">        KXvMLSPLUp7cfulWvhmZSegr5AdhNw5KNizPqCJT8ZrGvgHypXyiFvvAH5YRtSsc\\</span></span>
<span class="line"><span style="color:#032F62;">        Zvo9GI2e2MaZyo9/lvb+LbLEJZKEQckqRj4P26gmASrZEPStwc+yqy1ShHLA0j6m\\</span></span>
<span class="line"><span style="color:#032F62;">        1QIDAQAB\\</span></span>
<span class="line"><span style="color:#032F62;">        -----END PUBLIC KEY-----&quot;</span><span style="color:#24292E;"> | sed </span><span style="color:#032F62;">&#39;s/   */</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">/g&#39;</span><span style="color:#24292E;"> &gt; </span><span style="color:#032F62;">&quot;/etc/apk/keys/sgerrand.rsa.pub&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    wget \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BASE_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_BIN_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BASE_URL/$ALPINE_GLIBC_PACKAGE_VERSION/$ALPINE_GLIBC_I18N_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    apk add --no-cache \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BASE_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BIN_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_I18N_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    \\</span></span>
<span class="line"><span style="color:#24292E;">    rm </span><span style="color:#032F62;">&quot;/etc/apk/keys/sgerrand.rsa.pub&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    /usr/glibc-compat/bin/localedef --force --inputfile POSIX --charmap UTF-8 </span><span style="color:#032F62;">&quot;$LANG&quot;</span><span style="color:#24292E;"> || true &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    echo </span><span style="color:#032F62;">&quot;export LANG=$LANG&quot;</span><span style="color:#24292E;"> &gt; /etc/profile.d/locale.sh &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    \\</span></span>
<span class="line"><span style="color:#24292E;">    apk del glibc-i18n &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    \\</span></span>
<span class="line"><span style="color:#24292E;">    rm </span><span style="color:#032F62;">&quot;/root/.wget-hsts&quot;</span><span style="color:#24292E;"> &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    apk del .build-dependencies &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    rm \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BASE_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_BIN_PACKAGE_FILENAME&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;$ALPINE_GLIBC_I18N_PACKAGE_FILENAME&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">RUN</span><span style="color:#24292E;"> apk update --no-cache &amp;&amp; apk add ca-certificates --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    apk add tzdata --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    echo </span><span style="color:#032F62;">&quot;Asia/Shanghai&quot;</span><span style="color:#24292E;"> &gt; /etc/timezone</span></span></code></pre></div><h2 id="_1-1分解" tabindex="-1">1.1分解 <a class="header-anchor" href="#_1-1分解" aria-label="Permalink to &quot;1.1分解&quot;">​</a></h2><h3 id="_1-label指令" tabindex="-1">1.Label指令 <a class="header-anchor" href="#_1-label指令" aria-label="Permalink to &quot;1.Label指令&quot;">​</a></h3><p>建议通过Label指令来为镜像添加元数据信息，添加多个label建议只使用一个Label指令，采用下面的形式:</p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">LABEL</span><span style="color:#E1E4E8;"> multi.label1=</span><span style="color:#9ECBFF;">&quot;value1&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">      multi.label2=</span><span style="color:#9ECBFF;">&quot;value2&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">      other=</span><span style="color:#9ECBFF;">&quot;value3&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">LABEL</span><span style="color:#24292E;"> multi.label1=</span><span style="color:#032F62;">&quot;value1&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">      multi.label2=</span><span style="color:#032F62;">&quot;value2&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">      other=</span><span style="color:#032F62;">&quot;value3&quot;</span></span></code></pre></div><p>为镜像加入维护者信息现在也推荐使用Label指令，而不是过去已经<code>废弃的MAINTAINER</code>指令:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">LABEL org.opencontainers.image.authors=&quot;han&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">LABEL org.opencontainers.image.authors=&quot;han&quot;</span></span></code></pre></div><h3 id="_2-run指令" tabindex="-1">2.RUN指令 <a class="header-anchor" href="#_2-run指令" aria-label="Permalink to &quot;2.RUN指令&quot;">​</a></h3><p>当RUN指令后边的命令太长时，可以将命令拆成多行，这样Dockerfile就保持了良好的可读性:</p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">RUN</span><span style="color:#E1E4E8;"> apk update --no-cache &amp;&amp; apk add ca-certificates --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk add tzdata --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    echo </span><span style="color:#9ECBFF;">&quot;Asia/Shanghai&quot;</span><span style="color:#E1E4E8;"> &gt; /etc/timezone</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">RUN</span><span style="color:#24292E;"> apk update --no-cache &amp;&amp; apk add ca-certificates --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    apk add tzdata --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    echo </span><span style="color:#032F62;">&quot;Asia/Shanghai&quot;</span><span style="color:#24292E;"> &gt; /etc/timezone</span></span></code></pre></div><h3 id="_3-alpine包管理工具apk使用" tabindex="-1">3.alpine包管理工具apk使用 <a class="header-anchor" href="#_3-alpine包管理工具apk使用" aria-label="Permalink to &quot;3.alpine包管理工具apk使用&quot;">​</a></h3><p>RUN指令使用apk安装软件时注意使用<code>--no-cache</code>，避免缓存保留到镜像的层中使镜像变得臃肿。 另外建议将apk软件包仓库更换成国内的镜像(例如阿里云的)，这样可以大大提高下载速度，切换仓库源为镜像的这步建议放到基础镜像alpine—glibc中:</p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">RUN</span><span style="color:#E1E4E8;"> sed -i </span><span style="color:#9ECBFF;">&#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#39;</span><span style="color:#E1E4E8;"> /etc/apk/repositories &amp;&amp;\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk update --no-cache &amp;&amp; apk add ca-certificates --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk add tzdata --no-cache</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">RUN</span><span style="color:#24292E;"> sed -i </span><span style="color:#032F62;">&#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#39;</span><span style="color:#24292E;"> /etc/apk/repositories &amp;&amp;\\</span></span>
<span class="line"><span style="color:#24292E;">    apk update --no-cache &amp;&amp; apk add ca-certificates --no-cache &amp;&amp; \\</span></span>
<span class="line"><span style="color:#24292E;">    apk add tzdata --no-cache</span></span></code></pre></div><p>在需要使用apk安装某个软件之前，建议到官方packages网站<a href="https://pkgs.alpinelinux.org/packages" target="_blank" rel="noreferrer">https://pkgs.alpinelinux.org/packages</a> 去搜索一下，在这里可以搜索某个具体软件在某个alpine版本下对应的版本。</p><p><img src="https://nnaigos.oss-cn-hangzhou.aliyuncs.com/imgs/202411091917957.png" alt="image-20241109191730682"></p><p>注意仓库分为<code>main</code>和<code>community</code>两个，另外就是可以直接选择从某个alpine版本的仓库安装具体的版本的软件:</p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">RUN</span><span style="color:#E1E4E8;"> sed -i </span><span style="color:#9ECBFF;">&#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#39;</span><span style="color:#E1E4E8;"> /etc/apk/repositories &amp;&amp;\\</span></span>
<span class="line"><span style="color:#E1E4E8;">    apk add --no-cache go=1.16.5-r0	--repository https://mirrors.aliyun.com/alpine/v3.14/community</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">RUN</span><span style="color:#24292E;"> sed -i </span><span style="color:#032F62;">&#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&#39;</span><span style="color:#24292E;"> /etc/apk/repositories &amp;&amp;\\</span></span>
<span class="line"><span style="color:#24292E;">    apk add --no-cache go=1.16.5-r0	--repository https://mirrors.aliyun.com/alpine/v3.14/community</span></span></code></pre></div><p>另外apk的使用还有一点是要善于利用<code>--virtual</code>参数，将多个包的集合命名为一个名称，方便了后续卸载，例如:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">RUN apk add --no-cache --virtual=.build-dependencies git openssh-client &amp;&amp;\\</span></span>
<span class="line"><span style="color:#e1e4e8;">## ... 使用git openssh-client 做一些操作,但镜像构建完成后不希望git保留在镜像中</span></span>
<span class="line"><span style="color:#e1e4e8;">apk del .build-dependencies</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">RUN apk add --no-cache --virtual=.build-dependencies git openssh-client &amp;&amp;\\</span></span>
<span class="line"><span style="color:#24292e;">## ... 使用git openssh-client 做一些操作,但镜像构建完成后不希望git保留在镜像中</span></span>
<span class="line"><span style="color:#24292e;">apk del .build-dependencies</span></span></code></pre></div><h3 id="_4-cmd指令" tabindex="-1">4.CMD指令 <a class="header-anchor" href="#_4-cmd指令" aria-label="Permalink to &quot;4.CMD指令&quot;">​</a></h3><h3 id="_5-env指令" tabindex="-1">5.ENV指令 <a class="header-anchor" href="#_5-env指令" aria-label="Permalink to &quot;5.ENV指令&quot;">​</a></h3><p>ENV指令用来指定镜像中的环境变量。比如对于mysql镜像我们可以将mysql的bin目录加到环境变量PATH中</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">ENV PATH /usr/local/mysql/bin:$PATH</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">ENV PATH /usr/local/mysql/bin:$PATH</span></span></code></pre></div><p>多个环境变量的指定:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">ENV GRADLE_HOME=/usr/local/gradle \\</span></span>
<span class="line"><span style="color:#e1e4e8;">PATH=/usr/local/gradle/bin:$PATH</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">ENV GRADLE_HOME=/usr/local/gradle \\</span></span>
<span class="line"><span style="color:#24292e;">PATH=/usr/local/gradle/bin:$PATH</span></span></code></pre></div><h3 id="_6-add和copy指令" tabindex="-1">6.ADD和COPY指令 <a class="header-anchor" href="#_6-add和copy指令" aria-label="Permalink to &quot;6.ADD和COPY指令&quot;">​</a></h3><p>ADD和COPY的功能类似，但一般优先使用COPY，因为其功能更单一，只是将本地文件拷贝到容器中。 而ADD还包括压缩文件解压以及下载URL指定的远程文件功能。</p><p>可以用ADD实现将本地的tar.gz文件拷贝并解压缩到镜像中，例如<code>ADD app-deps.tar.xz</code>。 为了保持构建出来的镜像体积最小，不要使用ADD指令从远程URL下载内容，而是使用一个RUN指令里执行curl或者wget先执行下载，使用完下载完的文件后，如果不再需要它可以将它删除。</p><h3 id="_7-volume指令" tabindex="-1">7.VOLUME指令 <a class="header-anchor" href="#_7-volume指令" aria-label="Permalink to &quot;7.VOLUME指令&quot;">​</a></h3><p><code>VOLUME</code>指令创建一个或多个volume，当使用构建出来的镜像启动容器时将自动创建和挂载为匿名的volume</p><h3 id="_8-user指令" tabindex="-1">8.USER指令 <a class="header-anchor" href="#_8-user指令" aria-label="Permalink to &quot;8.USER指令&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">RUN adduser apps -u 9999 -D -H -s /sbin/nologin</span></span>
<span class="line"><span style="color:#e1e4e8;">USER apps</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">RUN adduser apps -u 9999 -D -H -s /sbin/nologin</span></span>
<span class="line"><span style="color:#24292e;">USER apps</span></span></code></pre></div><h3 id="_9-entrypoint指令" tabindex="-1">9.ENTRYPOINT指令 <a class="header-anchor" href="#_9-entrypoint指令" aria-label="Permalink to &quot;9.ENTRYPOINT指令&quot;">​</a></h3><p>官当，<a href="https://docs.docker.com/engine/reference/builder/" target="_blank" rel="noreferrer">https://docs.docker.com/engine/reference/builder/</a></p>`,36),o=[e];function c(t,r,i,E,d,y){return a(),n("div",null,o)}const h=s(l,[["render",c]]);export{A as __pageData,h as default};
