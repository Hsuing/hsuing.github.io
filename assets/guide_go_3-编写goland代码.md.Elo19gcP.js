import{_ as a,o,c as e,R as t}from"./chunks/framework.zUbWieqp.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/go/3-编写goland代码.md","filePath":"guide/go/3-编写goland代码.md","lastUpdated":1701229860000}'),l={name:"guide/go/3-编写goland代码.md"},_=t('<h2 id="_1-代码组织" tabindex="-1">1.代码组织 <a class="header-anchor" href="#_1-代码组织" aria-label="Permalink to &quot;1.代码组织&quot;">​</a></h2><p>go应用使用包和模块来组织代码，包对应到文件系统就是文件夹，模块就是<code>**.go**</code>的go源文件。一个包中会有多个模块，或者多个子包</p><h2 id="_2-go项目管理工具" tabindex="-1">2.go项目管理工具 <a class="header-anchor" href="#_2-go项目管理工具" aria-label="Permalink to &quot;2.go项目管理工具&quot;">​</a></h2><p>早期go项目使用gopath来管理项目，不方便且容易出错，从golang 1.11开始使用gomod管理项目，或者使用第三方govendor，优先使用gomod管理</p><h2 id="_3-实现步骤" tabindex="-1">3.实现步骤 <a class="header-anchor" href="#_3-实现步骤" aria-label="Permalink to &quot;3.实现步骤&quot;">​</a></h2><ol><li>创建项目</li><li>初始化项目</li><li>创建包</li><li>创建模块</li><li>相互调用</li></ol>',6),i=[_];function d(r,n,s,c,g,h){return o(),e("div",null,i)}const u=a(l,[["render",d]]);export{m as __pageData,u as default};
